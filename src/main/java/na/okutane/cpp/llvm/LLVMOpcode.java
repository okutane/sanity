/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public final class LLVMOpcode {
  public final static LLVMOpcode LLVMRet = new LLVMOpcode("LLVMRet", bitreaderJNI.LLVMRet_get());
  public final static LLVMOpcode LLVMBr = new LLVMOpcode("LLVMBr", bitreaderJNI.LLVMBr_get());
  public final static LLVMOpcode LLVMSwitch = new LLVMOpcode("LLVMSwitch", bitreaderJNI.LLVMSwitch_get());
  public final static LLVMOpcode LLVMIndirectBr = new LLVMOpcode("LLVMIndirectBr", bitreaderJNI.LLVMIndirectBr_get());
  public final static LLVMOpcode LLVMInvoke = new LLVMOpcode("LLVMInvoke", bitreaderJNI.LLVMInvoke_get());
  public final static LLVMOpcode LLVMUnreachable = new LLVMOpcode("LLVMUnreachable", bitreaderJNI.LLVMUnreachable_get());
  public final static LLVMOpcode LLVMAdd = new LLVMOpcode("LLVMAdd", bitreaderJNI.LLVMAdd_get());
  public final static LLVMOpcode LLVMFAdd = new LLVMOpcode("LLVMFAdd", bitreaderJNI.LLVMFAdd_get());
  public final static LLVMOpcode LLVMSub = new LLVMOpcode("LLVMSub", bitreaderJNI.LLVMSub_get());
  public final static LLVMOpcode LLVMFSub = new LLVMOpcode("LLVMFSub", bitreaderJNI.LLVMFSub_get());
  public final static LLVMOpcode LLVMMul = new LLVMOpcode("LLVMMul", bitreaderJNI.LLVMMul_get());
  public final static LLVMOpcode LLVMFMul = new LLVMOpcode("LLVMFMul", bitreaderJNI.LLVMFMul_get());
  public final static LLVMOpcode LLVMUDiv = new LLVMOpcode("LLVMUDiv", bitreaderJNI.LLVMUDiv_get());
  public final static LLVMOpcode LLVMSDiv = new LLVMOpcode("LLVMSDiv", bitreaderJNI.LLVMSDiv_get());
  public final static LLVMOpcode LLVMFDiv = new LLVMOpcode("LLVMFDiv", bitreaderJNI.LLVMFDiv_get());
  public final static LLVMOpcode LLVMURem = new LLVMOpcode("LLVMURem", bitreaderJNI.LLVMURem_get());
  public final static LLVMOpcode LLVMSRem = new LLVMOpcode("LLVMSRem", bitreaderJNI.LLVMSRem_get());
  public final static LLVMOpcode LLVMFRem = new LLVMOpcode("LLVMFRem", bitreaderJNI.LLVMFRem_get());
  public final static LLVMOpcode LLVMShl = new LLVMOpcode("LLVMShl", bitreaderJNI.LLVMShl_get());
  public final static LLVMOpcode LLVMLShr = new LLVMOpcode("LLVMLShr", bitreaderJNI.LLVMLShr_get());
  public final static LLVMOpcode LLVMAShr = new LLVMOpcode("LLVMAShr", bitreaderJNI.LLVMAShr_get());
  public final static LLVMOpcode LLVMAnd = new LLVMOpcode("LLVMAnd", bitreaderJNI.LLVMAnd_get());
  public final static LLVMOpcode LLVMOr = new LLVMOpcode("LLVMOr", bitreaderJNI.LLVMOr_get());
  public final static LLVMOpcode LLVMXor = new LLVMOpcode("LLVMXor", bitreaderJNI.LLVMXor_get());
  public final static LLVMOpcode LLVMAlloca = new LLVMOpcode("LLVMAlloca", bitreaderJNI.LLVMAlloca_get());
  public final static LLVMOpcode LLVMLoad = new LLVMOpcode("LLVMLoad", bitreaderJNI.LLVMLoad_get());
  public final static LLVMOpcode LLVMStore = new LLVMOpcode("LLVMStore", bitreaderJNI.LLVMStore_get());
  public final static LLVMOpcode LLVMGetElementPtr = new LLVMOpcode("LLVMGetElementPtr", bitreaderJNI.LLVMGetElementPtr_get());
  public final static LLVMOpcode LLVMTrunc = new LLVMOpcode("LLVMTrunc", bitreaderJNI.LLVMTrunc_get());
  public final static LLVMOpcode LLVMZExt = new LLVMOpcode("LLVMZExt", bitreaderJNI.LLVMZExt_get());
  public final static LLVMOpcode LLVMSExt = new LLVMOpcode("LLVMSExt", bitreaderJNI.LLVMSExt_get());
  public final static LLVMOpcode LLVMFPToUI = new LLVMOpcode("LLVMFPToUI", bitreaderJNI.LLVMFPToUI_get());
  public final static LLVMOpcode LLVMFPToSI = new LLVMOpcode("LLVMFPToSI", bitreaderJNI.LLVMFPToSI_get());
  public final static LLVMOpcode LLVMUIToFP = new LLVMOpcode("LLVMUIToFP", bitreaderJNI.LLVMUIToFP_get());
  public final static LLVMOpcode LLVMSIToFP = new LLVMOpcode("LLVMSIToFP", bitreaderJNI.LLVMSIToFP_get());
  public final static LLVMOpcode LLVMFPTrunc = new LLVMOpcode("LLVMFPTrunc", bitreaderJNI.LLVMFPTrunc_get());
  public final static LLVMOpcode LLVMFPExt = new LLVMOpcode("LLVMFPExt", bitreaderJNI.LLVMFPExt_get());
  public final static LLVMOpcode LLVMPtrToInt = new LLVMOpcode("LLVMPtrToInt", bitreaderJNI.LLVMPtrToInt_get());
  public final static LLVMOpcode LLVMIntToPtr = new LLVMOpcode("LLVMIntToPtr", bitreaderJNI.LLVMIntToPtr_get());
  public final static LLVMOpcode LLVMBitCast = new LLVMOpcode("LLVMBitCast", bitreaderJNI.LLVMBitCast_get());
  public final static LLVMOpcode LLVMAddrSpaceCast = new LLVMOpcode("LLVMAddrSpaceCast", bitreaderJNI.LLVMAddrSpaceCast_get());
  public final static LLVMOpcode LLVMICmp = new LLVMOpcode("LLVMICmp", bitreaderJNI.LLVMICmp_get());
  public final static LLVMOpcode LLVMFCmp = new LLVMOpcode("LLVMFCmp", bitreaderJNI.LLVMFCmp_get());
  public final static LLVMOpcode LLVMPHI = new LLVMOpcode("LLVMPHI", bitreaderJNI.LLVMPHI_get());
  public final static LLVMOpcode LLVMCall = new LLVMOpcode("LLVMCall", bitreaderJNI.LLVMCall_get());
  public final static LLVMOpcode LLVMSelect = new LLVMOpcode("LLVMSelect", bitreaderJNI.LLVMSelect_get());
  public final static LLVMOpcode LLVMUserOp1 = new LLVMOpcode("LLVMUserOp1", bitreaderJNI.LLVMUserOp1_get());
  public final static LLVMOpcode LLVMUserOp2 = new LLVMOpcode("LLVMUserOp2", bitreaderJNI.LLVMUserOp2_get());
  public final static LLVMOpcode LLVMVAArg = new LLVMOpcode("LLVMVAArg", bitreaderJNI.LLVMVAArg_get());
  public final static LLVMOpcode LLVMExtractElement = new LLVMOpcode("LLVMExtractElement", bitreaderJNI.LLVMExtractElement_get());
  public final static LLVMOpcode LLVMInsertElement = new LLVMOpcode("LLVMInsertElement", bitreaderJNI.LLVMInsertElement_get());
  public final static LLVMOpcode LLVMShuffleVector = new LLVMOpcode("LLVMShuffleVector", bitreaderJNI.LLVMShuffleVector_get());
  public final static LLVMOpcode LLVMExtractValue = new LLVMOpcode("LLVMExtractValue", bitreaderJNI.LLVMExtractValue_get());
  public final static LLVMOpcode LLVMInsertValue = new LLVMOpcode("LLVMInsertValue", bitreaderJNI.LLVMInsertValue_get());
  public final static LLVMOpcode LLVMFence = new LLVMOpcode("LLVMFence", bitreaderJNI.LLVMFence_get());
  public final static LLVMOpcode LLVMAtomicCmpXchg = new LLVMOpcode("LLVMAtomicCmpXchg", bitreaderJNI.LLVMAtomicCmpXchg_get());
  public final static LLVMOpcode LLVMAtomicRMW = new LLVMOpcode("LLVMAtomicRMW", bitreaderJNI.LLVMAtomicRMW_get());
  public final static LLVMOpcode LLVMResume = new LLVMOpcode("LLVMResume", bitreaderJNI.LLVMResume_get());
  public final static LLVMOpcode LLVMLandingPad = new LLVMOpcode("LLVMLandingPad", bitreaderJNI.LLVMLandingPad_get());
  public final static LLVMOpcode LLVMCleanupRet = new LLVMOpcode("LLVMCleanupRet", bitreaderJNI.LLVMCleanupRet_get());
  public final static LLVMOpcode LLVMCatchRet = new LLVMOpcode("LLVMCatchRet", bitreaderJNI.LLVMCatchRet_get());
  public final static LLVMOpcode LLVMCatchPad = new LLVMOpcode("LLVMCatchPad", bitreaderJNI.LLVMCatchPad_get());
  public final static LLVMOpcode LLVMCleanupPad = new LLVMOpcode("LLVMCleanupPad", bitreaderJNI.LLVMCleanupPad_get());
  public final static LLVMOpcode LLVMCatchSwitch = new LLVMOpcode("LLVMCatchSwitch", bitreaderJNI.LLVMCatchSwitch_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static LLVMOpcode swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + LLVMOpcode.class + " with value " + swigValue);
  }

  private LLVMOpcode(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private LLVMOpcode(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private LLVMOpcode(String swigName, LLVMOpcode swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static LLVMOpcode[] swigValues = { LLVMRet, LLVMBr, LLVMSwitch, LLVMIndirectBr, LLVMInvoke, LLVMUnreachable, LLVMAdd, LLVMFAdd, LLVMSub, LLVMFSub, LLVMMul, LLVMFMul, LLVMUDiv, LLVMSDiv, LLVMFDiv, LLVMURem, LLVMSRem, LLVMFRem, LLVMShl, LLVMLShr, LLVMAShr, LLVMAnd, LLVMOr, LLVMXor, LLVMAlloca, LLVMLoad, LLVMStore, LLVMGetElementPtr, LLVMTrunc, LLVMZExt, LLVMSExt, LLVMFPToUI, LLVMFPToSI, LLVMUIToFP, LLVMSIToFP, LLVMFPTrunc, LLVMFPExt, LLVMPtrToInt, LLVMIntToPtr, LLVMBitCast, LLVMAddrSpaceCast, LLVMICmp, LLVMFCmp, LLVMPHI, LLVMCall, LLVMSelect, LLVMUserOp1, LLVMUserOp2, LLVMVAArg, LLVMExtractElement, LLVMInsertElement, LLVMShuffleVector, LLVMExtractValue, LLVMInsertValue, LLVMFence, LLVMAtomicCmpXchg, LLVMAtomicRMW, LLVMResume, LLVMLandingPad, LLVMCleanupRet, LLVMCatchRet, LLVMCatchPad, LLVMCleanupPad, LLVMCatchSwitch };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

