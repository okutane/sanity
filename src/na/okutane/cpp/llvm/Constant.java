/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class Constant {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Constant(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Constant obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        bitreaderJNI.delete_Constant(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean isNullValue() {
    return bitreaderJNI.Constant_isNullValue(swigCPtr, this);
  }

  public boolean isAllOnesValue() {
    return bitreaderJNI.Constant_isAllOnesValue(swigCPtr, this);
  }

  public boolean isNegativeZeroValue() {
    return bitreaderJNI.Constant_isNegativeZeroValue(swigCPtr, this);
  }

  public boolean isZeroValue() {
    return bitreaderJNI.Constant_isZeroValue(swigCPtr, this);
  }

  public boolean canTrap() {
    return bitreaderJNI.Constant_canTrap(swigCPtr, this);
  }

  public boolean isThreadDependent() {
    return bitreaderJNI.Constant_isThreadDependent(swigCPtr, this);
  }

  public boolean isConstantUsed() {
    return bitreaderJNI.Constant_isConstantUsed(swigCPtr, this);
  }

  public Constant.PossibleRelocationsTy getRelocationInfo() {
    return Constant.PossibleRelocationsTy.swigToEnum(bitreaderJNI.Constant_getRelocationInfo(swigCPtr, this));
  }

  public Constant getAggregateElement(long Elt) {
    long cPtr = bitreaderJNI.Constant_getAggregateElement__SWIG_0(swigCPtr, this, Elt);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public Constant getAggregateElement(Constant Elt) {
    long cPtr = bitreaderJNI.Constant_getAggregateElement__SWIG_1(swigCPtr, this, Constant.getCPtr(Elt), Elt);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public Constant getSplatValue() {
    long cPtr = bitreaderJNI.Constant_getSplatValue(swigCPtr, this);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public APInt getUniqueInteger() {
    return new APInt(bitreaderJNI.Constant_getUniqueInteger(swigCPtr, this), false);
  }

  public void destroyConstant() {
    bitreaderJNI.Constant_destroyConstant(swigCPtr, this);
  }

  public static boolean classof(Value V) {
    return bitreaderJNI.Constant_classof(Value.getCPtr(V), V);
  }

  public void replaceUsesOfWithOnConstant(Value arg0, Value arg1, SWIGTYPE_p_Use arg2) {
    bitreaderJNI.Constant_replaceUsesOfWithOnConstant(swigCPtr, this, Value.getCPtr(arg0), arg0, Value.getCPtr(arg1), arg1, SWIGTYPE_p_Use.getCPtr(arg2));
  }

  public static Constant getNullValue(Type Ty) {
    long cPtr = bitreaderJNI.Constant_getNullValue(Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getAllOnesValue(Type Ty) {
    long cPtr = bitreaderJNI.Constant_getAllOnesValue(Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getIntegerValue(Type Ty, APInt V) {
    long cPtr = bitreaderJNI.Constant_getIntegerValue(Type.getCPtr(Ty), Ty, APInt.getCPtr(V), V);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public void removeDeadConstantUsers() {
    bitreaderJNI.Constant_removeDeadConstantUsers(swigCPtr, this);
  }

  public final static class PossibleRelocationsTy {
    public final static Constant.PossibleRelocationsTy NoRelocation = new Constant.PossibleRelocationsTy("NoRelocation", bitreaderJNI.Constant_NoRelocation_get());
    public final static Constant.PossibleRelocationsTy LocalRelocation = new Constant.PossibleRelocationsTy("LocalRelocation", bitreaderJNI.Constant_LocalRelocation_get());
    public final static Constant.PossibleRelocationsTy GlobalRelocations = new Constant.PossibleRelocationsTy("GlobalRelocations", bitreaderJNI.Constant_GlobalRelocations_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static PossibleRelocationsTy swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + PossibleRelocationsTy.class + " with value " + swigValue);
    }

    private PossibleRelocationsTy(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private PossibleRelocationsTy(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private PossibleRelocationsTy(String swigName, PossibleRelocationsTy swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static PossibleRelocationsTy[] swigValues = { NoRelocation, LocalRelocation, GlobalRelocations };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
