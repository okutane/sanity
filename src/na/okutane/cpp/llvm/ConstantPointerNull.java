/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class ConstantPointerNull extends Constant {
  private long swigCPtr;

  protected ConstantPointerNull(long cPtr, boolean cMemoryOwn) {
    super(bitreaderJNI.ConstantPointerNull_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ConstantPointerNull obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        bitreaderJNI.delete_ConstantPointerNull(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static ConstantPointerNull get(SWIGTYPE_p_llvm__PointerType T) {
    long cPtr = bitreaderJNI.ConstantPointerNull_get(SWIGTYPE_p_llvm__PointerType.getCPtr(T));
    return (cPtr == 0) ? null : new ConstantPointerNull(cPtr, false);
  }

  public void destroyConstant() {
    bitreaderJNI.ConstantPointerNull_destroyConstant(swigCPtr, this);
  }

  public SWIGTYPE_p_llvm__PointerType getType() {
    long cPtr = bitreaderJNI.ConstantPointerNull_getType(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static boolean classof(Value V) {
    return bitreaderJNI.ConstantPointerNull_classof(Value.getCPtr(V), V);
  }

}
