/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class Type {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Type(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Type obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  public void print(SWIGTYPE_p_llvm__raw_ostream O) {
    bitreaderJNI.Type_print(swigCPtr, this, SWIGTYPE_p_llvm__raw_ostream.getCPtr(O));
  }

  public void dump() {
    bitreaderJNI.Type_dump(swigCPtr, this);
  }

  public LLVMContext getContext() {
    return new LLVMContext(bitreaderJNI.Type_getContext(swigCPtr, this), false);
  }

  public Type.TypeID getTypeID() {
    return Type.TypeID.swigToEnum(bitreaderJNI.Type_getTypeID(swigCPtr, this));
  }

  public boolean isVoidTy() {
    return bitreaderJNI.Type_isVoidTy(swigCPtr, this);
  }

  public boolean isHalfTy() {
    return bitreaderJNI.Type_isHalfTy(swigCPtr, this);
  }

  public boolean isFloatTy() {
    return bitreaderJNI.Type_isFloatTy(swigCPtr, this);
  }

  public boolean isDoubleTy() {
    return bitreaderJNI.Type_isDoubleTy(swigCPtr, this);
  }

  public boolean isX86_FP80Ty() {
    return bitreaderJNI.Type_isX86_FP80Ty(swigCPtr, this);
  }

  public boolean isFP128Ty() {
    return bitreaderJNI.Type_isFP128Ty(swigCPtr, this);
  }

  public boolean isPPC_FP128Ty() {
    return bitreaderJNI.Type_isPPC_FP128Ty(swigCPtr, this);
  }

  public boolean isFloatingPointTy() {
    return bitreaderJNI.Type_isFloatingPointTy(swigCPtr, this);
  }

  public SWIGTYPE_p_fltSemantics getFltSemantics() {
    return new SWIGTYPE_p_fltSemantics(bitreaderJNI.Type_getFltSemantics(swigCPtr, this), false);
  }

  public boolean isX86_MMXTy() {
    return bitreaderJNI.Type_isX86_MMXTy(swigCPtr, this);
  }

  public boolean isFPOrFPVectorTy() {
    return bitreaderJNI.Type_isFPOrFPVectorTy(swigCPtr, this);
  }

  public boolean isLabelTy() {
    return bitreaderJNI.Type_isLabelTy(swigCPtr, this);
  }

  public boolean isMetadataTy() {
    return bitreaderJNI.Type_isMetadataTy(swigCPtr, this);
  }

  public boolean isIntegerTy() {
    return bitreaderJNI.Type_isIntegerTy__SWIG_0(swigCPtr, this);
  }

  public boolean isIntegerTy(long Bitwidth) {
    return bitreaderJNI.Type_isIntegerTy__SWIG_1(swigCPtr, this, Bitwidth);
  }

  public boolean isIntOrIntVectorTy() {
    return bitreaderJNI.Type_isIntOrIntVectorTy(swigCPtr, this);
  }

  public boolean isFunctionTy() {
    return bitreaderJNI.Type_isFunctionTy(swigCPtr, this);
  }

  public boolean isStructTy() {
    return bitreaderJNI.Type_isStructTy(swigCPtr, this);
  }

  public boolean isArrayTy() {
    return bitreaderJNI.Type_isArrayTy(swigCPtr, this);
  }

  public boolean isPointerTy() {
    return bitreaderJNI.Type_isPointerTy(swigCPtr, this);
  }

  public boolean isPtrOrPtrVectorTy() {
    return bitreaderJNI.Type_isPtrOrPtrVectorTy(swigCPtr, this);
  }

  public boolean isVectorTy() {
    return bitreaderJNI.Type_isVectorTy(swigCPtr, this);
  }

  public boolean canLosslesslyBitCastTo(Type Ty) {
    return bitreaderJNI.Type_canLosslesslyBitCastTo(swigCPtr, this, Type.getCPtr(Ty), Ty);
  }

  public boolean isEmptyTy() {
    return bitreaderJNI.Type_isEmptyTy(swigCPtr, this);
  }

  public boolean isPrimitiveType() {
    return bitreaderJNI.Type_isPrimitiveType(swigCPtr, this);
  }

  public boolean isDerivedType() {
    return bitreaderJNI.Type_isDerivedType(swigCPtr, this);
  }

  public boolean isFirstClassType() {
    return bitreaderJNI.Type_isFirstClassType(swigCPtr, this);
  }

  public boolean isSingleValueType() {
    return bitreaderJNI.Type_isSingleValueType(swigCPtr, this);
  }

  public boolean isAggregateType() {
    return bitreaderJNI.Type_isAggregateType(swigCPtr, this);
  }

  public boolean isSized() {
    return bitreaderJNI.Type_isSized(swigCPtr, this);
  }

  public long getPrimitiveSizeInBits() {
    return bitreaderJNI.Type_getPrimitiveSizeInBits(swigCPtr, this);
  }

  public long getScalarSizeInBits() {
    return bitreaderJNI.Type_getScalarSizeInBits(swigCPtr, this);
  }

  public int getFPMantissaWidth() {
    return bitreaderJNI.Type_getFPMantissaWidth(swigCPtr, this);
  }

  public Type getScalarType() {
    long cPtr = bitreaderJNI.Type_getScalarType__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public SWIGTYPE_p_p_llvm__Type subtype_begin() {
    long cPtr = bitreaderJNI.Type_subtype_begin(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_llvm__Type(cPtr, false);
  }

  public SWIGTYPE_p_p_llvm__Type subtype_end() {
    long cPtr = bitreaderJNI.Type_subtype_end(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_llvm__Type(cPtr, false);
  }

  public Type getContainedType(long i) {
    long cPtr = bitreaderJNI.Type_getContainedType(swigCPtr, this, i);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public long getNumContainedTypes() {
    return bitreaderJNI.Type_getNumContainedTypes(swigCPtr, this);
  }

  public long getIntegerBitWidth() {
    return bitreaderJNI.Type_getIntegerBitWidth(swigCPtr, this);
  }

  public Type getFunctionParamType(long i) {
    long cPtr = bitreaderJNI.Type_getFunctionParamType(swigCPtr, this, i);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public long getFunctionNumParams() {
    return bitreaderJNI.Type_getFunctionNumParams(swigCPtr, this);
  }

  public boolean isFunctionVarArg() {
    return bitreaderJNI.Type_isFunctionVarArg(swigCPtr, this);
  }

  public StringRef getStructName() {
    return new StringRef(bitreaderJNI.Type_getStructName(swigCPtr, this), true);
  }

  public long getStructNumElements() {
    return bitreaderJNI.Type_getStructNumElements(swigCPtr, this);
  }

  public Type getStructElementType(long N) {
    long cPtr = bitreaderJNI.Type_getStructElementType(swigCPtr, this, N);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public Type getSequentialElementType() {
    long cPtr = bitreaderJNI.Type_getSequentialElementType(swigCPtr, this);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public SWIGTYPE_p_uint64_t getArrayNumElements() {
    return new SWIGTYPE_p_uint64_t(bitreaderJNI.Type_getArrayNumElements(swigCPtr, this), true);
  }

  public Type getArrayElementType() {
    long cPtr = bitreaderJNI.Type_getArrayElementType(swigCPtr, this);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public long getVectorNumElements() {
    return bitreaderJNI.Type_getVectorNumElements(swigCPtr, this);
  }

  public Type getVectorElementType() {
    long cPtr = bitreaderJNI.Type_getVectorElementType(swigCPtr, this);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public Type getPointerElementType() {
    long cPtr = bitreaderJNI.Type_getPointerElementType(swigCPtr, this);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public long getPointerAddressSpace() {
    return bitreaderJNI.Type_getPointerAddressSpace(swigCPtr, this);
  }

  public static Type getPrimitiveType(LLVMContext C, Type.TypeID IDNumber) {
    long cPtr = bitreaderJNI.Type_getPrimitiveType(LLVMContext.getCPtr(C), C, IDNumber.swigValue());
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public static Type getVoidTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getVoidTy(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public static Type getLabelTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getLabelTy(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public static Type getHalfTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getHalfTy(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public static Type getFloatTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getFloatTy(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public static Type getDoubleTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getDoubleTy(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public static Type getMetadataTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getMetadataTy(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public static Type getX86_FP80Ty(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getX86_FP80Ty(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public static Type getFP128Ty(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getFP128Ty(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public static Type getPPC_FP128Ty(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getPPC_FP128Ty(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public static Type getX86_MMXTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getX86_MMXTy(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new Type(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__IntegerType getIntNTy(LLVMContext C, long N) {
    long cPtr = bitreaderJNI.Type_getIntNTy(LLVMContext.getCPtr(C), C, N);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__IntegerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__IntegerType getInt1Ty(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getInt1Ty(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__IntegerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__IntegerType getInt8Ty(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getInt8Ty(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__IntegerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__IntegerType getInt16Ty(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getInt16Ty(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__IntegerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__IntegerType getInt32Ty(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getInt32Ty(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__IntegerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__IntegerType getInt64Ty(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getInt64Ty(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__IntegerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getHalfPtrTy(LLVMContext C, long AS) {
    long cPtr = bitreaderJNI.Type_getHalfPtrTy__SWIG_0(LLVMContext.getCPtr(C), C, AS);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getHalfPtrTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getHalfPtrTy__SWIG_1(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getFloatPtrTy(LLVMContext C, long AS) {
    long cPtr = bitreaderJNI.Type_getFloatPtrTy__SWIG_0(LLVMContext.getCPtr(C), C, AS);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getFloatPtrTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getFloatPtrTy__SWIG_1(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getDoublePtrTy(LLVMContext C, long AS) {
    long cPtr = bitreaderJNI.Type_getDoublePtrTy__SWIG_0(LLVMContext.getCPtr(C), C, AS);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getDoublePtrTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getDoublePtrTy__SWIG_1(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getX86_FP80PtrTy(LLVMContext C, long AS) {
    long cPtr = bitreaderJNI.Type_getX86_FP80PtrTy__SWIG_0(LLVMContext.getCPtr(C), C, AS);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getX86_FP80PtrTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getX86_FP80PtrTy__SWIG_1(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getFP128PtrTy(LLVMContext C, long AS) {
    long cPtr = bitreaderJNI.Type_getFP128PtrTy__SWIG_0(LLVMContext.getCPtr(C), C, AS);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getFP128PtrTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getFP128PtrTy__SWIG_1(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getPPC_FP128PtrTy(LLVMContext C, long AS) {
    long cPtr = bitreaderJNI.Type_getPPC_FP128PtrTy__SWIG_0(LLVMContext.getCPtr(C), C, AS);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getPPC_FP128PtrTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getPPC_FP128PtrTy__SWIG_1(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getX86_MMXPtrTy(LLVMContext C, long AS) {
    long cPtr = bitreaderJNI.Type_getX86_MMXPtrTy__SWIG_0(LLVMContext.getCPtr(C), C, AS);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getX86_MMXPtrTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getX86_MMXPtrTy__SWIG_1(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getIntNPtrTy(LLVMContext C, long N, long AS) {
    long cPtr = bitreaderJNI.Type_getIntNPtrTy__SWIG_0(LLVMContext.getCPtr(C), C, N, AS);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getIntNPtrTy(LLVMContext C, long N) {
    long cPtr = bitreaderJNI.Type_getIntNPtrTy__SWIG_1(LLVMContext.getCPtr(C), C, N);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getInt1PtrTy(LLVMContext C, long AS) {
    long cPtr = bitreaderJNI.Type_getInt1PtrTy__SWIG_0(LLVMContext.getCPtr(C), C, AS);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getInt1PtrTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getInt1PtrTy__SWIG_1(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getInt8PtrTy(LLVMContext C, long AS) {
    long cPtr = bitreaderJNI.Type_getInt8PtrTy__SWIG_0(LLVMContext.getCPtr(C), C, AS);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getInt8PtrTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getInt8PtrTy__SWIG_1(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getInt16PtrTy(LLVMContext C, long AS) {
    long cPtr = bitreaderJNI.Type_getInt16PtrTy__SWIG_0(LLVMContext.getCPtr(C), C, AS);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getInt16PtrTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getInt16PtrTy__SWIG_1(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getInt32PtrTy(LLVMContext C, long AS) {
    long cPtr = bitreaderJNI.Type_getInt32PtrTy__SWIG_0(LLVMContext.getCPtr(C), C, AS);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getInt32PtrTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getInt32PtrTy__SWIG_1(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getInt64PtrTy(LLVMContext C, long AS) {
    long cPtr = bitreaderJNI.Type_getInt64PtrTy__SWIG_0(LLVMContext.getCPtr(C), C, AS);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public static SWIGTYPE_p_llvm__PointerType getInt64PtrTy(LLVMContext C) {
    long cPtr = bitreaderJNI.Type_getInt64PtrTy__SWIG_1(LLVMContext.getCPtr(C), C);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public SWIGTYPE_p_llvm__PointerType getPointerTo(long AddrSpace) {
    long cPtr = bitreaderJNI.Type_getPointerTo__SWIG_0(swigCPtr, this, AddrSpace);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public SWIGTYPE_p_llvm__PointerType getPointerTo() {
    long cPtr = bitreaderJNI.Type_getPointerTo__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__PointerType(cPtr, false);
  }

  public final static class TypeID {
    public final static Type.TypeID VoidTyID = new Type.TypeID("VoidTyID", bitreaderJNI.Type_VoidTyID_get());
    public final static Type.TypeID HalfTyID = new Type.TypeID("HalfTyID");
    public final static Type.TypeID FloatTyID = new Type.TypeID("FloatTyID");
    public final static Type.TypeID DoubleTyID = new Type.TypeID("DoubleTyID");
    public final static Type.TypeID X86_FP80TyID = new Type.TypeID("X86_FP80TyID");
    public final static Type.TypeID FP128TyID = new Type.TypeID("FP128TyID");
    public final static Type.TypeID PPC_FP128TyID = new Type.TypeID("PPC_FP128TyID");
    public final static Type.TypeID LabelTyID = new Type.TypeID("LabelTyID");
    public final static Type.TypeID MetadataTyID = new Type.TypeID("MetadataTyID");
    public final static Type.TypeID X86_MMXTyID = new Type.TypeID("X86_MMXTyID");
    public final static Type.TypeID IntegerTyID = new Type.TypeID("IntegerTyID");
    public final static Type.TypeID FunctionTyID = new Type.TypeID("FunctionTyID");
    public final static Type.TypeID StructTyID = new Type.TypeID("StructTyID");
    public final static Type.TypeID ArrayTyID = new Type.TypeID("ArrayTyID");
    public final static Type.TypeID PointerTyID = new Type.TypeID("PointerTyID");
    public final static Type.TypeID VectorTyID = new Type.TypeID("VectorTyID");
    public final static Type.TypeID NumTypeIDs = new Type.TypeID("NumTypeIDs");
    public final static Type.TypeID LastPrimitiveTyID = new Type.TypeID("LastPrimitiveTyID", bitreaderJNI.Type_LastPrimitiveTyID_get());
    public final static Type.TypeID FirstDerivedTyID = new Type.TypeID("FirstDerivedTyID", bitreaderJNI.Type_FirstDerivedTyID_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static TypeID swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + TypeID.class + " with value " + swigValue);
    }

    private TypeID(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private TypeID(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private TypeID(String swigName, TypeID swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static TypeID[] swigValues = { VoidTyID, HalfTyID, FloatTyID, DoubleTyID, X86_FP80TyID, FP128TyID, PPC_FP128TyID, LabelTyID, MetadataTyID, X86_MMXTyID, IntegerTyID, FunctionTyID, StructTyID, ArrayTyID, PointerTyID, VectorTyID, NumTypeIDs, LastPrimitiveTyID, FirstDerivedTyID };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
