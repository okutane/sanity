/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class Module {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Module(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Module obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        bitreaderJNI.delete_Module(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  static public class ModuleFlagEntry {
    private long swigCPtr;
    protected boolean swigCMemOwn;
  
    protected ModuleFlagEntry(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(ModuleFlagEntry obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          bitreaderJNI.delete_Module_ModuleFlagEntry(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setBehavior(Module.ModFlagBehavior value) {
      bitreaderJNI.Module_ModuleFlagEntry_Behavior_set(swigCPtr, this, value.swigValue());
    }
  
    public Module.ModFlagBehavior getBehavior() {
      return Module.ModFlagBehavior.swigToEnum(bitreaderJNI.Module_ModuleFlagEntry_Behavior_get(swigCPtr, this));
    }
  
    public void setKey(MDString value) {
      bitreaderJNI.Module_ModuleFlagEntry_Key_set(swigCPtr, this, MDString.getCPtr(value), value);
    }
  
    public MDString getKey() {
      long cPtr = bitreaderJNI.Module_ModuleFlagEntry_Key_get(swigCPtr, this);
      return (cPtr == 0) ? null : new MDString(cPtr, false);
    }
  
    public void setVal(Value value) {
      bitreaderJNI.Module_ModuleFlagEntry_Val_set(swigCPtr, this, Value.getCPtr(value), value);
    }
  
    public Value getVal() {
      long cPtr = bitreaderJNI.Module_ModuleFlagEntry_Val_get(swigCPtr, this);
      return (cPtr == 0) ? null : new Value(cPtr, false);
    }
  
    public ModuleFlagEntry(Module.ModFlagBehavior B, MDString K, Value V) {
      this(bitreaderJNI.new_Module_ModuleFlagEntry(B.swigValue(), MDString.getCPtr(K), K, Value.getCPtr(V), V), true);
    }
  
  }

  public Module(StringRef ModuleID, LLVMContext C) {
    this(bitreaderJNI.new_Module(StringRef.getCPtr(ModuleID), ModuleID, LLVMContext.getCPtr(C), C), true);
  }

  public String getModuleIdentifier() {
    return bitreaderJNI.Module_getModuleIdentifier(swigCPtr, this);
  }

  public String getDataLayout() {
    return bitreaderJNI.Module_getDataLayout(swigCPtr, this);
  }

  public String getTargetTriple() {
    return bitreaderJNI.Module_getTargetTriple(swigCPtr, this);
  }

  public Module.Endianness getEndianness() {
    return Module.Endianness.swigToEnum(bitreaderJNI.Module_getEndianness(swigCPtr, this));
  }

  public Module.PointerSize getPointerSize() {
    return Module.PointerSize.swigToEnum(bitreaderJNI.Module_getPointerSize(swigCPtr, this));
  }

  public LLVMContext getContext() {
    return new LLVMContext(bitreaderJNI.Module_getContext(swigCPtr, this), false);
  }

  public String getModuleInlineAsm() {
    return bitreaderJNI.Module_getModuleInlineAsm(swigCPtr, this);
  }

  public void setModuleIdentifier(StringRef ID) {
    bitreaderJNI.Module_setModuleIdentifier(swigCPtr, this, StringRef.getCPtr(ID), ID);
  }

  public void setDataLayout(StringRef DL) {
    bitreaderJNI.Module_setDataLayout(swigCPtr, this, StringRef.getCPtr(DL), DL);
  }

  public void setTargetTriple(StringRef T) {
    bitreaderJNI.Module_setTargetTriple(swigCPtr, this, StringRef.getCPtr(T), T);
  }

  public void setModuleInlineAsm(StringRef Asm) {
    bitreaderJNI.Module_setModuleInlineAsm(swigCPtr, this, StringRef.getCPtr(Asm), Asm);
  }

  public void appendModuleInlineAsm(StringRef Asm) {
    bitreaderJNI.Module_appendModuleInlineAsm(swigCPtr, this, StringRef.getCPtr(Asm), Asm);
  }

  public GlobalValue getNamedValue(StringRef Name) {
    long cPtr = bitreaderJNI.Module_getNamedValue(swigCPtr, this, StringRef.getCPtr(Name), Name);
    return (cPtr == 0) ? null : new GlobalValue(cPtr, false);
  }

  public long getMDKindID(StringRef Name) {
    return bitreaderJNI.Module_getMDKindID(swigCPtr, this, StringRef.getCPtr(Name), Name);
  }

  public void getMDKindNames(SWIGTYPE_p_llvm__SmallVectorImplT_llvm__StringRef_t Result) {
    bitreaderJNI.Module_getMDKindNames(swigCPtr, this, SWIGTYPE_p_llvm__SmallVectorImplT_llvm__StringRef_t.getCPtr(Result));
  }

  public SWIGTYPE_p_llvm__StructType getTypeByName(StringRef Name) {
    long cPtr = bitreaderJNI.Module_getTypeByName(swigCPtr, this, StringRef.getCPtr(Name), Name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__StructType(cPtr, false);
  }

  public Constant getOrInsertFunction(StringRef Name, SWIGTYPE_p_llvm__FunctionType T, SWIGTYPE_p_AttributeSet AttributeList) {
    long cPtr = bitreaderJNI.Module_getOrInsertFunction__SWIG_0(swigCPtr, this, StringRef.getCPtr(Name), Name, SWIGTYPE_p_llvm__FunctionType.getCPtr(T), SWIGTYPE_p_AttributeSet.getCPtr(AttributeList));
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public Constant getOrInsertFunction(StringRef Name, SWIGTYPE_p_llvm__FunctionType T) {
    long cPtr = bitreaderJNI.Module_getOrInsertFunction__SWIG_1(swigCPtr, this, StringRef.getCPtr(Name), Name, SWIGTYPE_p_llvm__FunctionType.getCPtr(T));
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public Constant getOrInsertFunction(StringRef Name, SWIGTYPE_p_AttributeSet AttributeList, Type RetTy) {
    long cPtr = bitreaderJNI.Module_getOrInsertFunction__SWIG_2(swigCPtr, this, StringRef.getCPtr(Name), Name, SWIGTYPE_p_AttributeSet.getCPtr(AttributeList), Type.getCPtr(RetTy), RetTy);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public Constant getOrInsertFunction(StringRef Name, Type RetTy) {
    long cPtr = bitreaderJNI.Module_getOrInsertFunction__SWIG_3(swigCPtr, this, StringRef.getCPtr(Name), Name, Type.getCPtr(RetTy), RetTy);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public Constant getOrInsertTargetIntrinsic(StringRef Name, SWIGTYPE_p_llvm__FunctionType Ty, SWIGTYPE_p_AttributeSet AttributeList) {
    long cPtr = bitreaderJNI.Module_getOrInsertTargetIntrinsic(swigCPtr, this, StringRef.getCPtr(Name), Name, SWIGTYPE_p_llvm__FunctionType.getCPtr(Ty), SWIGTYPE_p_AttributeSet.getCPtr(AttributeList));
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public Function getFunction(StringRef Name) {
    long cPtr = bitreaderJNI.Module_getFunction(swigCPtr, this, StringRef.getCPtr(Name), Name);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public SWIGTYPE_p_llvm__GlobalVariable getGlobalVariable(StringRef Name, boolean AllowInternal) {
    long cPtr = bitreaderJNI.Module_getGlobalVariable__SWIG_0(swigCPtr, this, StringRef.getCPtr(Name), Name, AllowInternal);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__GlobalVariable(cPtr, false);
  }

  public SWIGTYPE_p_llvm__GlobalVariable getGlobalVariable(StringRef Name) {
    long cPtr = bitreaderJNI.Module_getGlobalVariable__SWIG_1(swigCPtr, this, StringRef.getCPtr(Name), Name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__GlobalVariable(cPtr, false);
  }

  public SWIGTYPE_p_llvm__GlobalVariable getNamedGlobal(StringRef Name) {
    long cPtr = bitreaderJNI.Module_getNamedGlobal(swigCPtr, this, StringRef.getCPtr(Name), Name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__GlobalVariable(cPtr, false);
  }

  public Constant getOrInsertGlobal(StringRef Name, Type Ty) {
    long cPtr = bitreaderJNI.Module_getOrInsertGlobal(swigCPtr, this, StringRef.getCPtr(Name), Name, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public SWIGTYPE_p_llvm__GlobalAlias getNamedAlias(StringRef Name) {
    long cPtr = bitreaderJNI.Module_getNamedAlias(swigCPtr, this, StringRef.getCPtr(Name), Name);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__GlobalAlias(cPtr, false);
  }

  public NamedMDNode getNamedMetadata(SWIGTYPE_p_llvm__Twine Name) {
    long cPtr = bitreaderJNI.Module_getNamedMetadata(swigCPtr, this, SWIGTYPE_p_llvm__Twine.getCPtr(Name));
    return (cPtr == 0) ? null : new NamedMDNode(cPtr, false);
  }

  public NamedMDNode getOrInsertNamedMetadata(StringRef Name) {
    long cPtr = bitreaderJNI.Module_getOrInsertNamedMetadata(swigCPtr, this, StringRef.getCPtr(Name), Name);
    return (cPtr == 0) ? null : new NamedMDNode(cPtr, false);
  }

  public void eraseNamedMetadata(NamedMDNode NMD) {
    bitreaderJNI.Module_eraseNamedMetadata(swigCPtr, this, NamedMDNode.getCPtr(NMD), NMD);
  }

  public void getModuleFlagsMetadata(SWIGTYPE_p_llvm__SmallVectorImplT_llvm__Module__ModuleFlagEntry_t Flags) {
    bitreaderJNI.Module_getModuleFlagsMetadata__SWIG_0(swigCPtr, this, SWIGTYPE_p_llvm__SmallVectorImplT_llvm__Module__ModuleFlagEntry_t.getCPtr(Flags));
  }

  public NamedMDNode getModuleFlagsMetadata() {
    long cPtr = bitreaderJNI.Module_getModuleFlagsMetadata__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new NamedMDNode(cPtr, false);
  }

  public NamedMDNode getOrInsertModuleFlagsMetadata() {
    long cPtr = bitreaderJNI.Module_getOrInsertModuleFlagsMetadata(swigCPtr, this);
    return (cPtr == 0) ? null : new NamedMDNode(cPtr, false);
  }

  public void addModuleFlag(Module.ModFlagBehavior Behavior, StringRef Key, Value Val) {
    bitreaderJNI.Module_addModuleFlag__SWIG_0(swigCPtr, this, Behavior.swigValue(), StringRef.getCPtr(Key), Key, Value.getCPtr(Val), Val);
  }

  public void addModuleFlag(Module.ModFlagBehavior Behavior, StringRef Key, SWIGTYPE_p_uint32_t Val) {
    bitreaderJNI.Module_addModuleFlag__SWIG_1(swigCPtr, this, Behavior.swigValue(), StringRef.getCPtr(Key), Key, SWIGTYPE_p_uint32_t.getCPtr(Val));
  }

  public void addModuleFlag(MDNode Node) {
    bitreaderJNI.Module_addModuleFlag__SWIG_2(swigCPtr, this, MDNode.getCPtr(Node), Node);
  }

  public void setMaterializer(SWIGTYPE_p_llvm__GVMaterializer GVM) {
    bitreaderJNI.Module_setMaterializer(swigCPtr, this, SWIGTYPE_p_llvm__GVMaterializer.getCPtr(GVM));
  }

  public SWIGTYPE_p_llvm__GVMaterializer getMaterializer() {
    long cPtr = bitreaderJNI.Module_getMaterializer(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__GVMaterializer(cPtr, false);
  }

  public boolean isMaterializable(GlobalValue GV) {
    return bitreaderJNI.Module_isMaterializable(swigCPtr, this, GlobalValue.getCPtr(GV), GV);
  }

  public boolean isDematerializable(GlobalValue GV) {
    return bitreaderJNI.Module_isDematerializable(swigCPtr, this, GlobalValue.getCPtr(GV), GV);
  }

  public boolean Materialize(GlobalValue GV, SWIGTYPE_p_std__string ErrInfo) {
    return bitreaderJNI.Module_Materialize__SWIG_0(swigCPtr, this, GlobalValue.getCPtr(GV), GV, SWIGTYPE_p_std__string.getCPtr(ErrInfo));
  }

  public boolean Materialize(GlobalValue GV) {
    return bitreaderJNI.Module_Materialize__SWIG_1(swigCPtr, this, GlobalValue.getCPtr(GV), GV);
  }

  public void Dematerialize(GlobalValue GV) {
    bitreaderJNI.Module_Dematerialize(swigCPtr, this, GlobalValue.getCPtr(GV), GV);
  }

  public boolean MaterializeAll(SWIGTYPE_p_std__string ErrInfo) {
    return bitreaderJNI.Module_MaterializeAll__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ErrInfo));
  }

  public boolean MaterializeAll() {
    return bitreaderJNI.Module_MaterializeAll__SWIG_1(swigCPtr, this);
  }

  public boolean MaterializeAllPermanently(SWIGTYPE_p_std__string ErrInfo) {
    return bitreaderJNI.Module_MaterializeAllPermanently__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(ErrInfo));
  }

  public boolean MaterializeAllPermanently() {
    return bitreaderJNI.Module_MaterializeAllPermanently__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_llvm__iplistT_llvm__GlobalVariable_t getGlobalList() {
    return new SWIGTYPE_p_llvm__iplistT_llvm__GlobalVariable_t(bitreaderJNI.Module_getGlobalList__SWIG_0(swigCPtr, this), false);
  }

  public static SWIGTYPE_m_Module__llvm__iplistT_llvm__GlobalVariable_t getSublistAccess(SWIGTYPE_p_llvm__GlobalVariable arg0) {
    String cMemberPtr = bitreaderJNI.Module_getSublistAccess__SWIG_0(SWIGTYPE_p_llvm__GlobalVariable.getCPtr(arg0));
    return (cMemberPtr == null) ? null : new SWIGTYPE_m_Module__llvm__iplistT_llvm__GlobalVariable_t(cMemberPtr, false);
  }

  public SWIGTYPE_p_llvm__iplistT_llvm__Function_t getFunctionList() {
    return new SWIGTYPE_p_llvm__iplistT_llvm__Function_t(bitreaderJNI.Module_getFunctionList__SWIG_0(swigCPtr, this), false);
  }

  public static SWIGTYPE_m_Module__llvm__iplistT_llvm__Function_t getSublistAccess(Function arg0) {
    String cMemberPtr = bitreaderJNI.Module_getSublistAccess__SWIG_1(Function.getCPtr(arg0), arg0);
    return (cMemberPtr == null) ? null : new SWIGTYPE_m_Module__llvm__iplistT_llvm__Function_t(cMemberPtr, false);
  }

  public SWIGTYPE_p_llvm__iplistT_llvm__GlobalAlias_t getAliasList() {
    return new SWIGTYPE_p_llvm__iplistT_llvm__GlobalAlias_t(bitreaderJNI.Module_getAliasList__SWIG_0(swigCPtr, this), false);
  }

  public static SWIGTYPE_m_Module__llvm__iplistT_llvm__GlobalAlias_t getSublistAccess(SWIGTYPE_p_llvm__GlobalAlias arg0) {
    String cMemberPtr = bitreaderJNI.Module_getSublistAccess__SWIG_2(SWIGTYPE_p_llvm__GlobalAlias.getCPtr(arg0));
    return (cMemberPtr == null) ? null : new SWIGTYPE_m_Module__llvm__iplistT_llvm__GlobalAlias_t(cMemberPtr, false);
  }

  public SWIGTYPE_p_llvm__ilistT_llvm__NamedMDNode_t getNamedMDList() {
    return new SWIGTYPE_p_llvm__ilistT_llvm__NamedMDNode_t(bitreaderJNI.Module_getNamedMDList__SWIG_0(swigCPtr, this), false);
  }

  public static SWIGTYPE_m_Module__llvm__ilistT_llvm__NamedMDNode_t getSublistAccess(NamedMDNode arg0) {
    String cMemberPtr = bitreaderJNI.Module_getSublistAccess__SWIG_3(NamedMDNode.getCPtr(arg0), arg0);
    return (cMemberPtr == null) ? null : new SWIGTYPE_m_Module__llvm__ilistT_llvm__NamedMDNode_t(cMemberPtr, false);
  }

  public SWIGTYPE_p_llvm__ValueSymbolTable getValueSymbolTable() {
    return new SWIGTYPE_p_llvm__ValueSymbolTable(bitreaderJNI.Module_getValueSymbolTable__SWIG_0(swigCPtr, this), false);
  }

  public SWIGTYPE_p_llvm__iplistT_llvm__GlobalVariable_t__iterator global_begin() {
    return new SWIGTYPE_p_llvm__iplistT_llvm__GlobalVariable_t__iterator(bitreaderJNI.Module_global_begin__SWIG_0(swigCPtr, this), true);
  }

  public SWIGTYPE_p_llvm__iplistT_llvm__GlobalVariable_t__iterator global_end() {
    return new SWIGTYPE_p_llvm__iplistT_llvm__GlobalVariable_t__iterator(bitreaderJNI.Module_global_end__SWIG_0(swigCPtr, this), true);
  }

  public boolean global_empty() {
    return bitreaderJNI.Module_global_empty(swigCPtr, this);
  }

  public SWIGTYPE_p_llvm__iplistT_llvm__Function_t__iterator begin() {
    return new SWIGTYPE_p_llvm__iplistT_llvm__Function_t__iterator(bitreaderJNI.Module_begin__SWIG_0(swigCPtr, this), true);
  }

  public SWIGTYPE_p_llvm__iplistT_llvm__Function_t__iterator end() {
    return new SWIGTYPE_p_llvm__iplistT_llvm__Function_t__iterator(bitreaderJNI.Module_end__SWIG_0(swigCPtr, this), true);
  }

  public long size() {
    return bitreaderJNI.Module_size(swigCPtr, this);
  }

  public boolean empty() {
    return bitreaderJNI.Module_empty(swigCPtr, this);
  }

  public SWIGTYPE_p_llvm__iplistT_llvm__GlobalAlias_t__iterator alias_begin() {
    return new SWIGTYPE_p_llvm__iplistT_llvm__GlobalAlias_t__iterator(bitreaderJNI.Module_alias_begin__SWIG_0(swigCPtr, this), true);
  }

  public SWIGTYPE_p_llvm__iplistT_llvm__GlobalAlias_t__iterator alias_end() {
    return new SWIGTYPE_p_llvm__iplistT_llvm__GlobalAlias_t__iterator(bitreaderJNI.Module_alias_end__SWIG_0(swigCPtr, this), true);
  }

  public long alias_size() {
    return bitreaderJNI.Module_alias_size(swigCPtr, this);
  }

  public boolean alias_empty() {
    return bitreaderJNI.Module_alias_empty(swigCPtr, this);
  }

  public SWIGTYPE_p_llvm__ilistT_llvm__NamedMDNode_t__iterator named_metadata_begin() {
    return new SWIGTYPE_p_llvm__ilistT_llvm__NamedMDNode_t__iterator(bitreaderJNI.Module_named_metadata_begin__SWIG_0(swigCPtr, this), true);
  }

  public SWIGTYPE_p_llvm__ilistT_llvm__NamedMDNode_t__iterator named_metadata_end() {
    return new SWIGTYPE_p_llvm__ilistT_llvm__NamedMDNode_t__iterator(bitreaderJNI.Module_named_metadata_end__SWIG_0(swigCPtr, this), true);
  }

  public long named_metadata_size() {
    return bitreaderJNI.Module_named_metadata_size(swigCPtr, this);
  }

  public boolean named_metadata_empty() {
    return bitreaderJNI.Module_named_metadata_empty(swigCPtr, this);
  }

  public void print(SWIGTYPE_p_llvm__raw_ostream OS, SWIGTYPE_p_llvm__AssemblyAnnotationWriter AAW) {
    bitreaderJNI.Module_print(swigCPtr, this, SWIGTYPE_p_llvm__raw_ostream.getCPtr(OS), SWIGTYPE_p_llvm__AssemblyAnnotationWriter.getCPtr(AAW));
  }

  public void dump() {
    bitreaderJNI.Module_dump(swigCPtr, this);
  }

  public void dropAllReferences() {
    bitreaderJNI.Module_dropAllReferences(swigCPtr, this);
  }

  public final static class Endianness {
    public final static Module.Endianness AnyEndianness = new Module.Endianness("AnyEndianness");
    public final static Module.Endianness LittleEndian = new Module.Endianness("LittleEndian");
    public final static Module.Endianness BigEndian = new Module.Endianness("BigEndian");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Endianness swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Endianness.class + " with value " + swigValue);
    }

    private Endianness(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Endianness(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Endianness(String swigName, Endianness swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Endianness[] swigValues = { AnyEndianness, LittleEndian, BigEndian };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class PointerSize {
    public final static Module.PointerSize AnyPointerSize = new Module.PointerSize("AnyPointerSize");
    public final static Module.PointerSize Pointer32 = new Module.PointerSize("Pointer32");
    public final static Module.PointerSize Pointer64 = new Module.PointerSize("Pointer64");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static PointerSize swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + PointerSize.class + " with value " + swigValue);
    }

    private PointerSize(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private PointerSize(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private PointerSize(String swigName, PointerSize swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static PointerSize[] swigValues = { AnyPointerSize, Pointer32, Pointer64 };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class ModFlagBehavior {
    public final static Module.ModFlagBehavior Error = new Module.ModFlagBehavior("Error", bitreaderJNI.Module_Error_get());
    public final static Module.ModFlagBehavior Warning = new Module.ModFlagBehavior("Warning", bitreaderJNI.Module_Warning_get());
    public final static Module.ModFlagBehavior Require = new Module.ModFlagBehavior("Require", bitreaderJNI.Module_Require_get());
    public final static Module.ModFlagBehavior Override = new Module.ModFlagBehavior("Override", bitreaderJNI.Module_Override_get());
    public final static Module.ModFlagBehavior Append = new Module.ModFlagBehavior("Append", bitreaderJNI.Module_Append_get());
    public final static Module.ModFlagBehavior AppendUnique = new Module.ModFlagBehavior("AppendUnique", bitreaderJNI.Module_AppendUnique_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ModFlagBehavior swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ModFlagBehavior.class + " with value " + swigValue);
    }

    private ModFlagBehavior(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ModFlagBehavior(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ModFlagBehavior(String swigName, ModFlagBehavior swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ModFlagBehavior[] swigValues = { Error, Warning, Require, Override, Append, AppendUnique };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
