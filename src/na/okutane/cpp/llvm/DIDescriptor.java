/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class DIDescriptor {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected DIDescriptor(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DIDescriptor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        bitreaderJNI.delete_DIDescriptor(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public DIDescriptor() {
    this(bitreaderJNI.new_DIDescriptor__SWIG_0(), true);
  }

  public DIDescriptor(MDNode N) {
    this(bitreaderJNI.new_DIDescriptor__SWIG_1(MDNode.getCPtr(N), N), true);
  }

  public DIDescriptor(DIFile F) {
    this(bitreaderJNI.new_DIDescriptor__SWIG_2(DIFile.getCPtr(F), F), true);
  }

  public DIDescriptor(DISubprogram F) {
    this(bitreaderJNI.new_DIDescriptor__SWIG_3(DISubprogram.getCPtr(F), F), true);
  }

  public DIDescriptor(DILexicalBlockFile F) {
    this(bitreaderJNI.new_DIDescriptor__SWIG_4(DILexicalBlockFile.getCPtr(F), F), true);
  }

  public DIDescriptor(DILexicalBlock F) {
    this(bitreaderJNI.new_DIDescriptor__SWIG_5(DILexicalBlock.getCPtr(F), F), true);
  }

  public DIDescriptor(DIVariable F) {
    this(bitreaderJNI.new_DIDescriptor__SWIG_6(DIVariable.getCPtr(F), F), true);
  }

  public DIDescriptor(DIType F) {
    this(bitreaderJNI.new_DIDescriptor__SWIG_7(DIType.getCPtr(F), F), true);
  }

  public boolean Verify() {
    return bitreaderJNI.DIDescriptor_Verify(swigCPtr, this);
  }

  public MDNode __deref__() {
    long cPtr = bitreaderJNI.DIDescriptor___deref__(swigCPtr, this);
    return (cPtr == 0) ? null : new MDNode(cPtr, false);
  }

  public long getTag() {
    return bitreaderJNI.DIDescriptor_getTag(swigCPtr, this);
  }

  public boolean isDerivedType() {
    return bitreaderJNI.DIDescriptor_isDerivedType(swigCPtr, this);
  }

  public boolean isCompositeType() {
    return bitreaderJNI.DIDescriptor_isCompositeType(swigCPtr, this);
  }

  public boolean isBasicType() {
    return bitreaderJNI.DIDescriptor_isBasicType(swigCPtr, this);
  }

  public boolean isVariable() {
    return bitreaderJNI.DIDescriptor_isVariable(swigCPtr, this);
  }

  public boolean isSubprogram() {
    return bitreaderJNI.DIDescriptor_isSubprogram(swigCPtr, this);
  }

  public boolean isGlobalVariable() {
    return bitreaderJNI.DIDescriptor_isGlobalVariable(swigCPtr, this);
  }

  public boolean isScope() {
    return bitreaderJNI.DIDescriptor_isScope(swigCPtr, this);
  }

  public boolean isFile() {
    return bitreaderJNI.DIDescriptor_isFile(swigCPtr, this);
  }

  public boolean isCompileUnit() {
    return bitreaderJNI.DIDescriptor_isCompileUnit(swigCPtr, this);
  }

  public boolean isNameSpace() {
    return bitreaderJNI.DIDescriptor_isNameSpace(swigCPtr, this);
  }

  public boolean isLexicalBlockFile() {
    return bitreaderJNI.DIDescriptor_isLexicalBlockFile(swigCPtr, this);
  }

  public boolean isLexicalBlock() {
    return bitreaderJNI.DIDescriptor_isLexicalBlock(swigCPtr, this);
  }

  public boolean isSubrange() {
    return bitreaderJNI.DIDescriptor_isSubrange(swigCPtr, this);
  }

  public boolean isEnumerator() {
    return bitreaderJNI.DIDescriptor_isEnumerator(swigCPtr, this);
  }

  public boolean isType() {
    return bitreaderJNI.DIDescriptor_isType(swigCPtr, this);
  }

  public boolean isGlobal() {
    return bitreaderJNI.DIDescriptor_isGlobal(swigCPtr, this);
  }

  public boolean isUnspecifiedParameter() {
    return bitreaderJNI.DIDescriptor_isUnspecifiedParameter(swigCPtr, this);
  }

  public boolean isTemplateTypeParameter() {
    return bitreaderJNI.DIDescriptor_isTemplateTypeParameter(swigCPtr, this);
  }

  public boolean isTemplateValueParameter() {
    return bitreaderJNI.DIDescriptor_isTemplateValueParameter(swigCPtr, this);
  }

  public boolean isObjCProperty() {
    return bitreaderJNI.DIDescriptor_isObjCProperty(swigCPtr, this);
  }

  public boolean isImportedModule() {
    return bitreaderJNI.DIDescriptor_isImportedModule(swigCPtr, this);
  }

  public void print(SWIGTYPE_p_llvm__raw_ostream OS) {
    bitreaderJNI.DIDescriptor_print(swigCPtr, this, SWIGTYPE_p_llvm__raw_ostream.getCPtr(OS));
  }

  public void dump() {
    bitreaderJNI.DIDescriptor_dump(swigCPtr, this);
  }

  public MDNode get(LLVMContext Context, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t Vals) {
    long cPtr = bitreaderJNI.DIDescriptor_get(swigCPtr, this, LLVMContext.getCPtr(Context), Context, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(Vals));
    return (cPtr == 0) ? null : new MDNode(cPtr, false);
  }

  public MDNode getWhenValsUnresolved(LLVMContext Context, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t Vals, boolean isFunctionLocal) {
    long cPtr = bitreaderJNI.DIDescriptor_getWhenValsUnresolved(swigCPtr, this, LLVMContext.getCPtr(Context), Context, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(Vals), isFunctionLocal);
    return (cPtr == 0) ? null : new MDNode(cPtr, false);
  }

  public MDNode getIfExists(LLVMContext Context, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t Vals) {
    long cPtr = bitreaderJNI.DIDescriptor_getIfExists(swigCPtr, this, LLVMContext.getCPtr(Context), Context, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(Vals));
    return (cPtr == 0) ? null : new MDNode(cPtr, false);
  }

  public MDNode getTemporary(LLVMContext Context, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t Vals) {
    long cPtr = bitreaderJNI.DIDescriptor_getTemporary(swigCPtr, this, LLVMContext.getCPtr(Context), Context, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(Vals));
    return (cPtr == 0) ? null : new MDNode(cPtr, false);
  }

  public void deleteTemporary(MDNode N) {
    bitreaderJNI.DIDescriptor_deleteTemporary(swigCPtr, this, MDNode.getCPtr(N), N);
  }

  public void replaceOperandWith(long i, SWIGTYPE_p_llvm__Value NewVal) {
    bitreaderJNI.DIDescriptor_replaceOperandWith(swigCPtr, this, i, SWIGTYPE_p_llvm__Value.getCPtr(NewVal));
  }

  public SWIGTYPE_p_llvm__Value getOperand(long i) {
    long cPtr = bitreaderJNI.DIDescriptor_getOperand(swigCPtr, this, i);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__Value(cPtr, false);
  }

  public long getNumOperands() {
    return bitreaderJNI.DIDescriptor_getNumOperands(swigCPtr, this);
  }

  public boolean isFunctionLocal() {
    return bitreaderJNI.DIDescriptor_isFunctionLocal(swigCPtr, this);
  }

  public Function getFunction() {
    long cPtr = bitreaderJNI.DIDescriptor_getFunction(swigCPtr, this);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public void Profile(SWIGTYPE_p_FoldingSetNodeID ID) {
    bitreaderJNI.DIDescriptor_Profile(swigCPtr, this, SWIGTYPE_p_FoldingSetNodeID.getCPtr(ID));
  }

  public boolean classof(SWIGTYPE_p_llvm__Value V) {
    return bitreaderJNI.DIDescriptor_classof(swigCPtr, this, SWIGTYPE_p_llvm__Value.getCPtr(V));
  }

  public MDNode getMostGenericTBAA(MDNode A, MDNode B) {
    long cPtr = bitreaderJNI.DIDescriptor_getMostGenericTBAA(swigCPtr, this, MDNode.getCPtr(A), A, MDNode.getCPtr(B), B);
    return (cPtr == 0) ? null : new MDNode(cPtr, false);
  }

  public MDNode getMostGenericFPMath(MDNode A, MDNode B) {
    long cPtr = bitreaderJNI.DIDescriptor_getMostGenericFPMath(swigCPtr, this, MDNode.getCPtr(A), A, MDNode.getCPtr(B), B);
    return (cPtr == 0) ? null : new MDNode(cPtr, false);
  }

  public MDNode getMostGenericRange(MDNode A, MDNode B) {
    long cPtr = bitreaderJNI.DIDescriptor_getMostGenericRange(swigCPtr, this, MDNode.getCPtr(A), A, MDNode.getCPtr(B), B);
    return (cPtr == 0) ? null : new MDNode(cPtr, false);
  }

  public final static int FlagPrivate = bitreaderJNI.DIDescriptor_FlagPrivate_get();
  public final static int FlagProtected = bitreaderJNI.DIDescriptor_FlagProtected_get();
  public final static int FlagFwdDecl = bitreaderJNI.DIDescriptor_FlagFwdDecl_get();
  public final static int FlagAppleBlock = bitreaderJNI.DIDescriptor_FlagAppleBlock_get();
  public final static int FlagBlockByrefStruct = bitreaderJNI.DIDescriptor_FlagBlockByrefStruct_get();
  public final static int FlagVirtual = bitreaderJNI.DIDescriptor_FlagVirtual_get();
  public final static int FlagArtificial = bitreaderJNI.DIDescriptor_FlagArtificial_get();
  public final static int FlagExplicit = bitreaderJNI.DIDescriptor_FlagExplicit_get();
  public final static int FlagPrototyped = bitreaderJNI.DIDescriptor_FlagPrototyped_get();
  public final static int FlagObjcClassComplete = bitreaderJNI.DIDescriptor_FlagObjcClassComplete_get();
  public final static int FlagObjectPointer = bitreaderJNI.DIDescriptor_FlagObjectPointer_get();
  public final static int FlagVector = bitreaderJNI.DIDescriptor_FlagVector_get();
  public final static int FlagStaticMember = bitreaderJNI.DIDescriptor_FlagStaticMember_get();

}
