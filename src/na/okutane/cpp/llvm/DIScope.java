/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class DIScope extends DIDescriptor {
  private long swigCPtr;

  protected DIScope(long cPtr, boolean cMemoryOwn) {
    super(bitreaderJNI.DIScope_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DIScope obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        bitreaderJNI.delete_DIScope(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public DIScope(MDNode N) {
    this(bitreaderJNI.new_DIScope__SWIG_0(MDNode.getCPtr(N), N), true);
  }

  public DIScope() {
    this(bitreaderJNI.new_DIScope__SWIG_1(), true);
  }

  public StringRef getFilename() {
    return new StringRef(bitreaderJNI.DIScope_getFilename(swigCPtr, this), true);
  }

  public StringRef getDirectory() {
    return new StringRef(bitreaderJNI.DIScope_getDirectory(swigCPtr, this), true);
  }

}
