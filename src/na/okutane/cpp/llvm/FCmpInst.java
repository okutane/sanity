/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class FCmpInst {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected FCmpInst(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FCmpInst obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        bitreaderJNI.delete_FCmpInst(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public FCmpInst(Instruction InsertBefore, SWIGTYPE_p_Predicate pred, Value LHS, Value RHS, SWIGTYPE_p_llvm__Twine NameStr) {
    this(bitreaderJNI.new_FCmpInst__SWIG_0(Instruction.getCPtr(InsertBefore), InsertBefore, SWIGTYPE_p_Predicate.getCPtr(pred), Value.getCPtr(LHS), LHS, Value.getCPtr(RHS), RHS, SWIGTYPE_p_llvm__Twine.getCPtr(NameStr)), true);
  }

  public FCmpInst(Instruction InsertBefore, SWIGTYPE_p_Predicate pred, Value LHS, Value RHS) {
    this(bitreaderJNI.new_FCmpInst__SWIG_1(Instruction.getCPtr(InsertBefore), InsertBefore, SWIGTYPE_p_Predicate.getCPtr(pred), Value.getCPtr(LHS), LHS, Value.getCPtr(RHS), RHS), true);
  }

  public FCmpInst(BasicBlock InsertAtEnd, SWIGTYPE_p_Predicate pred, Value LHS, Value RHS, SWIGTYPE_p_llvm__Twine NameStr) {
    this(bitreaderJNI.new_FCmpInst__SWIG_2(BasicBlock.getCPtr(InsertAtEnd), InsertAtEnd, SWIGTYPE_p_Predicate.getCPtr(pred), Value.getCPtr(LHS), LHS, Value.getCPtr(RHS), RHS, SWIGTYPE_p_llvm__Twine.getCPtr(NameStr)), true);
  }

  public FCmpInst(BasicBlock InsertAtEnd, SWIGTYPE_p_Predicate pred, Value LHS, Value RHS) {
    this(bitreaderJNI.new_FCmpInst__SWIG_3(BasicBlock.getCPtr(InsertAtEnd), InsertAtEnd, SWIGTYPE_p_Predicate.getCPtr(pred), Value.getCPtr(LHS), LHS, Value.getCPtr(RHS), RHS), true);
  }

  public FCmpInst(SWIGTYPE_p_Predicate pred, Value LHS, Value RHS, SWIGTYPE_p_llvm__Twine NameStr) {
    this(bitreaderJNI.new_FCmpInst__SWIG_4(SWIGTYPE_p_Predicate.getCPtr(pred), Value.getCPtr(LHS), LHS, Value.getCPtr(RHS), RHS, SWIGTYPE_p_llvm__Twine.getCPtr(NameStr)), true);
  }

  public FCmpInst(SWIGTYPE_p_Predicate pred, Value LHS, Value RHS) {
    this(bitreaderJNI.new_FCmpInst__SWIG_5(SWIGTYPE_p_Predicate.getCPtr(pred), Value.getCPtr(LHS), LHS, Value.getCPtr(RHS), RHS), true);
  }

  public boolean isEquality() {
    return bitreaderJNI.FCmpInst_isEquality(swigCPtr, this);
  }

  public boolean isCommutative() {
    return bitreaderJNI.FCmpInst_isCommutative(swigCPtr, this);
  }

  public boolean isRelational() {
    return bitreaderJNI.FCmpInst_isRelational(swigCPtr, this);
  }

  public void swapOperands() {
    bitreaderJNI.FCmpInst_swapOperands(swigCPtr, this);
  }

  public static boolean classof(Instruction I) {
    return bitreaderJNI.FCmpInst_classof__SWIG_0(Instruction.getCPtr(I), I);
  }

  public static boolean classof(Value V) {
    return bitreaderJNI.FCmpInst_classof__SWIG_1(Value.getCPtr(V), V);
  }

}
