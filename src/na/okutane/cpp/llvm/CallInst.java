/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class CallInst extends Instruction {
  private long swigCPtr;

  protected CallInst(long cPtr, boolean cMemoryOwn) {
    super(bitreaderJNI.CallInst_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CallInst obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        bitreaderJNI.delete_CallInst(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static CallInst Create(Value Func, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t Args, SWIGTYPE_p_llvm__Twine NameStr, Instruction InsertBefore) {
    long cPtr = bitreaderJNI.CallInst_Create__SWIG_0(Value.getCPtr(Func), Func, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(Args), SWIGTYPE_p_llvm__Twine.getCPtr(NameStr), Instruction.getCPtr(InsertBefore), InsertBefore);
    return (cPtr == 0) ? null : new CallInst(cPtr, false);
  }

  public static CallInst Create(Value Func, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t Args, SWIGTYPE_p_llvm__Twine NameStr) {
    long cPtr = bitreaderJNI.CallInst_Create__SWIG_1(Value.getCPtr(Func), Func, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(Args), SWIGTYPE_p_llvm__Twine.getCPtr(NameStr));
    return (cPtr == 0) ? null : new CallInst(cPtr, false);
  }

  public static CallInst Create(Value Func, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t Args) {
    long cPtr = bitreaderJNI.CallInst_Create__SWIG_2(Value.getCPtr(Func), Func, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(Args));
    return (cPtr == 0) ? null : new CallInst(cPtr, false);
  }

  public static CallInst Create(Value Func, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t Args, SWIGTYPE_p_llvm__Twine NameStr, BasicBlock InsertAtEnd) {
    long cPtr = bitreaderJNI.CallInst_Create__SWIG_3(Value.getCPtr(Func), Func, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(Args), SWIGTYPE_p_llvm__Twine.getCPtr(NameStr), BasicBlock.getCPtr(InsertAtEnd), InsertAtEnd);
    return (cPtr == 0) ? null : new CallInst(cPtr, false);
  }

  public static CallInst Create(Value F, SWIGTYPE_p_llvm__Twine NameStr, Instruction InsertBefore) {
    long cPtr = bitreaderJNI.CallInst_Create__SWIG_4(Value.getCPtr(F), F, SWIGTYPE_p_llvm__Twine.getCPtr(NameStr), Instruction.getCPtr(InsertBefore), InsertBefore);
    return (cPtr == 0) ? null : new CallInst(cPtr, false);
  }

  public static CallInst Create(Value F, SWIGTYPE_p_llvm__Twine NameStr) {
    long cPtr = bitreaderJNI.CallInst_Create__SWIG_5(Value.getCPtr(F), F, SWIGTYPE_p_llvm__Twine.getCPtr(NameStr));
    return (cPtr == 0) ? null : new CallInst(cPtr, false);
  }

  public static CallInst Create(Value F) {
    long cPtr = bitreaderJNI.CallInst_Create__SWIG_6(Value.getCPtr(F), F);
    return (cPtr == 0) ? null : new CallInst(cPtr, false);
  }

  public static CallInst Create(Value F, SWIGTYPE_p_llvm__Twine NameStr, BasicBlock InsertAtEnd) {
    long cPtr = bitreaderJNI.CallInst_Create__SWIG_7(Value.getCPtr(F), F, SWIGTYPE_p_llvm__Twine.getCPtr(NameStr), BasicBlock.getCPtr(InsertAtEnd), InsertAtEnd);
    return (cPtr == 0) ? null : new CallInst(cPtr, false);
  }

  public static Instruction CreateMalloc(Instruction InsertBefore, Type IntPtrTy, Type AllocTy, Value AllocSize, Value ArraySize, Function MallocF, SWIGTYPE_p_llvm__Twine Name) {
    long cPtr = bitreaderJNI.CallInst_CreateMalloc__SWIG_0(Instruction.getCPtr(InsertBefore), InsertBefore, Type.getCPtr(IntPtrTy), IntPtrTy, Type.getCPtr(AllocTy), AllocTy, Value.getCPtr(AllocSize), AllocSize, Value.getCPtr(ArraySize), ArraySize, Function.getCPtr(MallocF), MallocF, SWIGTYPE_p_llvm__Twine.getCPtr(Name));
    return (cPtr == 0) ? null : new Instruction(cPtr, false);
  }

  public static Instruction CreateMalloc(Instruction InsertBefore, Type IntPtrTy, Type AllocTy, Value AllocSize, Value ArraySize, Function MallocF) {
    long cPtr = bitreaderJNI.CallInst_CreateMalloc__SWIG_1(Instruction.getCPtr(InsertBefore), InsertBefore, Type.getCPtr(IntPtrTy), IntPtrTy, Type.getCPtr(AllocTy), AllocTy, Value.getCPtr(AllocSize), AllocSize, Value.getCPtr(ArraySize), ArraySize, Function.getCPtr(MallocF), MallocF);
    return (cPtr == 0) ? null : new Instruction(cPtr, false);
  }

  public static Instruction CreateMalloc(Instruction InsertBefore, Type IntPtrTy, Type AllocTy, Value AllocSize, Value ArraySize) {
    long cPtr = bitreaderJNI.CallInst_CreateMalloc__SWIG_2(Instruction.getCPtr(InsertBefore), InsertBefore, Type.getCPtr(IntPtrTy), IntPtrTy, Type.getCPtr(AllocTy), AllocTy, Value.getCPtr(AllocSize), AllocSize, Value.getCPtr(ArraySize), ArraySize);
    return (cPtr == 0) ? null : new Instruction(cPtr, false);
  }

  public static Instruction CreateMalloc(Instruction InsertBefore, Type IntPtrTy, Type AllocTy, Value AllocSize) {
    long cPtr = bitreaderJNI.CallInst_CreateMalloc__SWIG_3(Instruction.getCPtr(InsertBefore), InsertBefore, Type.getCPtr(IntPtrTy), IntPtrTy, Type.getCPtr(AllocTy), AllocTy, Value.getCPtr(AllocSize), AllocSize);
    return (cPtr == 0) ? null : new Instruction(cPtr, false);
  }

  public static Instruction CreateMalloc(BasicBlock InsertAtEnd, Type IntPtrTy, Type AllocTy, Value AllocSize, Value ArraySize, Function MallocF, SWIGTYPE_p_llvm__Twine Name) {
    long cPtr = bitreaderJNI.CallInst_CreateMalloc__SWIG_4(BasicBlock.getCPtr(InsertAtEnd), InsertAtEnd, Type.getCPtr(IntPtrTy), IntPtrTy, Type.getCPtr(AllocTy), AllocTy, Value.getCPtr(AllocSize), AllocSize, Value.getCPtr(ArraySize), ArraySize, Function.getCPtr(MallocF), MallocF, SWIGTYPE_p_llvm__Twine.getCPtr(Name));
    return (cPtr == 0) ? null : new Instruction(cPtr, false);
  }

  public static Instruction CreateMalloc(BasicBlock InsertAtEnd, Type IntPtrTy, Type AllocTy, Value AllocSize, Value ArraySize, Function MallocF) {
    long cPtr = bitreaderJNI.CallInst_CreateMalloc__SWIG_5(BasicBlock.getCPtr(InsertAtEnd), InsertAtEnd, Type.getCPtr(IntPtrTy), IntPtrTy, Type.getCPtr(AllocTy), AllocTy, Value.getCPtr(AllocSize), AllocSize, Value.getCPtr(ArraySize), ArraySize, Function.getCPtr(MallocF), MallocF);
    return (cPtr == 0) ? null : new Instruction(cPtr, false);
  }

  public static Instruction CreateMalloc(BasicBlock InsertAtEnd, Type IntPtrTy, Type AllocTy, Value AllocSize, Value ArraySize) {
    long cPtr = bitreaderJNI.CallInst_CreateMalloc__SWIG_6(BasicBlock.getCPtr(InsertAtEnd), InsertAtEnd, Type.getCPtr(IntPtrTy), IntPtrTy, Type.getCPtr(AllocTy), AllocTy, Value.getCPtr(AllocSize), AllocSize, Value.getCPtr(ArraySize), ArraySize);
    return (cPtr == 0) ? null : new Instruction(cPtr, false);
  }

  public static Instruction CreateMalloc(BasicBlock InsertAtEnd, Type IntPtrTy, Type AllocTy, Value AllocSize) {
    long cPtr = bitreaderJNI.CallInst_CreateMalloc__SWIG_7(BasicBlock.getCPtr(InsertAtEnd), InsertAtEnd, Type.getCPtr(IntPtrTy), IntPtrTy, Type.getCPtr(AllocTy), AllocTy, Value.getCPtr(AllocSize), AllocSize);
    return (cPtr == 0) ? null : new Instruction(cPtr, false);
  }

  public static Instruction CreateFree(Value Source, Instruction InsertBefore) {
    long cPtr = bitreaderJNI.CallInst_CreateFree__SWIG_0(Value.getCPtr(Source), Source, Instruction.getCPtr(InsertBefore), InsertBefore);
    return (cPtr == 0) ? null : new Instruction(cPtr, false);
  }

  public static Instruction CreateFree(Value Source, BasicBlock InsertAtEnd) {
    long cPtr = bitreaderJNI.CallInst_CreateFree__SWIG_1(Value.getCPtr(Source), Source, BasicBlock.getCPtr(InsertAtEnd), InsertAtEnd);
    return (cPtr == 0) ? null : new Instruction(cPtr, false);
  }

  public boolean isTailCall() {
    return bitreaderJNI.CallInst_isTailCall(swigCPtr, this);
  }

  public void setTailCall(boolean isTC) {
    bitreaderJNI.CallInst_setTailCall__SWIG_0(swigCPtr, this, isTC);
  }

  public void setTailCall() {
    bitreaderJNI.CallInst_setTailCall__SWIG_1(swigCPtr, this);
  }

  public long getNumArgOperands() {
    return bitreaderJNI.CallInst_getNumArgOperands(swigCPtr, this);
  }

  public Value getArgOperand(long i) {
    long cPtr = bitreaderJNI.CallInst_getArgOperand(swigCPtr, this, i);
    return (cPtr == 0) ? null : new Value(cPtr, false);
  }

  public void setArgOperand(long i, Value v) {
    bitreaderJNI.CallInst_setArgOperand(swigCPtr, this, i, Value.getCPtr(v), v);
  }

  public SWIGTYPE_p_CallingConv__ID getCallingConv() {
    return new SWIGTYPE_p_CallingConv__ID(bitreaderJNI.CallInst_getCallingConv(swigCPtr, this), true);
  }

  public void setCallingConv(SWIGTYPE_p_CallingConv__ID CC) {
    bitreaderJNI.CallInst_setCallingConv(swigCPtr, this, SWIGTYPE_p_CallingConv__ID.getCPtr(CC));
  }

  public SWIGTYPE_p_AttributeSet getAttributes() {
    return new SWIGTYPE_p_AttributeSet(bitreaderJNI.CallInst_getAttributes(swigCPtr, this), false);
  }

  public void setAttributes(SWIGTYPE_p_AttributeSet Attrs) {
    bitreaderJNI.CallInst_setAttributes(swigCPtr, this, SWIGTYPE_p_AttributeSet.getCPtr(Attrs));
  }

  public void addAttribute(long i, SWIGTYPE_p_Attribute__AttrKind attr) {
    bitreaderJNI.CallInst_addAttribute(swigCPtr, this, i, SWIGTYPE_p_Attribute__AttrKind.getCPtr(attr));
  }

  public void removeAttribute(long i, SWIGTYPE_p_Attribute attr) {
    bitreaderJNI.CallInst_removeAttribute(swigCPtr, this, i, SWIGTYPE_p_Attribute.getCPtr(attr));
  }

  public boolean hasFnAttr(SWIGTYPE_p_Attribute__AttrKind A) {
    return bitreaderJNI.CallInst_hasFnAttr(swigCPtr, this, SWIGTYPE_p_Attribute__AttrKind.getCPtr(A));
  }

  public boolean paramHasAttr(long i, SWIGTYPE_p_Attribute__AttrKind A) {
    return bitreaderJNI.CallInst_paramHasAttr(swigCPtr, this, i, SWIGTYPE_p_Attribute__AttrKind.getCPtr(A));
  }

  public long getParamAlignment(long i) {
    return bitreaderJNI.CallInst_getParamAlignment(swigCPtr, this, i);
  }

  public boolean isNoInline() {
    return bitreaderJNI.CallInst_isNoInline(swigCPtr, this);
  }

  public void setIsNoInline() {
    bitreaderJNI.CallInst_setIsNoInline(swigCPtr, this);
  }

  public boolean canReturnTwice() {
    return bitreaderJNI.CallInst_canReturnTwice(swigCPtr, this);
  }

  public void setCanReturnTwice() {
    bitreaderJNI.CallInst_setCanReturnTwice(swigCPtr, this);
  }

  public boolean doesNotAccessMemory() {
    return bitreaderJNI.CallInst_doesNotAccessMemory(swigCPtr, this);
  }

  public void setDoesNotAccessMemory() {
    bitreaderJNI.CallInst_setDoesNotAccessMemory(swigCPtr, this);
  }

  public boolean onlyReadsMemory() {
    return bitreaderJNI.CallInst_onlyReadsMemory(swigCPtr, this);
  }

  public void setOnlyReadsMemory() {
    bitreaderJNI.CallInst_setOnlyReadsMemory(swigCPtr, this);
  }

  public boolean doesNotReturn() {
    return bitreaderJNI.CallInst_doesNotReturn(swigCPtr, this);
  }

  public void setDoesNotReturn() {
    bitreaderJNI.CallInst_setDoesNotReturn(swigCPtr, this);
  }

  public boolean doesNotThrow() {
    return bitreaderJNI.CallInst_doesNotThrow(swigCPtr, this);
  }

  public void setDoesNotThrow() {
    bitreaderJNI.CallInst_setDoesNotThrow(swigCPtr, this);
  }

  public boolean cannotDuplicate() {
    return bitreaderJNI.CallInst_cannotDuplicate(swigCPtr, this);
  }

  public void setCannotDuplicate() {
    bitreaderJNI.CallInst_setCannotDuplicate(swigCPtr, this);
  }

  public boolean hasStructRetAttr() {
    return bitreaderJNI.CallInst_hasStructRetAttr(swigCPtr, this);
  }

  public boolean hasByValArgument() {
    return bitreaderJNI.CallInst_hasByValArgument(swigCPtr, this);
  }

  public Function getCalledFunction() {
    long cPtr = bitreaderJNI.CallInst_getCalledFunction(swigCPtr, this);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public Value getCalledValue() {
    long cPtr = bitreaderJNI.CallInst_getCalledValue__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new Value(cPtr, false);
  }

  public void setCalledFunction(Value Fn) {
    bitreaderJNI.CallInst_setCalledFunction(swigCPtr, this, Value.getCPtr(Fn), Fn);
  }

  public boolean isInlineAsm() {
    return bitreaderJNI.CallInst_isInlineAsm(swigCPtr, this);
  }

  public static boolean classof(Instruction I) {
    return bitreaderJNI.CallInst_classof__SWIG_0(Instruction.getCPtr(I), I);
  }

  public static boolean classof(Value V) {
    return bitreaderJNI.CallInst_classof__SWIG_1(Value.getCPtr(V), V);
  }

}
