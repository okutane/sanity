/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class ConstantExpr extends Constant {
  private long swigCPtr;

  protected ConstantExpr(long cPtr, boolean cMemoryOwn) {
    super(bitreaderJNI.ConstantExpr_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ConstantExpr obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        bitreaderJNI.delete_ConstantExpr(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static Constant getAlignOf(Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getAlignOf(Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getSizeOf(Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getSizeOf(Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getOffsetOf(SWIGTYPE_p_llvm__StructType STy, long FieldNo) {
    long cPtr = bitreaderJNI.ConstantExpr_getOffsetOf__SWIG_0(SWIGTYPE_p_llvm__StructType.getCPtr(STy), FieldNo);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getOffsetOf(Type Ty, Constant FieldNo) {
    long cPtr = bitreaderJNI.ConstantExpr_getOffsetOf__SWIG_1(Type.getCPtr(Ty), Ty, Constant.getCPtr(FieldNo), FieldNo);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNeg(Constant C, boolean HasNUW, boolean HasNSW) {
    long cPtr = bitreaderJNI.ConstantExpr_getNeg__SWIG_0(Constant.getCPtr(C), C, HasNUW, HasNSW);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNeg(Constant C, boolean HasNUW) {
    long cPtr = bitreaderJNI.ConstantExpr_getNeg__SWIG_1(Constant.getCPtr(C), C, HasNUW);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNeg(Constant C) {
    long cPtr = bitreaderJNI.ConstantExpr_getNeg__SWIG_2(Constant.getCPtr(C), C);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getFNeg(Constant C) {
    long cPtr = bitreaderJNI.ConstantExpr_getFNeg(Constant.getCPtr(C), C);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNot(Constant C) {
    long cPtr = bitreaderJNI.ConstantExpr_getNot(Constant.getCPtr(C), C);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getAdd(Constant C1, Constant C2, boolean HasNUW, boolean HasNSW) {
    long cPtr = bitreaderJNI.ConstantExpr_getAdd__SWIG_0(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2, HasNUW, HasNSW);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getAdd(Constant C1, Constant C2, boolean HasNUW) {
    long cPtr = bitreaderJNI.ConstantExpr_getAdd__SWIG_1(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2, HasNUW);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getAdd(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getAdd__SWIG_2(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getFAdd(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getFAdd(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getSub(Constant C1, Constant C2, boolean HasNUW, boolean HasNSW) {
    long cPtr = bitreaderJNI.ConstantExpr_getSub__SWIG_0(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2, HasNUW, HasNSW);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getSub(Constant C1, Constant C2, boolean HasNUW) {
    long cPtr = bitreaderJNI.ConstantExpr_getSub__SWIG_1(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2, HasNUW);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getSub(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getSub__SWIG_2(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getFSub(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getFSub(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getMul(Constant C1, Constant C2, boolean HasNUW, boolean HasNSW) {
    long cPtr = bitreaderJNI.ConstantExpr_getMul__SWIG_0(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2, HasNUW, HasNSW);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getMul(Constant C1, Constant C2, boolean HasNUW) {
    long cPtr = bitreaderJNI.ConstantExpr_getMul__SWIG_1(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2, HasNUW);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getMul(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getMul__SWIG_2(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getFMul(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getFMul(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getUDiv(Constant C1, Constant C2, boolean isExact) {
    long cPtr = bitreaderJNI.ConstantExpr_getUDiv__SWIG_0(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2, isExact);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getUDiv(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getUDiv__SWIG_1(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getSDiv(Constant C1, Constant C2, boolean isExact) {
    long cPtr = bitreaderJNI.ConstantExpr_getSDiv__SWIG_0(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2, isExact);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getSDiv(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getSDiv__SWIG_1(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getFDiv(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getFDiv(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getURem(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getURem(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getSRem(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getSRem(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getFRem(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getFRem(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getAnd(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getAnd(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getOr(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getOr(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getXor(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getXor(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getShl(Constant C1, Constant C2, boolean HasNUW, boolean HasNSW) {
    long cPtr = bitreaderJNI.ConstantExpr_getShl__SWIG_0(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2, HasNUW, HasNSW);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getShl(Constant C1, Constant C2, boolean HasNUW) {
    long cPtr = bitreaderJNI.ConstantExpr_getShl__SWIG_1(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2, HasNUW);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getShl(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getShl__SWIG_2(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getLShr(Constant C1, Constant C2, boolean isExact) {
    long cPtr = bitreaderJNI.ConstantExpr_getLShr__SWIG_0(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2, isExact);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getLShr(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getLShr__SWIG_1(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getAShr(Constant C1, Constant C2, boolean isExact) {
    long cPtr = bitreaderJNI.ConstantExpr_getAShr__SWIG_0(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2, isExact);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getAShr(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getAShr__SWIG_1(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getTrunc(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getTrunc(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getSExt(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getSExt(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getZExt(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getZExt(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getFPTrunc(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getFPTrunc(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getFPExtend(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getFPExtend(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getUIToFP(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getUIToFP(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getSIToFP(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getSIToFP(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getFPToUI(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getFPToUI(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getFPToSI(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getFPToSI(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getPtrToInt(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getPtrToInt(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getIntToPtr(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getIntToPtr(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getBitCast(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getBitCast(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNSWNeg(Constant C) {
    long cPtr = bitreaderJNI.ConstantExpr_getNSWNeg(Constant.getCPtr(C), C);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNUWNeg(Constant C) {
    long cPtr = bitreaderJNI.ConstantExpr_getNUWNeg(Constant.getCPtr(C), C);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNSWAdd(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getNSWAdd(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNUWAdd(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getNUWAdd(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNSWSub(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getNSWSub(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNUWSub(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getNUWSub(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNSWMul(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getNSWMul(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNUWMul(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getNUWMul(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNSWShl(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getNSWShl(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getNUWShl(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getNUWShl(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getExactSDiv(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getExactSDiv(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getExactUDiv(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getExactUDiv(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getExactAShr(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getExactAShr(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getExactLShr(Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getExactLShr(Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getBinOpIdentity(long Opcode, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getBinOpIdentity(Opcode, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getBinOpAbsorber(long Opcode, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getBinOpAbsorber(Opcode, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getCast(long ops, Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getCast(ops, Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getZExtOrBitCast(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getZExtOrBitCast(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getSExtOrBitCast(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getSExtOrBitCast(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getTruncOrBitCast(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getTruncOrBitCast(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getPointerCast(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getPointerCast(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getIntegerCast(Constant C, Type Ty, boolean isSigned) {
    long cPtr = bitreaderJNI.ConstantExpr_getIntegerCast(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty, isSigned);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getFPCast(Constant C, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getFPCast(Constant.getCPtr(C), C, Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public boolean isCast() {
    return bitreaderJNI.ConstantExpr_isCast(swigCPtr, this);
  }

  public boolean isCompare() {
    return bitreaderJNI.ConstantExpr_isCompare(swigCPtr, this);
  }

  public boolean hasIndices() {
    return bitreaderJNI.ConstantExpr_hasIndices(swigCPtr, this);
  }

  public boolean isGEPWithNoNotionalOverIndexing() {
    return bitreaderJNI.ConstantExpr_isGEPWithNoNotionalOverIndexing(swigCPtr, this);
  }

  public static Constant getSelect(Constant C, Constant V1, Constant V2) {
    long cPtr = bitreaderJNI.ConstantExpr_getSelect(Constant.getCPtr(C), C, Constant.getCPtr(V1), V1, Constant.getCPtr(V2), V2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant get(long Opcode, Constant C1, Constant C2, long Flags) {
    long cPtr = bitreaderJNI.ConstantExpr_get__SWIG_0(Opcode, Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2, Flags);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant get(long Opcode, Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_get__SWIG_1(Opcode, Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getCompare(int pred, Constant C1, Constant C2) {
    long cPtr = bitreaderJNI.ConstantExpr_getCompare(pred, Constant.getCPtr(C1), C1, Constant.getCPtr(C2), C2);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getICmp(int pred, Constant LHS, Constant RHS) {
    long cPtr = bitreaderJNI.ConstantExpr_getICmp(pred, Constant.getCPtr(LHS), LHS, Constant.getCPtr(RHS), RHS);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getFCmp(int pred, Constant LHS, Constant RHS) {
    long cPtr = bitreaderJNI.ConstantExpr_getFCmp(pred, Constant.getCPtr(LHS), LHS, Constant.getCPtr(RHS), RHS);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getGetElementPtr(Constant C, SWIGTYPE_p_ArrayRefT_llvm__Constant_p_t IdxList, boolean InBounds) {
    long cPtr = bitreaderJNI.ConstantExpr_getGetElementPtr__SWIG_0(Constant.getCPtr(C), C, SWIGTYPE_p_ArrayRefT_llvm__Constant_p_t.getCPtr(IdxList), InBounds);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getGetElementPtr(Constant C, SWIGTYPE_p_ArrayRefT_llvm__Constant_p_t IdxList) {
    long cPtr = bitreaderJNI.ConstantExpr_getGetElementPtr__SWIG_1(Constant.getCPtr(C), C, SWIGTYPE_p_ArrayRefT_llvm__Constant_p_t.getCPtr(IdxList));
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getGetElementPtr(Constant C, Constant Idx, boolean InBounds) {
    long cPtr = bitreaderJNI.ConstantExpr_getGetElementPtr__SWIG_2(Constant.getCPtr(C), C, Constant.getCPtr(Idx), Idx, InBounds);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getGetElementPtr(Constant C, Constant Idx) {
    long cPtr = bitreaderJNI.ConstantExpr_getGetElementPtr__SWIG_3(Constant.getCPtr(C), C, Constant.getCPtr(Idx), Idx);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getGetElementPtr(Constant C, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t IdxList, boolean InBounds) {
    long cPtr = bitreaderJNI.ConstantExpr_getGetElementPtr__SWIG_4(Constant.getCPtr(C), C, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(IdxList), InBounds);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getGetElementPtr(Constant C, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t IdxList) {
    long cPtr = bitreaderJNI.ConstantExpr_getGetElementPtr__SWIG_5(Constant.getCPtr(C), C, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(IdxList));
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getInBoundsGetElementPtr(Constant C, SWIGTYPE_p_ArrayRefT_llvm__Constant_p_t IdxList) {
    long cPtr = bitreaderJNI.ConstantExpr_getInBoundsGetElementPtr__SWIG_0(Constant.getCPtr(C), C, SWIGTYPE_p_ArrayRefT_llvm__Constant_p_t.getCPtr(IdxList));
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getInBoundsGetElementPtr(Constant C, Constant Idx) {
    long cPtr = bitreaderJNI.ConstantExpr_getInBoundsGetElementPtr__SWIG_1(Constant.getCPtr(C), C, Constant.getCPtr(Idx), Idx);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getInBoundsGetElementPtr(Constant C, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t IdxList) {
    long cPtr = bitreaderJNI.ConstantExpr_getInBoundsGetElementPtr__SWIG_2(Constant.getCPtr(C), C, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(IdxList));
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getExtractElement(Constant Vec, Constant Idx) {
    long cPtr = bitreaderJNI.ConstantExpr_getExtractElement(Constant.getCPtr(Vec), Vec, Constant.getCPtr(Idx), Idx);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getInsertElement(Constant Vec, Constant Elt, Constant Idx) {
    long cPtr = bitreaderJNI.ConstantExpr_getInsertElement(Constant.getCPtr(Vec), Vec, Constant.getCPtr(Elt), Elt, Constant.getCPtr(Idx), Idx);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getShuffleVector(Constant V1, Constant V2, Constant Mask) {
    long cPtr = bitreaderJNI.ConstantExpr_getShuffleVector(Constant.getCPtr(V1), V1, Constant.getCPtr(V2), V2, Constant.getCPtr(Mask), Mask);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getExtractValue(Constant Agg, SWIGTYPE_p_ArrayRefT_unsigned_int_t Idxs) {
    long cPtr = bitreaderJNI.ConstantExpr_getExtractValue(Constant.getCPtr(Agg), Agg, SWIGTYPE_p_ArrayRefT_unsigned_int_t.getCPtr(Idxs));
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getInsertValue(Constant Agg, Constant Val, SWIGTYPE_p_ArrayRefT_unsigned_int_t Idxs) {
    long cPtr = bitreaderJNI.ConstantExpr_getInsertValue(Constant.getCPtr(Agg), Agg, Constant.getCPtr(Val), Val, SWIGTYPE_p_ArrayRefT_unsigned_int_t.getCPtr(Idxs));
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public long getOpcode() {
    return bitreaderJNI.ConstantExpr_getOpcode(swigCPtr, this);
  }

  public long getPredicate() {
    return bitreaderJNI.ConstantExpr_getPredicate(swigCPtr, this);
  }

  public SWIGTYPE_p_ArrayRefT_unsigned_int_t getIndices() {
    return new SWIGTYPE_p_ArrayRefT_unsigned_int_t(bitreaderJNI.ConstantExpr_getIndices(swigCPtr, this), true);
  }

  public String getOpcodeName() {
    return bitreaderJNI.ConstantExpr_getOpcodeName(swigCPtr, this);
  }

  public Constant getWithOperandReplaced(long OpNo, Constant Op) {
    long cPtr = bitreaderJNI.ConstantExpr_getWithOperandReplaced(swigCPtr, this, OpNo, Constant.getCPtr(Op), Op);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public Constant getWithOperands(SWIGTYPE_p_ArrayRefT_llvm__Constant_p_t Ops) {
    long cPtr = bitreaderJNI.ConstantExpr_getWithOperands__SWIG_0(swigCPtr, this, SWIGTYPE_p_ArrayRefT_llvm__Constant_p_t.getCPtr(Ops));
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public Constant getWithOperands(SWIGTYPE_p_ArrayRefT_llvm__Constant_p_t Ops, Type Ty) {
    long cPtr = bitreaderJNI.ConstantExpr_getWithOperands__SWIG_1(swigCPtr, this, SWIGTYPE_p_ArrayRefT_llvm__Constant_p_t.getCPtr(Ops), Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public Instruction getAsInstruction() {
    long cPtr = bitreaderJNI.ConstantExpr_getAsInstruction(swigCPtr, this);
    return (cPtr == 0) ? null : new Instruction(cPtr, false);
  }

  public void destroyConstant() {
    bitreaderJNI.ConstantExpr_destroyConstant(swigCPtr, this);
  }

  public void replaceUsesOfWithOnConstant(Value From, Value To, SWIGTYPE_p_Use U) {
    bitreaderJNI.ConstantExpr_replaceUsesOfWithOnConstant(swigCPtr, this, Value.getCPtr(From), From, Value.getCPtr(To), To, SWIGTYPE_p_Use.getCPtr(U));
  }

  public static boolean classof(Value V) {
    return bitreaderJNI.ConstantExpr_classof(Value.getCPtr(V), V);
  }

}
