/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class DIType extends DIScope {
  private long swigCPtr;

  protected DIType(long cPtr, boolean cMemoryOwn) {
    super(bitreaderJNI.DIType_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DIType obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        bitreaderJNI.delete_DIType(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public boolean Verify() {
    return bitreaderJNI.DIType_Verify(swigCPtr, this);
  }

  public DIType(MDNode N) {
    this(bitreaderJNI.new_DIType__SWIG_1(MDNode.getCPtr(N), N), true);
  }

  public DIType() {
    this(bitreaderJNI.new_DIType__SWIG_2(), true);
  }

  public DIScope getContext() {
    return new DIScope(bitreaderJNI.DIType_getContext(swigCPtr, this), true);
  }

  public StringRef getName() {
    return new StringRef(bitreaderJNI.DIType_getName(swigCPtr, this), true);
  }

  public long getLineNumber() {
    return bitreaderJNI.DIType_getLineNumber(swigCPtr, this);
  }

  public SWIGTYPE_p_uint64_t getSizeInBits() {
    return new SWIGTYPE_p_uint64_t(bitreaderJNI.DIType_getSizeInBits(swigCPtr, this), true);
  }

  public SWIGTYPE_p_uint64_t getAlignInBits() {
    return new SWIGTYPE_p_uint64_t(bitreaderJNI.DIType_getAlignInBits(swigCPtr, this), true);
  }

  public SWIGTYPE_p_uint64_t getOffsetInBits() {
    return new SWIGTYPE_p_uint64_t(bitreaderJNI.DIType_getOffsetInBits(swigCPtr, this), true);
  }

  public long getFlags() {
    return bitreaderJNI.DIType_getFlags(swigCPtr, this);
  }

  public boolean isPrivate() {
    return bitreaderJNI.DIType_isPrivate(swigCPtr, this);
  }

  public boolean isProtected() {
    return bitreaderJNI.DIType_isProtected(swigCPtr, this);
  }

  public boolean isForwardDecl() {
    return bitreaderJNI.DIType_isForwardDecl(swigCPtr, this);
  }

  public boolean isAppleBlockExtension() {
    return bitreaderJNI.DIType_isAppleBlockExtension(swigCPtr, this);
  }

  public boolean isBlockByrefStruct() {
    return bitreaderJNI.DIType_isBlockByrefStruct(swigCPtr, this);
  }

  public boolean isVirtual() {
    return bitreaderJNI.DIType_isVirtual(swigCPtr, this);
  }

  public boolean isArtificial() {
    return bitreaderJNI.DIType_isArtificial(swigCPtr, this);
  }

  public boolean isObjectPointer() {
    return bitreaderJNI.DIType_isObjectPointer(swigCPtr, this);
  }

  public boolean isObjcClassComplete() {
    return bitreaderJNI.DIType_isObjcClassComplete(swigCPtr, this);
  }

  public boolean isVector() {
    return bitreaderJNI.DIType_isVector(swigCPtr, this);
  }

  public boolean isStaticMember() {
    return bitreaderJNI.DIType_isStaticMember(swigCPtr, this);
  }

  public boolean isValid() {
    return bitreaderJNI.DIType_isValid(swigCPtr, this);
  }

  public boolean isUnsignedDIType() {
    return bitreaderJNI.DIType_isUnsignedDIType(swigCPtr, this);
  }

  public void replaceAllUsesWith(DIDescriptor D) {
    bitreaderJNI.DIType_replaceAllUsesWith__SWIG_0(swigCPtr, this, DIDescriptor.getCPtr(D), D);
  }

  public void replaceAllUsesWith(MDNode D) {
    bitreaderJNI.DIType_replaceAllUsesWith__SWIG_1(swigCPtr, this, MDNode.getCPtr(D), D);
  }

}
