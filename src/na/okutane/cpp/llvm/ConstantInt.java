/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class ConstantInt extends Constant {
  private long swigCPtr;

  protected ConstantInt(long cPtr, boolean cMemoryOwn) {
    super(bitreaderJNI.ConstantInt_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ConstantInt obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        bitreaderJNI.delete_ConstantInt(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static ConstantInt getTrue(LLVMContext Context) {
    long cPtr = bitreaderJNI.ConstantInt_getTrue__SWIG_0(LLVMContext.getCPtr(Context), Context);
    return (cPtr == 0) ? null : new ConstantInt(cPtr, false);
  }

  public static ConstantInt getFalse(LLVMContext Context) {
    long cPtr = bitreaderJNI.ConstantInt_getFalse__SWIG_0(LLVMContext.getCPtr(Context), Context);
    return (cPtr == 0) ? null : new ConstantInt(cPtr, false);
  }

  public static Constant getTrue(Type Ty) {
    long cPtr = bitreaderJNI.ConstantInt_getTrue__SWIG_1(Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant getFalse(Type Ty) {
    long cPtr = bitreaderJNI.ConstantInt_getFalse__SWIG_1(Type.getCPtr(Ty), Ty);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant get(Type Ty, SWIGTYPE_p_uint64_t V, boolean isSigned) {
    long cPtr = bitreaderJNI.ConstantInt_get__SWIG_0(Type.getCPtr(Ty), Ty, SWIGTYPE_p_uint64_t.getCPtr(V), isSigned);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static Constant get(Type Ty, SWIGTYPE_p_uint64_t V) {
    long cPtr = bitreaderJNI.ConstantInt_get__SWIG_1(Type.getCPtr(Ty), Ty, SWIGTYPE_p_uint64_t.getCPtr(V));
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static ConstantInt get(SWIGTYPE_p_llvm__IntegerType Ty, SWIGTYPE_p_uint64_t V, boolean isSigned) {
    long cPtr = bitreaderJNI.ConstantInt_get__SWIG_2(SWIGTYPE_p_llvm__IntegerType.getCPtr(Ty), SWIGTYPE_p_uint64_t.getCPtr(V), isSigned);
    return (cPtr == 0) ? null : new ConstantInt(cPtr, false);
  }

  public static ConstantInt get(SWIGTYPE_p_llvm__IntegerType Ty, SWIGTYPE_p_uint64_t V) {
    long cPtr = bitreaderJNI.ConstantInt_get__SWIG_3(SWIGTYPE_p_llvm__IntegerType.getCPtr(Ty), SWIGTYPE_p_uint64_t.getCPtr(V));
    return (cPtr == 0) ? null : new ConstantInt(cPtr, false);
  }

  public static ConstantInt getSigned(SWIGTYPE_p_llvm__IntegerType Ty, SWIGTYPE_p_int64_t V) {
    long cPtr = bitreaderJNI.ConstantInt_getSigned__SWIG_0(SWIGTYPE_p_llvm__IntegerType.getCPtr(Ty), SWIGTYPE_p_int64_t.getCPtr(V));
    return (cPtr == 0) ? null : new ConstantInt(cPtr, false);
  }

  public static Constant getSigned(Type Ty, SWIGTYPE_p_int64_t V) {
    long cPtr = bitreaderJNI.ConstantInt_getSigned__SWIG_1(Type.getCPtr(Ty), Ty, SWIGTYPE_p_int64_t.getCPtr(V));
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public static ConstantInt get(LLVMContext Context, APInt V) {
    long cPtr = bitreaderJNI.ConstantInt_get__SWIG_4(LLVMContext.getCPtr(Context), Context, APInt.getCPtr(V), V);
    return (cPtr == 0) ? null : new ConstantInt(cPtr, false);
  }

  public static ConstantInt get(SWIGTYPE_p_llvm__IntegerType Ty, StringRef Str, SWIGTYPE_p_uint8_t radix) {
    long cPtr = bitreaderJNI.ConstantInt_get__SWIG_5(SWIGTYPE_p_llvm__IntegerType.getCPtr(Ty), StringRef.getCPtr(Str), Str, SWIGTYPE_p_uint8_t.getCPtr(radix));
    return (cPtr == 0) ? null : new ConstantInt(cPtr, false);
  }

  public static Constant get(Type Ty, APInt V) {
    long cPtr = bitreaderJNI.ConstantInt_get__SWIG_6(Type.getCPtr(Ty), Ty, APInt.getCPtr(V), V);
    return (cPtr == 0) ? null : new Constant(cPtr, false);
  }

  public APInt getValue() {
    return new APInt(bitreaderJNI.ConstantInt_getValue(swigCPtr, this), false);
  }

  public long getBitWidth() {
    return bitreaderJNI.ConstantInt_getBitWidth(swigCPtr, this);
  }

  public SWIGTYPE_p_uint64_t getZExtValue() {
    return new SWIGTYPE_p_uint64_t(bitreaderJNI.ConstantInt_getZExtValue(swigCPtr, this), true);
  }

  public SWIGTYPE_p_int64_t getSExtValue() {
    return new SWIGTYPE_p_int64_t(bitreaderJNI.ConstantInt_getSExtValue(swigCPtr, this), true);
  }

  public boolean equalsInt(SWIGTYPE_p_uint64_t V) {
    return bitreaderJNI.ConstantInt_equalsInt(swigCPtr, this, SWIGTYPE_p_uint64_t.getCPtr(V));
  }

  public SWIGTYPE_p_llvm__IntegerType getType() {
    long cPtr = bitreaderJNI.ConstantInt_getType(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_llvm__IntegerType(cPtr, false);
  }

  public static boolean isValueValidForType(Type Ty, SWIGTYPE_p_uint64_t V) {
    return bitreaderJNI.ConstantInt_isValueValidForType__SWIG_0(Type.getCPtr(Ty), Ty, SWIGTYPE_p_uint64_t.getCPtr(V));
  }

  public static boolean isValueValidForType(Type Ty, SWIGTYPE_p_int64_t V) {
    return bitreaderJNI.ConstantInt_isValueValidForType__SWIG_1(Type.getCPtr(Ty), Ty, SWIGTYPE_p_int64_t.getCPtr(V));
  }

  public boolean isNegative() {
    return bitreaderJNI.ConstantInt_isNegative(swigCPtr, this);
  }

  public boolean isZero() {
    return bitreaderJNI.ConstantInt_isZero(swigCPtr, this);
  }

  public boolean isOne() {
    return bitreaderJNI.ConstantInt_isOne(swigCPtr, this);
  }

  public boolean isMinusOne() {
    return bitreaderJNI.ConstantInt_isMinusOne(swigCPtr, this);
  }

  public boolean isMaxValue(boolean isSigned) {
    return bitreaderJNI.ConstantInt_isMaxValue(swigCPtr, this, isSigned);
  }

  public boolean isMinValue(boolean isSigned) {
    return bitreaderJNI.ConstantInt_isMinValue(swigCPtr, this, isSigned);
  }

  public boolean uge(SWIGTYPE_p_uint64_t Num) {
    return bitreaderJNI.ConstantInt_uge(swigCPtr, this, SWIGTYPE_p_uint64_t.getCPtr(Num));
  }

  public SWIGTYPE_p_uint64_t getLimitedValue(SWIGTYPE_p_uint64_t Limit) {
    return new SWIGTYPE_p_uint64_t(bitreaderJNI.ConstantInt_getLimitedValue__SWIG_0(swigCPtr, this, SWIGTYPE_p_uint64_t.getCPtr(Limit)), true);
  }

  public SWIGTYPE_p_uint64_t getLimitedValue() {
    return new SWIGTYPE_p_uint64_t(bitreaderJNI.ConstantInt_getLimitedValue__SWIG_1(swigCPtr, this), true);
  }

  public static boolean classof(Value V) {
    return bitreaderJNI.ConstantInt_classof(Value.getCPtr(V), V);
  }

}
