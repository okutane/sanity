/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class bitreaderJNI {
  public final static native boolean getAsUnsignedInteger(long jarg1, StringRef jarg1_, long jarg2, long jarg3);
  public final static native boolean getAsSignedInteger(long jarg1, StringRef jarg1_, long jarg2, long jarg3);
  public final static native long StringRef_npos_get();
  public final static native long new_StringRef__SWIG_0();
  public final static native long new_StringRef__SWIG_1(String jarg1);
  public final static native long new_StringRef__SWIG_2(String jarg1, long jarg2);
  public final static native String StringRef_begin(long jarg1, StringRef jarg1_);
  public final static native String StringRef_end(long jarg1, StringRef jarg1_);
  public final static native String StringRef_data(long jarg1, StringRef jarg1_);
  public final static native boolean StringRef_empty(long jarg1, StringRef jarg1_);
  public final static native long StringRef_size(long jarg1, StringRef jarg1_);
  public final static native char StringRef_front(long jarg1, StringRef jarg1_);
  public final static native char StringRef_back(long jarg1, StringRef jarg1_);
  public final static native boolean StringRef_equals(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native boolean StringRef_equals_lower(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native int StringRef_compare(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native int StringRef_compare_lower(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native int StringRef_compare_numeric(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_edit_distance__SWIG_0(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, boolean jarg3, long jarg4);
  public final static native long StringRef_edit_distance__SWIG_1(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, boolean jarg3);
  public final static native long StringRef_edit_distance__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native String StringRef_str(long jarg1, StringRef jarg1_);
  public final static native boolean StringRef_startswith(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native boolean StringRef_endswith(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_find__SWIG_0(long jarg1, StringRef jarg1_, char jarg2, long jarg3);
  public final static native long StringRef_find__SWIG_1(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_find__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long StringRef_find__SWIG_3(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_rfind__SWIG_0(long jarg1, StringRef jarg1_, char jarg2, long jarg3);
  public final static native long StringRef_rfind__SWIG_1(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_rfind__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_find_first_of__SWIG_0(long jarg1, StringRef jarg1_, char jarg2, long jarg3);
  public final static native long StringRef_find_first_of__SWIG_1(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_find_first_of__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long StringRef_find_first_of__SWIG_3(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_find_first_not_of__SWIG_0(long jarg1, StringRef jarg1_, char jarg2, long jarg3);
  public final static native long StringRef_find_first_not_of__SWIG_1(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_find_first_not_of__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long StringRef_find_first_not_of__SWIG_3(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_find_last_of__SWIG_0(long jarg1, StringRef jarg1_, char jarg2, long jarg3);
  public final static native long StringRef_find_last_of__SWIG_1(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_find_last_of__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long StringRef_find_last_of__SWIG_3(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_find_last_not_of__SWIG_0(long jarg1, StringRef jarg1_, char jarg2, long jarg3);
  public final static native long StringRef_find_last_not_of__SWIG_1(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_find_last_not_of__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long StringRef_find_last_not_of__SWIG_3(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_count__SWIG_0(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_count__SWIG_1(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native boolean StringRef_getAsInteger(long jarg1, StringRef jarg1_, long jarg2, long jarg3, APInt jarg3_);
  public final static native String StringRef_lower(long jarg1, StringRef jarg1_);
  public final static native String StringRef_upper(long jarg1, StringRef jarg1_);
  public final static native long StringRef_substr__SWIG_0(long jarg1, StringRef jarg1_, long jarg2, long jarg3);
  public final static native long StringRef_substr__SWIG_1(long jarg1, StringRef jarg1_, long jarg2);
  public final static native long StringRef_drop_front__SWIG_0(long jarg1, StringRef jarg1_, long jarg2);
  public final static native long StringRef_drop_front__SWIG_1(long jarg1, StringRef jarg1_);
  public final static native long StringRef_drop_back__SWIG_0(long jarg1, StringRef jarg1_, long jarg2);
  public final static native long StringRef_drop_back__SWIG_1(long jarg1, StringRef jarg1_);
  public final static native long StringRef_slice(long jarg1, StringRef jarg1_, long jarg2, long jarg3);
  public final static native long StringRef_split__SWIG_0(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_split__SWIG_1(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native void StringRef_split__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, long jarg3, StringRef jarg3_, int jarg4, boolean jarg5);
  public final static native void StringRef_split__SWIG_3(long jarg1, StringRef jarg1_, long jarg2, long jarg3, StringRef jarg3_, int jarg4);
  public final static native void StringRef_split__SWIG_4(long jarg1, StringRef jarg1_, long jarg2, long jarg3, StringRef jarg3_);
  public final static native long StringRef_rsplit(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_ltrim__SWIG_0(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_ltrim__SWIG_1(long jarg1, StringRef jarg1_);
  public final static native long StringRef_rtrim__SWIG_0(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_rtrim__SWIG_1(long jarg1, StringRef jarg1_);
  public final static native long StringRef_trim__SWIG_0(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_trim__SWIG_1(long jarg1, StringRef jarg1_);
  public final static native void delete_StringRef(long jarg1);
  public final static native long hash_value__SWIG_0(long jarg1, StringRef jarg1_);
  public final static native long host_char_bit_get();
  public final static native long integerPartWidth_get();
  public final static native long new_APInt__SWIG_0(long jarg1, long jarg2, boolean jarg3);
  public final static native long new_APInt__SWIG_1(long jarg1, long jarg2);
  public final static native long new_APInt__SWIG_2(long jarg1, long jarg2);
  public final static native long new_APInt__SWIG_3(long jarg1, long jarg2, long jarg3);
  public final static native long new_APInt__SWIG_4(long jarg1, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long new_APInt__SWIG_5(long jarg1, APInt jarg1_);
  public final static native void delete_APInt(long jarg1);
  public final static native long new_APInt__SWIG_6();
  public final static native void APInt_Profile(long jarg1, APInt jarg1_, long jarg2);
  public final static native boolean APInt_isNegative(long jarg1, APInt jarg1_);
  public final static native boolean APInt_isNonNegative(long jarg1, APInt jarg1_);
  public final static native boolean APInt_isStrictlyPositive(long jarg1, APInt jarg1_);
  public final static native boolean APInt_isAllOnesValue(long jarg1, APInt jarg1_);
  public final static native boolean APInt_isMaxValue(long jarg1, APInt jarg1_);
  public final static native boolean APInt_isMaxSignedValue(long jarg1, APInt jarg1_);
  public final static native boolean APInt_isMinValue(long jarg1, APInt jarg1_);
  public final static native boolean APInt_isMinSignedValue(long jarg1, APInt jarg1_);
  public final static native boolean APInt_isIntN(long jarg1, APInt jarg1_, long jarg2);
  public final static native boolean APInt_isSignedIntN(long jarg1, APInt jarg1_, long jarg2);
  public final static native boolean APInt_isPowerOf2(long jarg1, APInt jarg1_);
  public final static native boolean APInt_isSignBit(long jarg1, APInt jarg1_);
  public final static native boolean APInt_getBoolValue(long jarg1, APInt jarg1_);
  public final static native long APInt_getLimitedValue__SWIG_0(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_getLimitedValue__SWIG_1(long jarg1, APInt jarg1_);
  public final static native long APInt_getMaxValue(long jarg1);
  public final static native long APInt_getSignedMaxValue(long jarg1);
  public final static native long APInt_getMinValue(long jarg1);
  public final static native long APInt_getSignedMinValue(long jarg1);
  public final static native long APInt_getSignBit(long jarg1);
  public final static native long APInt_getAllOnesValue(long jarg1);
  public final static native long APInt_getNullValue(long jarg1);
  public final static native long APInt_getHiBits(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_getLoBits(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_getOneBitSet(long jarg1, long jarg2);
  public final static native long APInt_getBitsSet(long jarg1, long jarg2, long jarg3);
  public final static native long APInt_getHighBitsSet(long jarg1, long jarg2);
  public final static native long APInt_getLowBitsSet(long jarg1, long jarg2);
  public final static native long APInt_getSplat(long jarg1, long jarg2, APInt jarg2_);
  public final static native boolean APInt_isSameValue(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_getRawData(long jarg1, APInt jarg1_);
  public final static native long APInt_And(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_Or(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_Xor(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_ashr__SWIG_0(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_lshr__SWIG_0(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_shl__SWIG_0(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_rotl__SWIG_0(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_rotr__SWIG_0(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_ashr__SWIG_1(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_lshr__SWIG_1(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_shl__SWIG_1(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_rotl__SWIG_1(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_rotr__SWIG_1(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_udiv(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_sdiv(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_urem(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_srem(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native void APInt_udivrem(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_, long jarg3, APInt jarg3_, long jarg4, APInt jarg4_);
  public final static native void APInt_sdivrem(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_, long jarg3, APInt jarg3_, long jarg4, APInt jarg4_);
  public final static native long APInt_sadd_ov(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_, long jarg3);
  public final static native long APInt_uadd_ov(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_, long jarg3);
  public final static native long APInt_ssub_ov(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_, long jarg3);
  public final static native long APInt_usub_ov(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_, long jarg3);
  public final static native long APInt_sdiv_ov(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_, long jarg3);
  public final static native long APInt_smul_ov(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_, long jarg3);
  public final static native long APInt_umul_ov(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_, long jarg3);
  public final static native long APInt_sshl_ov(long jarg1, APInt jarg1_, long jarg2, long jarg3);
  public final static native boolean APInt_eq(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native boolean APInt_ne(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native boolean APInt_ult__SWIG_0(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native boolean APInt_ult__SWIG_1(long jarg1, APInt jarg1_, long jarg2);
  public final static native boolean APInt_slt__SWIG_0(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native boolean APInt_slt__SWIG_1(long jarg1, APInt jarg1_, long jarg2);
  public final static native boolean APInt_ule__SWIG_0(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native boolean APInt_ule__SWIG_1(long jarg1, APInt jarg1_, long jarg2);
  public final static native boolean APInt_sle__SWIG_0(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native boolean APInt_sle__SWIG_1(long jarg1, APInt jarg1_, long jarg2);
  public final static native boolean APInt_ugt__SWIG_0(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native boolean APInt_ugt__SWIG_1(long jarg1, APInt jarg1_, long jarg2);
  public final static native boolean APInt_sgt__SWIG_0(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native boolean APInt_sgt__SWIG_1(long jarg1, APInt jarg1_, long jarg2);
  public final static native boolean APInt_uge__SWIG_0(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native boolean APInt_uge__SWIG_1(long jarg1, APInt jarg1_, long jarg2);
  public final static native boolean APInt_sge__SWIG_0(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native boolean APInt_sge__SWIG_1(long jarg1, APInt jarg1_, long jarg2);
  public final static native boolean APInt_intersects(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_trunc(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_sext(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_zext(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_sextOrTrunc(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_zextOrTrunc(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_sextOrSelf(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_zextOrSelf(long jarg1, APInt jarg1_, long jarg2);
  public final static native void APInt_setAllBits(long jarg1, APInt jarg1_);
  public final static native void APInt_setBit(long jarg1, APInt jarg1_, long jarg2);
  public final static native void APInt_clearAllBits(long jarg1, APInt jarg1_);
  public final static native void APInt_clearBit(long jarg1, APInt jarg1_, long jarg2);
  public final static native void APInt_flipAllBits(long jarg1, APInt jarg1_);
  public final static native void APInt_flipBit(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_getBitWidth(long jarg1, APInt jarg1_);
  public final static native long APInt_getNumWords__SWIG_0(long jarg1, APInt jarg1_);
  public final static native long APInt_getNumWords__SWIG_1(long jarg1);
  public final static native long APInt_getActiveBits(long jarg1, APInt jarg1_);
  public final static native long APInt_getActiveWords(long jarg1, APInt jarg1_);
  public final static native long APInt_getMinSignedBits(long jarg1, APInt jarg1_);
  public final static native long APInt_getZExtValue(long jarg1, APInt jarg1_);
  public final static native long APInt_getSExtValue(long jarg1, APInt jarg1_);
  public final static native long APInt_getBitsNeeded(long jarg1, StringRef jarg1_, long jarg2);
  public final static native long APInt_countLeadingZeros(long jarg1, APInt jarg1_);
  public final static native long APInt_countLeadingOnes(long jarg1, APInt jarg1_);
  public final static native long APInt_getNumSignBits(long jarg1, APInt jarg1_);
  public final static native long APInt_countTrailingZeros(long jarg1, APInt jarg1_);
  public final static native long APInt_countTrailingOnes(long jarg1, APInt jarg1_);
  public final static native long APInt_countPopulation(long jarg1, APInt jarg1_);
  public final static native void APInt_print(long jarg1, APInt jarg1_, long jarg2, boolean jarg3);
  public final static native void APInt_toString__SWIG_0(long jarg1, APInt jarg1_, long jarg2, long jarg3, boolean jarg4, boolean jarg5);
  public final static native void APInt_toString__SWIG_1(long jarg1, APInt jarg1_, long jarg2, long jarg3, boolean jarg4);
  public final static native void APInt_toStringUnsigned__SWIG_0(long jarg1, APInt jarg1_, long jarg2, long jarg3);
  public final static native void APInt_toStringUnsigned__SWIG_1(long jarg1, APInt jarg1_, long jarg2);
  public final static native void APInt_toStringSigned__SWIG_0(long jarg1, APInt jarg1_, long jarg2, long jarg3);
  public final static native void APInt_toStringSigned__SWIG_1(long jarg1, APInt jarg1_, long jarg2);
  public final static native String APInt_toString__SWIG_2(long jarg1, APInt jarg1_, long jarg2, boolean jarg3);
  public final static native long APInt_byteSwap(long jarg1, APInt jarg1_);
  public final static native double APInt_roundToDouble__SWIG_0(long jarg1, APInt jarg1_, boolean jarg2);
  public final static native double APInt_roundToDouble__SWIG_1(long jarg1, APInt jarg1_);
  public final static native double APInt_signedRoundToDouble(long jarg1, APInt jarg1_);
  public final static native double APInt_bitsToDouble(long jarg1, APInt jarg1_);
  public final static native float APInt_bitsToFloat(long jarg1, APInt jarg1_);
  public final static native long APInt_doubleToBits(double jarg1);
  public final static native long APInt_floatToBits(float jarg1);
  public final static native long APInt_logBase2(long jarg1, APInt jarg1_);
  public final static native long APInt_ceilLogBase2(long jarg1, APInt jarg1_);
  public final static native long APInt_exactLogBase2(long jarg1, APInt jarg1_);
  public final static native long APInt_sqrt(long jarg1, APInt jarg1_);
  public final static native long APInt_abs(long jarg1, APInt jarg1_);
  public final static native long APInt_multiplicativeInverse(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_magic(long jarg1, APInt jarg1_);
  public final static native long APInt_magicu__SWIG_0(long jarg1, APInt jarg1_, long jarg2);
  public final static native long APInt_magicu__SWIG_1(long jarg1, APInt jarg1_);
  public final static native void APInt_tcSet(long jarg1, long jarg2, long jarg3);
  public final static native void APInt_tcAssign(long jarg1, long jarg2, long jarg3);
  public final static native boolean APInt_tcIsZero(long jarg1, long jarg2);
  public final static native int APInt_tcExtractBit(long jarg1, long jarg2);
  public final static native void APInt_tcExtract(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void APInt_tcSetBit(long jarg1, long jarg2);
  public final static native void APInt_tcClearBit(long jarg1, long jarg2);
  public final static native long APInt_tcLSB(long jarg1, long jarg2);
  public final static native long APInt_tcMSB(long jarg1, long jarg2);
  public final static native void APInt_tcNegate(long jarg1, long jarg2);
  public final static native long APInt_tcAdd(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long APInt_tcSubtract(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int APInt_tcMultiplyPart(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, boolean jarg7);
  public final static native int APInt_tcMultiply(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long APInt_tcFullMultiply(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int APInt_tcDivide(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void APInt_tcShiftLeft(long jarg1, long jarg2, long jarg3);
  public final static native void APInt_tcShiftRight(long jarg1, long jarg2, long jarg3);
  public final static native void APInt_tcAnd(long jarg1, long jarg2, long jarg3);
  public final static native void APInt_tcOr(long jarg1, long jarg2, long jarg3);
  public final static native void APInt_tcXor(long jarg1, long jarg2, long jarg3);
  public final static native void APInt_tcComplement(long jarg1, long jarg2);
  public final static native int APInt_tcCompare(long jarg1, long jarg2, long jarg3);
  public final static native long APInt_tcIncrement(long jarg1, long jarg2);
  public final static native void APInt_tcSetLeastSignificantBits(long jarg1, long jarg2, long jarg3);
  public final static native void APInt_dump(long jarg1, APInt jarg1_);
  public final static native void APInt_ms_m_set(long jarg1, APInt.ms jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_ms_m_get(long jarg1, APInt.ms jarg1_);
  public final static native void APInt_ms_s_set(long jarg1, APInt.ms jarg1_, long jarg2);
  public final static native long APInt_ms_s_get(long jarg1, APInt.ms jarg1_);
  public final static native long new_APInt_ms();
  public final static native void delete_APInt_ms(long jarg1);
  public final static native void APInt_mu_m_set(long jarg1, APInt.mu jarg1_, long jarg2, APInt jarg2_);
  public final static native long APInt_mu_m_get(long jarg1, APInt.mu jarg1_);
  public final static native void APInt_mu_a_set(long jarg1, APInt.mu jarg1_, boolean jarg2);
  public final static native boolean APInt_mu_a_get(long jarg1, APInt.mu jarg1_);
  public final static native void APInt_mu_s_set(long jarg1, APInt.mu jarg1_, long jarg2);
  public final static native long APInt_mu_s_get(long jarg1, APInt.mu jarg1_);
  public final static native long new_APInt_mu();
  public final static native void delete_APInt_mu(long jarg1);
  public final static native long smin(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long smax(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long umin(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long umax(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native boolean isIntN(long jarg1, long jarg2, APInt jarg2_);
  public final static native boolean isSignedIntN(long jarg1, long jarg2, APInt jarg2_);
  public final static native boolean isMask(long jarg1, long jarg2, APInt jarg2_);
  public final static native boolean isShiftedMask(long jarg1, long jarg2, APInt jarg2_);
  public final static native long byteSwap(long jarg1, APInt jarg1_);
  public final static native long logBase2(long jarg1, APInt jarg1_);
  public final static native long GreatestCommonDivisor(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native double RoundAPIntToDouble(long jarg1, APInt jarg1_);
  public final static native double RoundSignedAPIntToDouble(long jarg1, APInt jarg1_);
  public final static native float RoundAPIntToFloat(long jarg1, APInt jarg1_);
  public final static native float RoundSignedAPIntToFloat(long jarg1, APInt jarg1_);
  public final static native long RoundDoubleToAPInt(double jarg1, long jarg2);
  public final static native long RoundFloatToAPInt(float jarg1, long jarg2);
  public final static native long ashr(long jarg1, APInt jarg1_, long jarg2);
  public final static native long lshr(long jarg1, APInt jarg1_, long jarg2);
  public final static native long shl(long jarg1, APInt jarg1_, long jarg2);
  public final static native long sdiv(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long udiv(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long srem(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long urem(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long mul(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long add(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long sub(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long And(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long Or(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long Xor(long jarg1, APInt jarg1_, long jarg2, APInt jarg2_);
  public final static native long Not(long jarg1, APInt jarg1_);
  public final static native long hash_value__SWIG_1(long jarg1, APInt jarg1_);
  public final static native long LLVMContext_pImpl_get(long jarg1, LLVMContext jarg1_);
  public final static native long new_LLVMContext();
  public final static native void delete_LLVMContext(long jarg1);
  public final static native int LLVMContext_MD_dbg_get();
  public final static native int LLVMContext_MD_tbaa_get();
  public final static native int LLVMContext_MD_prof_get();
  public final static native int LLVMContext_MD_fpmath_get();
  public final static native int LLVMContext_MD_range_get();
  public final static native int LLVMContext_MD_tbaa_struct_get();
  public final static native int LLVMContext_MD_invariant_load_get();
  public final static native long LLVMContext_getMDKindID(long jarg1, LLVMContext jarg1_, long jarg2, StringRef jarg2_);
  public final static native void LLVMContext_getMDKindNames(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native void LLVMContext_setInlineAsmDiagnosticHandler__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2, long jarg3);
  public final static native void LLVMContext_setInlineAsmDiagnosticHandler__SWIG_1(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long LLVMContext_getInlineAsmDiagnosticHandler(long jarg1, LLVMContext jarg1_);
  public final static native long LLVMContext_getInlineAsmDiagnosticContext(long jarg1, LLVMContext jarg1_);
  public final static native void LLVMContext_emitError__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2, long jarg3);
  public final static native void LLVMContext_emitError__SWIG_1(long jarg1, LLVMContext jarg1_, long jarg2, Instruction jarg2_, long jarg3);
  public final static native void LLVMContext_emitError__SWIG_2(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long getGlobalContext();
  public final static native long unwrap__SWIG_0(long jarg1);
  public final static native long wrap__SWIG_0(long jarg1);
  public final static native int Type_VoidTyID_get();
  public final static native int Type_LastPrimitiveTyID_get();
  public final static native int Type_FirstDerivedTyID_get();
  public final static native void Type_print(long jarg1, Type jarg1_, long jarg2);
  public final static native void Type_dump(long jarg1, Type jarg1_);
  public final static native long Type_getContext(long jarg1, Type jarg1_);
  public final static native int Type_getTypeID(long jarg1, Type jarg1_);
  public final static native boolean Type_isVoidTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isHalfTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isFloatTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isDoubleTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isX86_FP80Ty(long jarg1, Type jarg1_);
  public final static native boolean Type_isFP128Ty(long jarg1, Type jarg1_);
  public final static native boolean Type_isPPC_FP128Ty(long jarg1, Type jarg1_);
  public final static native boolean Type_isFloatingPointTy(long jarg1, Type jarg1_);
  public final static native long Type_getFltSemantics(long jarg1, Type jarg1_);
  public final static native boolean Type_isX86_MMXTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isFPOrFPVectorTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isLabelTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isMetadataTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isIntegerTy__SWIG_0(long jarg1, Type jarg1_);
  public final static native boolean Type_isIntegerTy__SWIG_1(long jarg1, Type jarg1_, long jarg2);
  public final static native boolean Type_isIntOrIntVectorTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isFunctionTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isStructTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isArrayTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isPointerTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isPtrOrPtrVectorTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isVectorTy(long jarg1, Type jarg1_);
  public final static native boolean Type_canLosslesslyBitCastTo(long jarg1, Type jarg1_, long jarg2, Type jarg2_);
  public final static native boolean Type_isEmptyTy(long jarg1, Type jarg1_);
  public final static native boolean Type_isPrimitiveType(long jarg1, Type jarg1_);
  public final static native boolean Type_isDerivedType(long jarg1, Type jarg1_);
  public final static native boolean Type_isFirstClassType(long jarg1, Type jarg1_);
  public final static native boolean Type_isSingleValueType(long jarg1, Type jarg1_);
  public final static native boolean Type_isAggregateType(long jarg1, Type jarg1_);
  public final static native boolean Type_isSized(long jarg1, Type jarg1_);
  public final static native long Type_getPrimitiveSizeInBits(long jarg1, Type jarg1_);
  public final static native long Type_getScalarSizeInBits(long jarg1, Type jarg1_);
  public final static native int Type_getFPMantissaWidth(long jarg1, Type jarg1_);
  public final static native long Type_getScalarType__SWIG_0(long jarg1, Type jarg1_);
  public final static native long Type_subtype_begin(long jarg1, Type jarg1_);
  public final static native long Type_subtype_end(long jarg1, Type jarg1_);
  public final static native long Type_getContainedType(long jarg1, Type jarg1_, long jarg2);
  public final static native long Type_getNumContainedTypes(long jarg1, Type jarg1_);
  public final static native long Type_getIntegerBitWidth(long jarg1, Type jarg1_);
  public final static native long Type_getFunctionParamType(long jarg1, Type jarg1_, long jarg2);
  public final static native long Type_getFunctionNumParams(long jarg1, Type jarg1_);
  public final static native boolean Type_isFunctionVarArg(long jarg1, Type jarg1_);
  public final static native long Type_getStructName(long jarg1, Type jarg1_);
  public final static native long Type_getStructNumElements(long jarg1, Type jarg1_);
  public final static native long Type_getStructElementType(long jarg1, Type jarg1_, long jarg2);
  public final static native long Type_getSequentialElementType(long jarg1, Type jarg1_);
  public final static native long Type_getArrayNumElements(long jarg1, Type jarg1_);
  public final static native long Type_getArrayElementType(long jarg1, Type jarg1_);
  public final static native long Type_getVectorNumElements(long jarg1, Type jarg1_);
  public final static native long Type_getVectorElementType(long jarg1, Type jarg1_);
  public final static native long Type_getPointerElementType(long jarg1, Type jarg1_);
  public final static native long Type_getPointerAddressSpace(long jarg1, Type jarg1_);
  public final static native long Type_getPrimitiveType(long jarg1, LLVMContext jarg1_, int jarg2);
  public final static native long Type_getVoidTy(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getLabelTy(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getHalfTy(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getFloatTy(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getDoubleTy(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getMetadataTy(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getX86_FP80Ty(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getFP128Ty(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getPPC_FP128Ty(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getX86_MMXTy(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getIntNTy(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getInt1Ty(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getInt8Ty(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getInt16Ty(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getInt32Ty(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getInt64Ty(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getHalfPtrTy__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getHalfPtrTy__SWIG_1(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getFloatPtrTy__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getFloatPtrTy__SWIG_1(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getDoublePtrTy__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getDoublePtrTy__SWIG_1(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getX86_FP80PtrTy__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getX86_FP80PtrTy__SWIG_1(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getFP128PtrTy__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getFP128PtrTy__SWIG_1(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getPPC_FP128PtrTy__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getPPC_FP128PtrTy__SWIG_1(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getX86_MMXPtrTy__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getX86_MMXPtrTy__SWIG_1(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getIntNPtrTy__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2, long jarg3);
  public final static native long Type_getIntNPtrTy__SWIG_1(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getInt1PtrTy__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getInt1PtrTy__SWIG_1(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getInt8PtrTy__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getInt8PtrTy__SWIG_1(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getInt16PtrTy__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getInt16PtrTy__SWIG_1(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getInt32PtrTy__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getInt32PtrTy__SWIG_1(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getInt64PtrTy__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long Type_getInt64PtrTy__SWIG_1(long jarg1, LLVMContext jarg1_);
  public final static native long Type_getPointerTo__SWIG_0(long jarg1, Type jarg1_, long jarg2);
  public final static native long Type_getPointerTo__SWIG_1(long jarg1, Type jarg1_);
  public final static native long unwrap__SWIG_1(long jarg1);
  public final static native long wrap__SWIG_1(long jarg1);
  public final static native void delete_Value(long jarg1);
  public final static native void Value_dump(long jarg1, Value jarg1_);
  public final static native void Value_print__SWIG_0(long jarg1, Value jarg1_, long jarg2, long jarg3);
  public final static native void Value_print__SWIG_1(long jarg1, Value jarg1_, long jarg2);
  public final static native long Value_getType(long jarg1, Value jarg1_);
  public final static native long Value_getContext(long jarg1, Value jarg1_);
  public final static native boolean Value_hasName(long jarg1, Value jarg1_);
  public final static native long Value_getValueName(long jarg1, Value jarg1_);
  public final static native void Value_setValueName(long jarg1, Value jarg1_, long jarg2);
  public final static native long Value_getName(long jarg1, Value jarg1_);
  public final static native void Value_setName(long jarg1, Value jarg1_, long jarg2);
  public final static native void Value_takeName(long jarg1, Value jarg1_, long jarg2, Value jarg2_);
  public final static native void Value_replaceAllUsesWith(long jarg1, Value jarg1_, long jarg2, Value jarg2_);
  public final static native boolean Value_use_empty(long jarg1, Value jarg1_);
  public final static native long Value_use_begin__SWIG_0(long jarg1, Value jarg1_);
  public final static native long Value_use_end__SWIG_0(long jarg1, Value jarg1_);
  public final static native long Value_use_back__SWIG_0(long jarg1, Value jarg1_);
  public final static native boolean Value_hasOneUse(long jarg1, Value jarg1_);
  public final static native boolean Value_hasNUses(long jarg1, Value jarg1_, long jarg2);
  public final static native boolean Value_hasNUsesOrMore(long jarg1, Value jarg1_, long jarg2);
  public final static native boolean Value_isUsedInBasicBlock(long jarg1, Value jarg1_, long jarg2, BasicBlock jarg2_);
  public final static native long Value_getNumUses(long jarg1, Value jarg1_);
  public final static native void Value_addUse(long jarg1, Value jarg1_, long jarg2);
  public final static native int Value_ConstantFirstVal_get();
  public final static native int Value_ConstantLastVal_get();
  public final static native long Value_getValueID(long jarg1, Value jarg1_);
  public final static native long Value_getRawSubclassOptionalData(long jarg1, Value jarg1_);
  public final static native void Value_clearSubclassOptionalData(long jarg1, Value jarg1_);
  public final static native boolean Value_hasSameSubclassOptionalData(long jarg1, Value jarg1_, long jarg2, Value jarg2_);
  public final static native void Value_intersectOptionalDataWith(long jarg1, Value jarg1_, long jarg2, Value jarg2_);
  public final static native boolean Value_hasValueHandle(long jarg1, Value jarg1_);
  public final static native long Value_stripPointerCasts__SWIG_0(long jarg1, Value jarg1_);
  public final static native long Value_stripPointerCastsNoFollowAliases__SWIG_0(long jarg1, Value jarg1_);
  public final static native long Value_stripInBoundsConstantOffsets__SWIG_0(long jarg1, Value jarg1_);
  public final static native long Value_stripInBoundsOffsets__SWIG_0(long jarg1, Value jarg1_);
  public final static native boolean Value_isDereferenceablePointer(long jarg1, Value jarg1_);
  public final static native long Value_DoPHITranslation__SWIG_0(long jarg1, Value jarg1_, long jarg2, BasicBlock jarg2_, long jarg3, BasicBlock jarg3_);
  public final static native long Value_MaximumAlignment_get();
  public final static native void Value_mutateType(long jarg1, Value jarg1_, long jarg2, Type jarg2_);
  public final static native String Value_toString(long jarg1, Value jarg1_);
  public final static native long unwrap__SWIG_2(long jarg1);
  public final static native long wrap__SWIG_2(long jarg1);
  public final static native boolean Constant_isNullValue(long jarg1, Constant jarg1_);
  public final static native boolean Constant_isAllOnesValue(long jarg1, Constant jarg1_);
  public final static native boolean Constant_isNegativeZeroValue(long jarg1, Constant jarg1_);
  public final static native boolean Constant_isZeroValue(long jarg1, Constant jarg1_);
  public final static native boolean Constant_canTrap(long jarg1, Constant jarg1_);
  public final static native boolean Constant_isThreadDependent(long jarg1, Constant jarg1_);
  public final static native boolean Constant_isConstantUsed(long jarg1, Constant jarg1_);
  public final static native int Constant_NoRelocation_get();
  public final static native int Constant_LocalRelocation_get();
  public final static native int Constant_GlobalRelocations_get();
  public final static native int Constant_getRelocationInfo(long jarg1, Constant jarg1_);
  public final static native long Constant_getAggregateElement__SWIG_0(long jarg1, Constant jarg1_, long jarg2);
  public final static native long Constant_getAggregateElement__SWIG_1(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long Constant_getSplatValue(long jarg1, Constant jarg1_);
  public final static native long Constant_getUniqueInteger(long jarg1, Constant jarg1_);
  public final static native void Constant_destroyConstant(long jarg1, Constant jarg1_);
  public final static native boolean Constant_classof(long jarg1, Value jarg1_);
  public final static native void Constant_replaceUsesOfWithOnConstant(long jarg1, Constant jarg1_, long jarg2, Value jarg2_, long jarg3, Value jarg3_, long jarg4);
  public final static native long Constant_getNullValue(long jarg1, Type jarg1_);
  public final static native long Constant_getAllOnesValue(long jarg1, Type jarg1_);
  public final static native long Constant_getIntegerValue(long jarg1, Type jarg1_, long jarg2, APInt jarg2_);
  public final static native void Constant_removeDeadConstantUsers(long jarg1, Constant jarg1_);
  public final static native void delete_Constant(long jarg1);
  public final static native long ConstantInt_getTrue__SWIG_0(long jarg1, LLVMContext jarg1_);
  public final static native long ConstantInt_getFalse__SWIG_0(long jarg1, LLVMContext jarg1_);
  public final static native long ConstantInt_getTrue__SWIG_1(long jarg1, Type jarg1_);
  public final static native long ConstantInt_getFalse__SWIG_1(long jarg1, Type jarg1_);
  public final static native long ConstantInt_get__SWIG_0(long jarg1, Type jarg1_, long jarg2, boolean jarg3);
  public final static native long ConstantInt_get__SWIG_1(long jarg1, Type jarg1_, long jarg2);
  public final static native long ConstantInt_get__SWIG_2(long jarg1, long jarg2, boolean jarg3);
  public final static native long ConstantInt_get__SWIG_3(long jarg1, long jarg2);
  public final static native long ConstantInt_getSigned__SWIG_0(long jarg1, long jarg2);
  public final static native long ConstantInt_getSigned__SWIG_1(long jarg1, Type jarg1_, long jarg2);
  public final static native long ConstantInt_get__SWIG_4(long jarg1, LLVMContext jarg1_, long jarg2, APInt jarg2_);
  public final static native long ConstantInt_get__SWIG_5(long jarg1, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long ConstantInt_get__SWIG_6(long jarg1, Type jarg1_, long jarg2, APInt jarg2_);
  public final static native long ConstantInt_getValue(long jarg1, ConstantInt jarg1_);
  public final static native long ConstantInt_getBitWidth(long jarg1, ConstantInt jarg1_);
  public final static native long ConstantInt_getZExtValue(long jarg1, ConstantInt jarg1_);
  public final static native long ConstantInt_getSExtValue(long jarg1, ConstantInt jarg1_);
  public final static native boolean ConstantInt_equalsInt(long jarg1, ConstantInt jarg1_, long jarg2);
  public final static native long ConstantInt_getType(long jarg1, ConstantInt jarg1_);
  public final static native boolean ConstantInt_isValueValidForType__SWIG_0(long jarg1, Type jarg1_, long jarg2);
  public final static native boolean ConstantInt_isValueValidForType__SWIG_1(long jarg1, Type jarg1_, long jarg2);
  public final static native boolean ConstantInt_isNegative(long jarg1, ConstantInt jarg1_);
  public final static native boolean ConstantInt_isZero(long jarg1, ConstantInt jarg1_);
  public final static native boolean ConstantInt_isOne(long jarg1, ConstantInt jarg1_);
  public final static native boolean ConstantInt_isMinusOne(long jarg1, ConstantInt jarg1_);
  public final static native boolean ConstantInt_isMaxValue(long jarg1, ConstantInt jarg1_, boolean jarg2);
  public final static native boolean ConstantInt_isMinValue(long jarg1, ConstantInt jarg1_, boolean jarg2);
  public final static native boolean ConstantInt_uge(long jarg1, ConstantInt jarg1_, long jarg2);
  public final static native long ConstantInt_getLimitedValue__SWIG_0(long jarg1, ConstantInt jarg1_, long jarg2);
  public final static native long ConstantInt_getLimitedValue__SWIG_1(long jarg1, ConstantInt jarg1_);
  public final static native boolean ConstantInt_classof(long jarg1, Value jarg1_);
  public final static native void delete_ConstantInt(long jarg1);
  public final static native long ConstantFP_getZeroValueForNegation(long jarg1, Type jarg1_);
  public final static native long ConstantFP_get__SWIG_0(long jarg1, Type jarg1_, double jarg2);
  public final static native long ConstantFP_get__SWIG_1(long jarg1, Type jarg1_, long jarg2, StringRef jarg2_);
  public final static native long ConstantFP_get__SWIG_2(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantFP_getNegativeZero(long jarg1, Type jarg1_);
  public final static native long ConstantFP_getInfinity__SWIG_0(long jarg1, Type jarg1_, boolean jarg2);
  public final static native long ConstantFP_getInfinity__SWIG_1(long jarg1, Type jarg1_);
  public final static native boolean ConstantFP_isValueValidForType(long jarg1, Type jarg1_, long jarg2);
  public final static native long ConstantFP_getValueAPF(long jarg1, ConstantFP jarg1_);
  public final static native boolean ConstantFP_isZero(long jarg1, ConstantFP jarg1_);
  public final static native boolean ConstantFP_isNegative(long jarg1, ConstantFP jarg1_);
  public final static native boolean ConstantFP_isNaN(long jarg1, ConstantFP jarg1_);
  public final static native boolean ConstantFP_isExactlyValue__SWIG_0(long jarg1, ConstantFP jarg1_, long jarg2);
  public final static native boolean ConstantFP_isExactlyValue__SWIG_1(long jarg1, ConstantFP jarg1_, double jarg2);
  public final static native boolean ConstantFP_classof(long jarg1, Value jarg1_);
  public final static native void delete_ConstantFP(long jarg1);
  public final static native long ConstantAggregateZero_get(long jarg1, Type jarg1_);
  public final static native void ConstantAggregateZero_destroyConstant(long jarg1, ConstantAggregateZero jarg1_);
  public final static native long ConstantAggregateZero_getSequentialElement(long jarg1, ConstantAggregateZero jarg1_);
  public final static native long ConstantAggregateZero_getStructElement(long jarg1, ConstantAggregateZero jarg1_, long jarg2);
  public final static native long ConstantAggregateZero_getElementValue__SWIG_0(long jarg1, ConstantAggregateZero jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantAggregateZero_getElementValue__SWIG_1(long jarg1, ConstantAggregateZero jarg1_, long jarg2);
  public final static native boolean ConstantAggregateZero_classof(long jarg1, Value jarg1_);
  public final static native void delete_ConstantAggregateZero(long jarg1);
  public final static native long ConstantArray_get(long jarg1, long jarg2);
  public final static native long ConstantArray_getType(long jarg1, ConstantArray jarg1_);
  public final static native void ConstantArray_destroyConstant(long jarg1, ConstantArray jarg1_);
  public final static native void ConstantArray_replaceUsesOfWithOnConstant(long jarg1, ConstantArray jarg1_, long jarg2, Value jarg2_, long jarg3, Value jarg3_, long jarg4);
  public final static native boolean ConstantArray_classof(long jarg1, Value jarg1_);
  public final static native void delete_ConstantArray(long jarg1);
  public final static native long ConstantStruct_get__SWIG_0(long jarg1, long jarg2);
  public final static native long ConstantStruct_get__SWIG_1(long jarg1);
  public final static native long ConstantStruct_getAnon__SWIG_0(long jarg1, boolean jarg2);
  public final static native long ConstantStruct_getAnon__SWIG_1(long jarg1);
  public final static native long ConstantStruct_getAnon__SWIG_2(long jarg1, LLVMContext jarg1_, long jarg2, boolean jarg3);
  public final static native long ConstantStruct_getAnon__SWIG_3(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantStruct_getTypeForElements__SWIG_0(long jarg1, boolean jarg2);
  public final static native long ConstantStruct_getTypeForElements__SWIG_1(long jarg1);
  public final static native long ConstantStruct_getTypeForElements__SWIG_2(long jarg1, LLVMContext jarg1_, long jarg2, boolean jarg3);
  public final static native long ConstantStruct_getTypeForElements__SWIG_3(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantStruct_getType(long jarg1, ConstantStruct jarg1_);
  public final static native void ConstantStruct_destroyConstant(long jarg1, ConstantStruct jarg1_);
  public final static native void ConstantStruct_replaceUsesOfWithOnConstant(long jarg1, ConstantStruct jarg1_, long jarg2, Value jarg2_, long jarg3, Value jarg3_, long jarg4);
  public final static native boolean ConstantStruct_classof(long jarg1, Value jarg1_);
  public final static native void delete_ConstantStruct(long jarg1);
  public final static native long ConstantVector_get(long jarg1);
  public final static native long ConstantVector_getSplat(long jarg1, long jarg2, Constant jarg2_);
  public final static native long ConstantVector_getType(long jarg1, ConstantVector jarg1_);
  public final static native long ConstantVector_getSplatValue(long jarg1, ConstantVector jarg1_);
  public final static native void ConstantVector_destroyConstant(long jarg1, ConstantVector jarg1_);
  public final static native void ConstantVector_replaceUsesOfWithOnConstant(long jarg1, ConstantVector jarg1_, long jarg2, Value jarg2_, long jarg3, Value jarg3_, long jarg4);
  public final static native boolean ConstantVector_classof(long jarg1, Value jarg1_);
  public final static native void delete_ConstantVector(long jarg1);
  public final static native long ConstantPointerNull_get(long jarg1);
  public final static native void ConstantPointerNull_destroyConstant(long jarg1, ConstantPointerNull jarg1_);
  public final static native long ConstantPointerNull_getType(long jarg1, ConstantPointerNull jarg1_);
  public final static native boolean ConstantPointerNull_classof(long jarg1, Value jarg1_);
  public final static native void delete_ConstantPointerNull(long jarg1);
  public final static native long ConstantDataArray_get__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantDataArray_get__SWIG_1(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantDataArray_get__SWIG_2(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantDataArray_get__SWIG_3(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantDataArray_get__SWIG_4(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantDataArray_get__SWIG_5(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantDataArray_getString__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2, StringRef jarg2_, boolean jarg3);
  public final static native long ConstantDataArray_getString__SWIG_1(long jarg1, LLVMContext jarg1_, long jarg2, StringRef jarg2_);
  public final static native long ConstantDataArray_getType(long jarg1, ConstantDataArray jarg1_);
  public final static native boolean ConstantDataArray_classof(long jarg1, Value jarg1_);
  public final static native void delete_ConstantDataArray(long jarg1);
  public final static native long ConstantDataVector_get__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantDataVector_get__SWIG_1(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantDataVector_get__SWIG_2(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantDataVector_get__SWIG_3(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantDataVector_get__SWIG_4(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantDataVector_get__SWIG_5(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long ConstantDataVector_getSplat(long jarg1, long jarg2, Constant jarg2_);
  public final static native long ConstantDataVector_getSplatValue(long jarg1, ConstantDataVector jarg1_);
  public final static native long ConstantDataVector_getType(long jarg1, ConstantDataVector jarg1_);
  public final static native boolean ConstantDataVector_classof(long jarg1, Value jarg1_);
  public final static native void delete_ConstantDataVector(long jarg1);
  public final static native long BlockAddress_get__SWIG_0(long jarg1, Function jarg1_, long jarg2, BasicBlock jarg2_);
  public final static native long BlockAddress_get__SWIG_1(long jarg1, BasicBlock jarg1_);
  public final static native long BlockAddress_getFunction(long jarg1, BlockAddress jarg1_);
  public final static native long BlockAddress_getBasicBlock(long jarg1, BlockAddress jarg1_);
  public final static native void BlockAddress_destroyConstant(long jarg1, BlockAddress jarg1_);
  public final static native void BlockAddress_replaceUsesOfWithOnConstant(long jarg1, BlockAddress jarg1_, long jarg2, Value jarg2_, long jarg3, Value jarg3_, long jarg4);
  public final static native boolean BlockAddress_classof(long jarg1, Value jarg1_);
  public final static native void delete_BlockAddress(long jarg1);
  public final static native long ConstantExpr_getAlignOf(long jarg1, Type jarg1_);
  public final static native long ConstantExpr_getSizeOf(long jarg1, Type jarg1_);
  public final static native long ConstantExpr_getOffsetOf__SWIG_0(long jarg1, long jarg2);
  public final static native long ConstantExpr_getOffsetOf__SWIG_1(long jarg1, Type jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getNeg__SWIG_0(long jarg1, Constant jarg1_, boolean jarg2, boolean jarg3);
  public final static native long ConstantExpr_getNeg__SWIG_1(long jarg1, Constant jarg1_, boolean jarg2);
  public final static native long ConstantExpr_getNeg__SWIG_2(long jarg1, Constant jarg1_);
  public final static native long ConstantExpr_getFNeg(long jarg1, Constant jarg1_);
  public final static native long ConstantExpr_getNot(long jarg1, Constant jarg1_);
  public final static native long ConstantExpr_getAdd__SWIG_0(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, boolean jarg3, boolean jarg4);
  public final static native long ConstantExpr_getAdd__SWIG_1(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, boolean jarg3);
  public final static native long ConstantExpr_getAdd__SWIG_2(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getFAdd(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getSub__SWIG_0(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, boolean jarg3, boolean jarg4);
  public final static native long ConstantExpr_getSub__SWIG_1(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, boolean jarg3);
  public final static native long ConstantExpr_getSub__SWIG_2(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getFSub(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getMul__SWIG_0(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, boolean jarg3, boolean jarg4);
  public final static native long ConstantExpr_getMul__SWIG_1(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, boolean jarg3);
  public final static native long ConstantExpr_getMul__SWIG_2(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getFMul(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getUDiv__SWIG_0(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, boolean jarg3);
  public final static native long ConstantExpr_getUDiv__SWIG_1(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getSDiv__SWIG_0(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, boolean jarg3);
  public final static native long ConstantExpr_getSDiv__SWIG_1(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getFDiv(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getURem(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getSRem(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getFRem(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getAnd(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getOr(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getXor(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getShl__SWIG_0(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, boolean jarg3, boolean jarg4);
  public final static native long ConstantExpr_getShl__SWIG_1(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, boolean jarg3);
  public final static native long ConstantExpr_getShl__SWIG_2(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getLShr__SWIG_0(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, boolean jarg3);
  public final static native long ConstantExpr_getLShr__SWIG_1(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getAShr__SWIG_0(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, boolean jarg3);
  public final static native long ConstantExpr_getAShr__SWIG_1(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getTrunc(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getSExt(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getZExt(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getFPTrunc(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getFPExtend(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getUIToFP(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getSIToFP(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getFPToUI(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getFPToSI(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getPtrToInt(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getIntToPtr(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getBitCast(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getNSWNeg(long jarg1, Constant jarg1_);
  public final static native long ConstantExpr_getNUWNeg(long jarg1, Constant jarg1_);
  public final static native long ConstantExpr_getNSWAdd(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getNUWAdd(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getNSWSub(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getNUWSub(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getNSWMul(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getNUWMul(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getNSWShl(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getNUWShl(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getExactSDiv(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getExactUDiv(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getExactAShr(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getExactLShr(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getBinOpIdentity(long jarg1, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getBinOpAbsorber(long jarg1, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getCast(long jarg1, long jarg2, Constant jarg2_, long jarg3, Type jarg3_);
  public final static native long ConstantExpr_getZExtOrBitCast(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getSExtOrBitCast(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getTruncOrBitCast(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getPointerCast(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native long ConstantExpr_getIntegerCast(long jarg1, Constant jarg1_, long jarg2, Type jarg2_, boolean jarg3);
  public final static native long ConstantExpr_getFPCast(long jarg1, Constant jarg1_, long jarg2, Type jarg2_);
  public final static native boolean ConstantExpr_isCast(long jarg1, ConstantExpr jarg1_);
  public final static native boolean ConstantExpr_isCompare(long jarg1, ConstantExpr jarg1_);
  public final static native boolean ConstantExpr_hasIndices(long jarg1, ConstantExpr jarg1_);
  public final static native boolean ConstantExpr_isGEPWithNoNotionalOverIndexing(long jarg1, ConstantExpr jarg1_);
  public final static native long ConstantExpr_getSelect(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, long jarg3, Constant jarg3_);
  public final static native long ConstantExpr_get__SWIG_0(long jarg1, long jarg2, Constant jarg2_, long jarg3, Constant jarg3_, long jarg4);
  public final static native long ConstantExpr_get__SWIG_1(long jarg1, long jarg2, Constant jarg2_, long jarg3, Constant jarg3_);
  public final static native long ConstantExpr_getCompare(int jarg1, long jarg2, Constant jarg2_, long jarg3, Constant jarg3_);
  public final static native long ConstantExpr_getICmp(int jarg1, long jarg2, Constant jarg2_, long jarg3, Constant jarg3_);
  public final static native long ConstantExpr_getFCmp(int jarg1, long jarg2, Constant jarg2_, long jarg3, Constant jarg3_);
  public final static native long ConstantExpr_getGetElementPtr__SWIG_0(long jarg1, Constant jarg1_, long jarg2, boolean jarg3);
  public final static native long ConstantExpr_getGetElementPtr__SWIG_1(long jarg1, Constant jarg1_, long jarg2);
  public final static native long ConstantExpr_getGetElementPtr__SWIG_2(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, boolean jarg3);
  public final static native long ConstantExpr_getGetElementPtr__SWIG_3(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getGetElementPtr__SWIG_4(long jarg1, Constant jarg1_, long jarg2, boolean jarg3);
  public final static native long ConstantExpr_getGetElementPtr__SWIG_5(long jarg1, Constant jarg1_, long jarg2);
  public final static native long ConstantExpr_getInBoundsGetElementPtr__SWIG_0(long jarg1, Constant jarg1_, long jarg2);
  public final static native long ConstantExpr_getInBoundsGetElementPtr__SWIG_1(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getInBoundsGetElementPtr__SWIG_2(long jarg1, Constant jarg1_, long jarg2);
  public final static native long ConstantExpr_getExtractElement(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_);
  public final static native long ConstantExpr_getInsertElement(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, long jarg3, Constant jarg3_);
  public final static native long ConstantExpr_getShuffleVector(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, long jarg3, Constant jarg3_);
  public final static native long ConstantExpr_getExtractValue(long jarg1, Constant jarg1_, long jarg2);
  public final static native long ConstantExpr_getInsertValue(long jarg1, Constant jarg1_, long jarg2, Constant jarg2_, long jarg3);
  public final static native long ConstantExpr_getOpcode(long jarg1, ConstantExpr jarg1_);
  public final static native long ConstantExpr_getPredicate(long jarg1, ConstantExpr jarg1_);
  public final static native long ConstantExpr_getIndices(long jarg1, ConstantExpr jarg1_);
  public final static native String ConstantExpr_getOpcodeName(long jarg1, ConstantExpr jarg1_);
  public final static native long ConstantExpr_getWithOperandReplaced(long jarg1, ConstantExpr jarg1_, long jarg2, long jarg3, Constant jarg3_);
  public final static native long ConstantExpr_getWithOperands__SWIG_0(long jarg1, ConstantExpr jarg1_, long jarg2);
  public final static native long ConstantExpr_getWithOperands__SWIG_1(long jarg1, ConstantExpr jarg1_, long jarg2, long jarg3, Type jarg3_);
  public final static native long ConstantExpr_getAsInstruction(long jarg1, ConstantExpr jarg1_);
  public final static native void ConstantExpr_destroyConstant(long jarg1, ConstantExpr jarg1_);
  public final static native void ConstantExpr_replaceUsesOfWithOnConstant(long jarg1, ConstantExpr jarg1_, long jarg2, Value jarg2_, long jarg3, Value jarg3_, long jarg4);
  public final static native boolean ConstantExpr_classof(long jarg1, Value jarg1_);
  public final static native void delete_ConstantExpr(long jarg1);
  public final static native long UndefValue_get(long jarg1, Type jarg1_);
  public final static native long UndefValue_getSequentialElement(long jarg1, UndefValue jarg1_);
  public final static native long UndefValue_getStructElement(long jarg1, UndefValue jarg1_, long jarg2);
  public final static native long UndefValue_getElementValue__SWIG_0(long jarg1, UndefValue jarg1_, long jarg2, Constant jarg2_);
  public final static native long UndefValue_getElementValue__SWIG_1(long jarg1, UndefValue jarg1_, long jarg2);
  public final static native void UndefValue_destroyConstant(long jarg1, UndefValue jarg1_);
  public final static native boolean UndefValue_classof(long jarg1, Value jarg1_);
  public final static native void delete_UndefValue(long jarg1);
  public final static native long MDString_get__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2, StringRef jarg2_);
  public final static native long MDString_get__SWIG_1(long jarg1, LLVMContext jarg1_, String jarg2);
  public final static native long MDString_getString(long jarg1, MDString jarg1_);
  public final static native long MDString_getLength(long jarg1, MDString jarg1_);
  public final static native String MDString_begin(long jarg1, MDString jarg1_);
  public final static native String MDString_end(long jarg1, MDString jarg1_);
  public final static native boolean MDString_classof(long jarg1, Value jarg1_);
  public final static native void delete_MDString(long jarg1);
  public final static native long MDNode_get(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long MDNode_getWhenValsUnresolved(long jarg1, LLVMContext jarg1_, long jarg2, boolean jarg3);
  public final static native long MDNode_getIfExists(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long MDNode_getTemporary(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native void MDNode_deleteTemporary(long jarg1, MDNode jarg1_);
  public final static native void MDNode_replaceOperandWith(long jarg1, MDNode jarg1_, long jarg2, long jarg3, Value jarg3_);
  public final static native long MDNode_getOperand(long jarg1, MDNode jarg1_, long jarg2);
  public final static native long MDNode_getNumOperands(long jarg1, MDNode jarg1_);
  public final static native boolean MDNode_isFunctionLocal(long jarg1, MDNode jarg1_);
  public final static native long MDNode_getFunction(long jarg1, MDNode jarg1_);
  public final static native void MDNode_Profile(long jarg1, MDNode jarg1_, long jarg2);
  public final static native boolean MDNode_classof(long jarg1, Value jarg1_);
  public final static native long MDNode_getMostGenericTBAA(long jarg1, MDNode jarg1_, long jarg2, MDNode jarg2_);
  public final static native long MDNode_getMostGenericFPMath(long jarg1, MDNode jarg1_, long jarg2, MDNode jarg2_);
  public final static native long MDNode_getMostGenericRange(long jarg1, MDNode jarg1_, long jarg2, MDNode jarg2_);
  public final static native void NamedMDNode_eraseFromParent(long jarg1, NamedMDNode jarg1_);
  public final static native void NamedMDNode_dropAllReferences(long jarg1, NamedMDNode jarg1_);
  public final static native void delete_NamedMDNode(long jarg1);
  public final static native long NamedMDNode_getParent__SWIG_0(long jarg1, NamedMDNode jarg1_);
  public final static native long NamedMDNode_getOperand(long jarg1, NamedMDNode jarg1_, long jarg2);
  public final static native long NamedMDNode_getNumOperands(long jarg1, NamedMDNode jarg1_);
  public final static native void NamedMDNode_addOperand(long jarg1, NamedMDNode jarg1_, long jarg2, MDNode jarg2_);
  public final static native long NamedMDNode_getName(long jarg1, NamedMDNode jarg1_);
  public final static native void NamedMDNode_print__SWIG_0(long jarg1, NamedMDNode jarg1_, long jarg2, long jarg3);
  public final static native void NamedMDNode_print__SWIG_1(long jarg1, NamedMDNode jarg1_, long jarg2);
  public final static native void NamedMDNode_dump(long jarg1, NamedMDNode jarg1_);
  public final static native long new_DebugLoc();
  public final static native long DebugLoc_get__SWIG_0(long jarg1, long jarg2, long jarg3, MDNode jarg3_, long jarg4, MDNode jarg4_);
  public final static native long DebugLoc_get__SWIG_1(long jarg1, long jarg2, long jarg3, MDNode jarg3_);
  public final static native long DebugLoc_getFromDILocation(long jarg1, MDNode jarg1_);
  public final static native long DebugLoc_getFromDILexicalBlock(long jarg1, MDNode jarg1_);
  public final static native boolean DebugLoc_isUnknown(long jarg1, DebugLoc jarg1_);
  public final static native long DebugLoc_getLine(long jarg1, DebugLoc jarg1_);
  public final static native long DebugLoc_getCol(long jarg1, DebugLoc jarg1_);
  public final static native long DebugLoc_getScope(long jarg1, DebugLoc jarg1_, long jarg2, LLVMContext jarg2_);
  public final static native long DebugLoc_getInlinedAt(long jarg1, DebugLoc jarg1_, long jarg2, LLVMContext jarg2_);
  public final static native void DebugLoc_getScopeAndInlinedAt(long jarg1, DebugLoc jarg1_, long jarg2, long jarg3, long jarg4, LLVMContext jarg4_);
  public final static native long DebugLoc_getAsMDNode(long jarg1, DebugLoc jarg1_, long jarg2, LLVMContext jarg2_);
  public final static native void DebugLoc_dump(long jarg1, DebugLoc jarg1_, long jarg2, LLVMContext jarg2_);
  public final static native void delete_DebugLoc(long jarg1);
  public final static native void delete_Instruction(long jarg1);
  public final static native long Instruction_use_back__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native long Instruction_getParent__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native void Instruction_removeFromParent(long jarg1, Instruction jarg1_);
  public final static native void Instruction_eraseFromParent(long jarg1, Instruction jarg1_);
  public final static native void Instruction_insertBefore(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native void Instruction_insertAfter(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native void Instruction_moveBefore(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native long Instruction_getOpcode(long jarg1, Instruction jarg1_);
  public final static native String Instruction_getOpcodeName__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isTerminator__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isBinaryOp__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isShift__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isCast__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native String Instruction_getOpcodeName__SWIG_1(long jarg1);
  public final static native boolean Instruction_isTerminator__SWIG_1(long jarg1);
  public final static native boolean Instruction_isBinaryOp__SWIG_1(long jarg1);
  public final static native boolean Instruction_isShift__SWIG_1(long jarg1);
  public final static native boolean Instruction_isLogicalShift(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isArithmeticShift(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isCast__SWIG_1(long jarg1);
  public final static native boolean Instruction_hasMetadata(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_hasMetadataOtherThanDebugLoc(long jarg1, Instruction jarg1_);
  public final static native long Instruction_getMetadata__SWIG_0(long jarg1, Instruction jarg1_, long jarg2);
  public final static native long Instruction_getMetadata__SWIG_1(long jarg1, Instruction jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Instruction_getAllMetadata(long jarg1, Instruction jarg1_, long jarg2);
  public final static native void Instruction_getAllMetadataOtherThanDebugLoc(long jarg1, Instruction jarg1_, long jarg2);
  public final static native void Instruction_setMetadata__SWIG_0(long jarg1, Instruction jarg1_, long jarg2, long jarg3, MDNode jarg3_);
  public final static native void Instruction_setMetadata__SWIG_1(long jarg1, Instruction jarg1_, long jarg2, StringRef jarg2_, long jarg3, MDNode jarg3_);
  public final static native void Instruction_setDebugLoc(long jarg1, Instruction jarg1_, long jarg2, DebugLoc jarg2_);
  public final static native long Instruction_getDebugLoc(long jarg1, Instruction jarg1_);
  public final static native void Instruction_setHasUnsafeAlgebra(long jarg1, Instruction jarg1_, boolean jarg2);
  public final static native void Instruction_setHasNoNaNs(long jarg1, Instruction jarg1_, boolean jarg2);
  public final static native void Instruction_setHasNoInfs(long jarg1, Instruction jarg1_, boolean jarg2);
  public final static native void Instruction_setHasNoSignedZeros(long jarg1, Instruction jarg1_, boolean jarg2);
  public final static native void Instruction_setHasAllowReciprocal(long jarg1, Instruction jarg1_, boolean jarg2);
  public final static native void Instruction_setFastMathFlags(long jarg1, Instruction jarg1_, long jarg2);
  public final static native boolean Instruction_hasUnsafeAlgebra(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_hasNoNaNs(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_hasNoInfs(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_hasNoSignedZeros(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_hasAllowReciprocal(long jarg1, Instruction jarg1_);
  public final static native long Instruction_getFastMathFlags(long jarg1, Instruction jarg1_);
  public final static native void Instruction_copyFastMathFlags(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native boolean Instruction_isAssociative__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isAssociative__SWIG_1(long jarg1);
  public final static native boolean Instruction_isCommutative__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isCommutative__SWIG_1(long jarg1);
  public final static native boolean Instruction_isIdempotent__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isIdempotent__SWIG_1(long jarg1);
  public final static native boolean Instruction_isNilpotent__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isNilpotent__SWIG_1(long jarg1);
  public final static native boolean Instruction_mayWriteToMemory(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_mayReadFromMemory(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_mayReadOrWriteMemory(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_mayThrow(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_mayReturn(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_mayHaveSideEffects(long jarg1, Instruction jarg1_);
  public final static native long Instruction_clone(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isIdenticalTo(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native boolean Instruction_isIdenticalToWhenDefined(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native int Instruction_CompareIgnoringAlignment_get();
  public final static native int Instruction_CompareUsingScalarTypes_get();
  public final static native boolean Instruction_isSameOperationAs__SWIG_0(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_, long jarg3);
  public final static native boolean Instruction_isSameOperationAs__SWIG_1(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native boolean Instruction_isUsedOutsideOfBlock(long jarg1, Instruction jarg1_, long jarg2, BasicBlock jarg2_);
  public final static native boolean Instruction_classof(long jarg1, Value jarg1_);
  public final static native long BasicBlock_getContext(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_Create__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2, long jarg3, Function jarg3_, long jarg4, BasicBlock jarg4_);
  public final static native long BasicBlock_Create__SWIG_1(long jarg1, LLVMContext jarg1_, long jarg2, long jarg3, Function jarg3_);
  public final static native long BasicBlock_Create__SWIG_2(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long BasicBlock_Create__SWIG_3(long jarg1, LLVMContext jarg1_);
  public final static native void delete_BasicBlock(long jarg1);
  public final static native long BasicBlock_getParent__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getTerminator__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getFirstNonPHI__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getFirstNonPHIOrDbg__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getFirstNonPHIOrDbgOrLifetime__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getFirstInsertionPt__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native void BasicBlock_removeFromParent(long jarg1, BasicBlock jarg1_);
  public final static native void BasicBlock_eraseFromParent(long jarg1, BasicBlock jarg1_);
  public final static native void BasicBlock_moveBefore(long jarg1, BasicBlock jarg1_, long jarg2, BasicBlock jarg2_);
  public final static native void BasicBlock_moveAfter(long jarg1, BasicBlock jarg1_, long jarg2, BasicBlock jarg2_);
  public final static native long BasicBlock_getSinglePredecessor__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getUniquePredecessor__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_begin__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_end__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_rbegin__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_rend__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_size(long jarg1, BasicBlock jarg1_);
  public final static native boolean BasicBlock_empty(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_front__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_back__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getInstList__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native String BasicBlock_getSublistAccess(long jarg1, Instruction jarg1_);
  public final static native long BasicBlock_getValueSymbolTable(long jarg1, BasicBlock jarg1_);
  public final static native boolean BasicBlock_classof(long jarg1, Value jarg1_);
  public final static native void BasicBlock_dropAllReferences(long jarg1, BasicBlock jarg1_);
  public final static native void BasicBlock_removePredecessor__SWIG_0(long jarg1, BasicBlock jarg1_, long jarg2, BasicBlock jarg2_, boolean jarg3);
  public final static native void BasicBlock_removePredecessor__SWIG_1(long jarg1, BasicBlock jarg1_, long jarg2, BasicBlock jarg2_);
  public final static native long BasicBlock_splitBasicBlock__SWIG_0(long jarg1, BasicBlock jarg1_, long jarg2, long jarg3);
  public final static native long BasicBlock_splitBasicBlock__SWIG_1(long jarg1, BasicBlock jarg1_, long jarg2);
  public final static native boolean BasicBlock_hasAddressTaken(long jarg1, BasicBlock jarg1_);
  public final static native void BasicBlock_replaceSuccessorsPhiUsesWith(long jarg1, BasicBlock jarg1_, long jarg2, BasicBlock jarg2_);
  public final static native boolean BasicBlock_isLandingPad(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getLandingPadInst__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native int GlobalValue_ExternalLinkage_get();
  public final static native int GlobalValue_DefaultVisibility_get();
  public final static native void delete_GlobalValue(long jarg1);
  public final static native long GlobalValue_getAlignment(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_setAlignment(long jarg1, GlobalValue jarg1_, long jarg2);
  public final static native boolean GlobalValue_hasUnnamedAddr(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_setUnnamedAddr(long jarg1, GlobalValue jarg1_, boolean jarg2);
  public final static native int GlobalValue_getVisibility(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasDefaultVisibility(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasHiddenVisibility(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasProtectedVisibility(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_setVisibility(long jarg1, GlobalValue jarg1_, int jarg2);
  public final static native boolean GlobalValue_hasSection(long jarg1, GlobalValue jarg1_);
  public final static native String GlobalValue_getSection(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_setSection(long jarg1, GlobalValue jarg1_, long jarg2, StringRef jarg2_);
  public final static native long GlobalValue_getType(long jarg1, GlobalValue jarg1_);
  public final static native int GlobalValue_getLinkOnceLinkage(boolean jarg1);
  public final static native int GlobalValue_getWeakLinkage(boolean jarg1);
  public final static native boolean GlobalValue_isExternalLinkage(int jarg1);
  public final static native boolean GlobalValue_isAvailableExternallyLinkage(int jarg1);
  public final static native boolean GlobalValue_isLinkOnceLinkage(int jarg1);
  public final static native boolean GlobalValue_isLinkOnceODRAutoHideLinkage(int jarg1);
  public final static native boolean GlobalValue_isWeakLinkage(int jarg1);
  public final static native boolean GlobalValue_isAppendingLinkage(int jarg1);
  public final static native boolean GlobalValue_isInternalLinkage(int jarg1);
  public final static native boolean GlobalValue_isPrivateLinkage(int jarg1);
  public final static native boolean GlobalValue_isLinkerPrivateLinkage(int jarg1);
  public final static native boolean GlobalValue_isLinkerPrivateWeakLinkage(int jarg1);
  public final static native boolean GlobalValue_isLocalLinkage(int jarg1);
  public final static native boolean GlobalValue_isDLLImportLinkage(int jarg1);
  public final static native boolean GlobalValue_isDLLExportLinkage(int jarg1);
  public final static native boolean GlobalValue_isExternalWeakLinkage(int jarg1);
  public final static native boolean GlobalValue_isCommonLinkage(int jarg1);
  public final static native boolean GlobalValue_isDiscardableIfUnused__SWIG_0(int jarg1);
  public final static native boolean GlobalValue_mayBeOverridden__SWIG_0(int jarg1);
  public final static native boolean GlobalValue_isWeakForLinker__SWIG_0(int jarg1);
  public final static native boolean GlobalValue_hasExternalLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasAvailableExternallyLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasLinkOnceLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasLinkOnceODRAutoHideLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasWeakLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasAppendingLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasInternalLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasPrivateLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasLinkerPrivateLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasLinkerPrivateWeakLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasLocalLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasDLLImportLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasDLLExportLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasExternalWeakLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasCommonLinkage(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_setLinkage(long jarg1, GlobalValue jarg1_, int jarg2);
  public final static native int GlobalValue_getLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_isDiscardableIfUnused__SWIG_1(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_mayBeOverridden__SWIG_1(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_isWeakForLinker__SWIG_1(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_copyAttributesFrom(long jarg1, GlobalValue jarg1_, long jarg2, GlobalValue jarg2_);
  public final static native boolean GlobalValue_isMaterializable(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_isDematerializable(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_Materialize__SWIG_0(long jarg1, GlobalValue jarg1_, long jarg2);
  public final static native boolean GlobalValue_Materialize__SWIG_1(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_Dematerialize(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_destroyConstant(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_isDeclaration(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_removeFromParent(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_eraseFromParent(long jarg1, GlobalValue jarg1_);
  public final static native long GlobalValue_getParent__SWIG_0(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_classof(long jarg1, Value jarg1_);
  public final static native long Function_Create__SWIG_0(long jarg1, int jarg2, long jarg3, long jarg4, Module jarg4_);
  public final static native long Function_Create__SWIG_1(long jarg1, int jarg2, long jarg3);
  public final static native long Function_Create__SWIG_2(long jarg1, int jarg2);
  public final static native void delete_Function(long jarg1);
  public final static native long Function_getReturnType(long jarg1, Function jarg1_);
  public final static native long Function_getFunctionType(long jarg1, Function jarg1_);
  public final static native long Function_getContext(long jarg1, Function jarg1_);
  public final static native boolean Function_isVarArg(long jarg1, Function jarg1_);
  public final static native long Function_getIntrinsicID(long jarg1, Function jarg1_);
  public final static native boolean Function_isIntrinsic(long jarg1, Function jarg1_);
  public final static native long Function_getCallingConv(long jarg1, Function jarg1_);
  public final static native void Function_setCallingConv(long jarg1, Function jarg1_, long jarg2);
  public final static native long Function_getAttributes(long jarg1, Function jarg1_);
  public final static native void Function_setAttributes(long jarg1, Function jarg1_, long jarg2);
  public final static native void Function_addFnAttr__SWIG_0(long jarg1, Function jarg1_, long jarg2);
  public final static native void Function_addFnAttr__SWIG_1(long jarg1, Function jarg1_, long jarg2, StringRef jarg2_);
  public final static native boolean Function_hasFnAttribute__SWIG_0(long jarg1, Function jarg1_, long jarg2);
  public final static native boolean Function_hasFnAttribute__SWIG_1(long jarg1, Function jarg1_, long jarg2, StringRef jarg2_);
  public final static native boolean Function_hasGC(long jarg1, Function jarg1_);
  public final static native String Function_getGC(long jarg1, Function jarg1_);
  public final static native void Function_setGC(long jarg1, Function jarg1_, String jarg2);
  public final static native void Function_clearGC(long jarg1, Function jarg1_);
  public final static native void Function_addAttribute(long jarg1, Function jarg1_, long jarg2, long jarg3);
  public final static native void Function_addAttributes(long jarg1, Function jarg1_, long jarg2, long jarg3);
  public final static native void Function_removeAttributes(long jarg1, Function jarg1_, long jarg2, long jarg3);
  public final static native long Function_getParamAlignment(long jarg1, Function jarg1_, long jarg2);
  public final static native boolean Function_doesNotAccessMemory(long jarg1, Function jarg1_);
  public final static native void Function_setDoesNotAccessMemory(long jarg1, Function jarg1_);
  public final static native boolean Function_onlyReadsMemory(long jarg1, Function jarg1_);
  public final static native void Function_setOnlyReadsMemory(long jarg1, Function jarg1_);
  public final static native boolean Function_doesNotReturn(long jarg1, Function jarg1_);
  public final static native void Function_setDoesNotReturn(long jarg1, Function jarg1_);
  public final static native boolean Function_doesNotThrow(long jarg1, Function jarg1_);
  public final static native void Function_setDoesNotThrow(long jarg1, Function jarg1_);
  public final static native boolean Function_cannotDuplicate(long jarg1, Function jarg1_);
  public final static native void Function_setCannotDuplicate(long jarg1, Function jarg1_);
  public final static native boolean Function_hasUWTable(long jarg1, Function jarg1_);
  public final static native void Function_setHasUWTable(long jarg1, Function jarg1_);
  public final static native boolean Function_needsUnwindTableEntry(long jarg1, Function jarg1_);
  public final static native boolean Function_hasStructRetAttr(long jarg1, Function jarg1_);
  public final static native boolean Function_doesNotAlias(long jarg1, Function jarg1_, long jarg2);
  public final static native void Function_setDoesNotAlias(long jarg1, Function jarg1_, long jarg2);
  public final static native boolean Function_doesNotCapture(long jarg1, Function jarg1_, long jarg2);
  public final static native void Function_setDoesNotCapture(long jarg1, Function jarg1_, long jarg2);
  public final static native void Function_copyAttributesFrom(long jarg1, Function jarg1_, long jarg2, GlobalValue jarg2_);
  public final static native void Function_deleteBody(long jarg1, Function jarg1_);
  public final static native void Function_removeFromParent(long jarg1, Function jarg1_);
  public final static native void Function_eraseFromParent(long jarg1, Function jarg1_);
  public final static native long Function_getArgumentList__SWIG_0(long jarg1, Function jarg1_);
  public final static native String Function_getSublistAccess__SWIG_0(long jarg1);
  public final static native long Function_getBasicBlockList__SWIG_0(long jarg1, Function jarg1_);
  public final static native String Function_getSublistAccess__SWIG_1(long jarg1, BasicBlock jarg1_);
  public final static native long Function_getEntryBlock__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_getValueSymbolTable__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_begin__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_end__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_size(long jarg1, Function jarg1_);
  public final static native boolean Function_empty(long jarg1, Function jarg1_);
  public final static native long Function_front__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_back__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_arg_begin__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_arg_end__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_arg_size(long jarg1, Function jarg1_);
  public final static native boolean Function_arg_empty(long jarg1, Function jarg1_);
  public final static native void Function_viewCFG(long jarg1, Function jarg1_);
  public final static native void Function_viewCFGOnly(long jarg1, Function jarg1_);
  public final static native boolean Function_classof(long jarg1, Value jarg1_);
  public final static native void Function_dropAllReferences(long jarg1, Function jarg1_);
  public final static native boolean Function_hasAddressTaken__SWIG_0(long jarg1, Function jarg1_, long jarg2);
  public final static native boolean Function_hasAddressTaken__SWIG_1(long jarg1, Function jarg1_);
  public final static native boolean Function_isDefTriviallyDead(long jarg1, Function jarg1_);
  public final static native boolean Function_callsFunctionThatReturnsTwice(long jarg1, Function jarg1_);
  public final static native int Module_Error_get();
  public final static native int Module_Warning_get();
  public final static native int Module_Require_get();
  public final static native int Module_Override_get();
  public final static native int Module_Append_get();
  public final static native int Module_AppendUnique_get();
  public final static native void Module_ModuleFlagEntry_Behavior_set(long jarg1, Module.ModuleFlagEntry jarg1_, int jarg2);
  public final static native int Module_ModuleFlagEntry_Behavior_get(long jarg1, Module.ModuleFlagEntry jarg1_);
  public final static native void Module_ModuleFlagEntry_Key_set(long jarg1, Module.ModuleFlagEntry jarg1_, long jarg2, MDString jarg2_);
  public final static native long Module_ModuleFlagEntry_Key_get(long jarg1, Module.ModuleFlagEntry jarg1_);
  public final static native void Module_ModuleFlagEntry_Val_set(long jarg1, Module.ModuleFlagEntry jarg1_, long jarg2, Value jarg2_);
  public final static native long Module_ModuleFlagEntry_Val_get(long jarg1, Module.ModuleFlagEntry jarg1_);
  public final static native long new_Module_ModuleFlagEntry(int jarg1, long jarg2, MDString jarg2_, long jarg3, Value jarg3_);
  public final static native void delete_Module_ModuleFlagEntry(long jarg1);
  public final static native long new_Module(long jarg1, StringRef jarg1_, long jarg2, LLVMContext jarg2_);
  public final static native void delete_Module(long jarg1);
  public final static native String Module_getModuleIdentifier(long jarg1, Module jarg1_);
  public final static native String Module_getDataLayout(long jarg1, Module jarg1_);
  public final static native String Module_getTargetTriple(long jarg1, Module jarg1_);
  public final static native int Module_getEndianness(long jarg1, Module jarg1_);
  public final static native int Module_getPointerSize(long jarg1, Module jarg1_);
  public final static native long Module_getContext(long jarg1, Module jarg1_);
  public final static native String Module_getModuleInlineAsm(long jarg1, Module jarg1_);
  public final static native void Module_setModuleIdentifier(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Module_setDataLayout(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Module_setTargetTriple(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Module_setModuleInlineAsm(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Module_appendModuleInlineAsm(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getNamedValue(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getMDKindID(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Module_getMDKindNames(long jarg1, Module jarg1_, long jarg2);
  public final static native long Module_getTypeByName(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getOrInsertFunction__SWIG_0(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, long jarg3, long jarg4);
  public final static native long Module_getOrInsertFunction__SWIG_1(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long Module_getOrInsertFunction__SWIG_2(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, long jarg3, long jarg4, Type jarg4_);
  public final static native long Module_getOrInsertFunction__SWIG_3(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, long jarg3, Type jarg3_);
  public final static native long Module_getOrInsertTargetIntrinsic(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, long jarg3, long jarg4);
  public final static native long Module_getFunction(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getGlobalVariable__SWIG_0(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, boolean jarg3);
  public final static native long Module_getGlobalVariable__SWIG_1(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getNamedGlobal(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getOrInsertGlobal(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, long jarg3, Type jarg3_);
  public final static native long Module_getNamedAlias(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getNamedMetadata(long jarg1, Module jarg1_, long jarg2);
  public final static native long Module_getOrInsertNamedMetadata(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Module_eraseNamedMetadata(long jarg1, Module jarg1_, long jarg2, NamedMDNode jarg2_);
  public final static native void Module_getModuleFlagsMetadata__SWIG_0(long jarg1, Module jarg1_, long jarg2);
  public final static native long Module_getModuleFlagsMetadata__SWIG_1(long jarg1, Module jarg1_);
  public final static native long Module_getOrInsertModuleFlagsMetadata(long jarg1, Module jarg1_);
  public final static native void Module_addModuleFlag__SWIG_0(long jarg1, Module jarg1_, int jarg2, long jarg3, StringRef jarg3_, long jarg4, Value jarg4_);
  public final static native void Module_addModuleFlag__SWIG_1(long jarg1, Module jarg1_, int jarg2, long jarg3, StringRef jarg3_, long jarg4);
  public final static native void Module_addModuleFlag__SWIG_2(long jarg1, Module jarg1_, long jarg2, MDNode jarg2_);
  public final static native void Module_setMaterializer(long jarg1, Module jarg1_, long jarg2);
  public final static native long Module_getMaterializer(long jarg1, Module jarg1_);
  public final static native boolean Module_isMaterializable(long jarg1, Module jarg1_, long jarg2, GlobalValue jarg2_);
  public final static native boolean Module_isDematerializable(long jarg1, Module jarg1_, long jarg2, GlobalValue jarg2_);
  public final static native boolean Module_Materialize__SWIG_0(long jarg1, Module jarg1_, long jarg2, GlobalValue jarg2_, long jarg3);
  public final static native boolean Module_Materialize__SWIG_1(long jarg1, Module jarg1_, long jarg2, GlobalValue jarg2_);
  public final static native void Module_Dematerialize(long jarg1, Module jarg1_, long jarg2, GlobalValue jarg2_);
  public final static native boolean Module_MaterializeAll__SWIG_0(long jarg1, Module jarg1_, long jarg2);
  public final static native boolean Module_MaterializeAll__SWIG_1(long jarg1, Module jarg1_);
  public final static native boolean Module_MaterializeAllPermanently__SWIG_0(long jarg1, Module jarg1_, long jarg2);
  public final static native boolean Module_MaterializeAllPermanently__SWIG_1(long jarg1, Module jarg1_);
  public final static native long Module_getGlobalList__SWIG_0(long jarg1, Module jarg1_);
  public final static native String Module_getSublistAccess__SWIG_0(long jarg1);
  public final static native long Module_getFunctionList__SWIG_0(long jarg1, Module jarg1_);
  public final static native String Module_getSublistAccess__SWIG_1(long jarg1, Function jarg1_);
  public final static native long Module_getAliasList__SWIG_0(long jarg1, Module jarg1_);
  public final static native String Module_getSublistAccess__SWIG_2(long jarg1);
  public final static native long Module_getNamedMDList__SWIG_0(long jarg1, Module jarg1_);
  public final static native String Module_getSublistAccess__SWIG_3(long jarg1, NamedMDNode jarg1_);
  public final static native long Module_getValueSymbolTable__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_global_begin__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_global_end__SWIG_0(long jarg1, Module jarg1_);
  public final static native boolean Module_global_empty(long jarg1, Module jarg1_);
  public final static native long Module_begin__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_end__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_size(long jarg1, Module jarg1_);
  public final static native boolean Module_empty(long jarg1, Module jarg1_);
  public final static native long Module_alias_begin__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_alias_end__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_alias_size(long jarg1, Module jarg1_);
  public final static native boolean Module_alias_empty(long jarg1, Module jarg1_);
  public final static native long Module_named_metadata_begin__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_named_metadata_end__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_named_metadata_size(long jarg1, Module jarg1_);
  public final static native boolean Module_named_metadata_empty(long jarg1, Module jarg1_);
  public final static native void Module_print(long jarg1, Module jarg1_, long jarg2, long jarg3);
  public final static native void Module_dump(long jarg1, Module jarg1_);
  public final static native void Module_dropAllReferences(long jarg1, Module jarg1_);
  public final static native long unwrap__SWIG_4(long jarg1);
  public final static native long getLazyIRModule(long jarg1, long jarg2, long jarg3, LLVMContext jarg3_);
  public final static native long getLazyIRFileModule(String jarg1, long jarg2, long jarg3, LLVMContext jarg3_);
  public final static native long ParseIR(long jarg1, long jarg2, long jarg3, LLVMContext jarg3_);
  public final static native long ParseIRFile(String jarg1, long jarg2, long jarg3, LLVMContext jarg3_);
  public final static native boolean StoreInst_isVolatile(long jarg1, StoreInst jarg1_);
  public final static native void StoreInst_setVolatile(long jarg1, StoreInst jarg1_, boolean jarg2);
  public final static native long StoreInst_getAlignment(long jarg1, StoreInst jarg1_);
  public final static native void StoreInst_setAlignment(long jarg1, StoreInst jarg1_, long jarg2);
  public final static native long StoreInst_getOrdering(long jarg1, StoreInst jarg1_);
  public final static native void StoreInst_setOrdering(long jarg1, StoreInst jarg1_, long jarg2);
  public final static native long StoreInst_getSynchScope(long jarg1, StoreInst jarg1_);
  public final static native void StoreInst_setSynchScope(long jarg1, StoreInst jarg1_, long jarg2);
  public final static native boolean StoreInst_isAtomic(long jarg1, StoreInst jarg1_);
  public final static native void StoreInst_setAtomic__SWIG_0(long jarg1, StoreInst jarg1_, long jarg2, long jarg3);
  public final static native void StoreInst_setAtomic__SWIG_1(long jarg1, StoreInst jarg1_, long jarg2);
  public final static native boolean StoreInst_isSimple(long jarg1, StoreInst jarg1_);
  public final static native boolean StoreInst_isUnordered(long jarg1, StoreInst jarg1_);
  public final static native long StoreInst_getValueOperand__SWIG_0(long jarg1, StoreInst jarg1_);
  public final static native long StoreInst_getPointerOperand__SWIG_0(long jarg1, StoreInst jarg1_);
  public final static native long StoreInst_getPointerOperandIndex();
  public final static native long StoreInst_getPointerAddressSpace(long jarg1, StoreInst jarg1_);
  public final static native boolean StoreInst_classof__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean StoreInst_classof__SWIG_1(long jarg1, Value jarg1_);
  public final static native void delete_StoreInst(long jarg1);
  public final static native long parse(String jarg1);
  public final static native String getName(long jarg1, GlobalValue jarg1_);
  public final static native int getModuleFunctionsSize(long jarg1, Module jarg1_);
  public final static native long getModuleFunctionsItem(long jarg1, Module jarg1_, int jarg2);
  public final static native int getBasicBlockInstructionsSize(long jarg1, BasicBlock jarg1_);
  public final static native long getBasicBlockInstructionsItem(long jarg1, BasicBlock jarg1_, int jarg2);
  public final static native long toMDNode(long jarg1, Value jarg1_);
  public final static native long toMDString(long jarg1, Value jarg1_);
  public final static native long toConstantInt(long jarg1, Value jarg1_);
  public final static native long toStoreInst(long jarg1, Instruction jarg1_);
  public final static native long ConstantInt_SWIGUpcast(long jarg1);
  public final static native long ConstantFP_SWIGUpcast(long jarg1);
  public final static native long ConstantAggregateZero_SWIGUpcast(long jarg1);
  public final static native long ConstantArray_SWIGUpcast(long jarg1);
  public final static native long ConstantStruct_SWIGUpcast(long jarg1);
  public final static native long ConstantVector_SWIGUpcast(long jarg1);
  public final static native long ConstantPointerNull_SWIGUpcast(long jarg1);
  public final static native long BlockAddress_SWIGUpcast(long jarg1);
  public final static native long ConstantExpr_SWIGUpcast(long jarg1);
  public final static native long UndefValue_SWIGUpcast(long jarg1);
  public final static native long MDString_SWIGUpcast(long jarg1);
  public final static native long MDNode_SWIGUpcast(long jarg1);
  public final static native long BasicBlock_SWIGUpcast(long jarg1);
  public final static native long GlobalValue_SWIGUpcast(long jarg1);
  public final static native long Function_SWIGUpcast(long jarg1);
  public final static native long StoreInst_SWIGUpcast(long jarg1);
}
