/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class bitreaderJNI {
  public final static native boolean getAsUnsignedInteger(long jarg1, StringRef jarg1_, long jarg2, long jarg3);
  public final static native boolean getAsSignedInteger(long jarg1, StringRef jarg1_, long jarg2, long jarg3);
  public final static native long StringRef_npos_get();
  public final static native long new_StringRef__SWIG_0();
  public final static native long new_StringRef__SWIG_1(String jarg1);
  public final static native long new_StringRef__SWIG_2(String jarg1, long jarg2);
  public final static native String StringRef_begin(long jarg1, StringRef jarg1_);
  public final static native String StringRef_end(long jarg1, StringRef jarg1_);
  public final static native String StringRef_data(long jarg1, StringRef jarg1_);
  public final static native boolean StringRef_empty(long jarg1, StringRef jarg1_);
  public final static native long StringRef_size(long jarg1, StringRef jarg1_);
  public final static native char StringRef_front(long jarg1, StringRef jarg1_);
  public final static native char StringRef_back(long jarg1, StringRef jarg1_);
  public final static native boolean StringRef_equals(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native boolean StringRef_equals_lower(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native int StringRef_compare(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native int StringRef_compare_lower(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native int StringRef_compare_numeric(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_edit_distance__SWIG_0(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, boolean jarg3, long jarg4);
  public final static native long StringRef_edit_distance__SWIG_1(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, boolean jarg3);
  public final static native long StringRef_edit_distance__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native String StringRef_str(long jarg1, StringRef jarg1_);
  public final static native boolean StringRef_startswith(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native boolean StringRef_endswith(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_find__SWIG_0(long jarg1, StringRef jarg1_, char jarg2, long jarg3);
  public final static native long StringRef_find__SWIG_1(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_find__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long StringRef_find__SWIG_3(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_rfind__SWIG_0(long jarg1, StringRef jarg1_, char jarg2, long jarg3);
  public final static native long StringRef_rfind__SWIG_1(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_rfind__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_find_first_of__SWIG_0(long jarg1, StringRef jarg1_, char jarg2, long jarg3);
  public final static native long StringRef_find_first_of__SWIG_1(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_find_first_of__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long StringRef_find_first_of__SWIG_3(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_find_first_not_of__SWIG_0(long jarg1, StringRef jarg1_, char jarg2, long jarg3);
  public final static native long StringRef_find_first_not_of__SWIG_1(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_find_first_not_of__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long StringRef_find_first_not_of__SWIG_3(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_find_last_of__SWIG_0(long jarg1, StringRef jarg1_, char jarg2, long jarg3);
  public final static native long StringRef_find_last_of__SWIG_1(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_find_last_of__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long StringRef_find_last_of__SWIG_3(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_find_last_not_of__SWIG_0(long jarg1, StringRef jarg1_, char jarg2, long jarg3);
  public final static native long StringRef_find_last_not_of__SWIG_1(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_find_last_not_of__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long StringRef_find_last_not_of__SWIG_3(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_count__SWIG_0(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_count__SWIG_1(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native boolean StringRef_getAsInteger(long jarg1, StringRef jarg1_, long jarg2, long jarg3);
  public final static native String StringRef_lower(long jarg1, StringRef jarg1_);
  public final static native String StringRef_upper(long jarg1, StringRef jarg1_);
  public final static native long StringRef_substr__SWIG_0(long jarg1, StringRef jarg1_, long jarg2, long jarg3);
  public final static native long StringRef_substr__SWIG_1(long jarg1, StringRef jarg1_, long jarg2);
  public final static native long StringRef_drop_front__SWIG_0(long jarg1, StringRef jarg1_, long jarg2);
  public final static native long StringRef_drop_front__SWIG_1(long jarg1, StringRef jarg1_);
  public final static native long StringRef_drop_back__SWIG_0(long jarg1, StringRef jarg1_, long jarg2);
  public final static native long StringRef_drop_back__SWIG_1(long jarg1, StringRef jarg1_);
  public final static native long StringRef_slice(long jarg1, StringRef jarg1_, long jarg2, long jarg3);
  public final static native long StringRef_split__SWIG_0(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_split__SWIG_1(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native void StringRef_split__SWIG_2(long jarg1, StringRef jarg1_, long jarg2, long jarg3, StringRef jarg3_, int jarg4, boolean jarg5);
  public final static native void StringRef_split__SWIG_3(long jarg1, StringRef jarg1_, long jarg2, long jarg3, StringRef jarg3_, int jarg4);
  public final static native void StringRef_split__SWIG_4(long jarg1, StringRef jarg1_, long jarg2, long jarg3, StringRef jarg3_);
  public final static native long StringRef_rsplit(long jarg1, StringRef jarg1_, char jarg2);
  public final static native long StringRef_ltrim__SWIG_0(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_ltrim__SWIG_1(long jarg1, StringRef jarg1_);
  public final static native long StringRef_rtrim__SWIG_0(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_rtrim__SWIG_1(long jarg1, StringRef jarg1_);
  public final static native long StringRef_trim__SWIG_0(long jarg1, StringRef jarg1_, long jarg2, StringRef jarg2_);
  public final static native long StringRef_trim__SWIG_1(long jarg1, StringRef jarg1_);
  public final static native void delete_StringRef(long jarg1);
  public final static native long hash_value(long jarg1, StringRef jarg1_);
  public final static native long LLVMContext_pImpl_get(long jarg1, LLVMContext jarg1_);
  public final static native long new_LLVMContext();
  public final static native void delete_LLVMContext(long jarg1);
  public final static native int LLVMContext_MD_dbg_get();
  public final static native int LLVMContext_MD_tbaa_get();
  public final static native int LLVMContext_MD_prof_get();
  public final static native int LLVMContext_MD_fpmath_get();
  public final static native int LLVMContext_MD_range_get();
  public final static native int LLVMContext_MD_tbaa_struct_get();
  public final static native int LLVMContext_MD_invariant_load_get();
  public final static native long LLVMContext_getMDKindID(long jarg1, LLVMContext jarg1_, long jarg2, StringRef jarg2_);
  public final static native void LLVMContext_getMDKindNames(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native void LLVMContext_setInlineAsmDiagnosticHandler__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2, long jarg3);
  public final static native void LLVMContext_setInlineAsmDiagnosticHandler__SWIG_1(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long LLVMContext_getInlineAsmDiagnosticHandler(long jarg1, LLVMContext jarg1_);
  public final static native long LLVMContext_getInlineAsmDiagnosticContext(long jarg1, LLVMContext jarg1_);
  public final static native void LLVMContext_emitError__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2, long jarg3);
  public final static native void LLVMContext_emitError__SWIG_1(long jarg1, LLVMContext jarg1_, long jarg2, Instruction jarg2_, long jarg3);
  public final static native void LLVMContext_emitError__SWIG_2(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long getGlobalContext();
  public final static native long unwrap__SWIG_0(long jarg1);
  public final static native long wrap(long jarg1);
  public final static native int DIDescriptor_FlagPrivate_get();
  public final static native int DIDescriptor_FlagProtected_get();
  public final static native int DIDescriptor_FlagFwdDecl_get();
  public final static native int DIDescriptor_FlagAppleBlock_get();
  public final static native int DIDescriptor_FlagBlockByrefStruct_get();
  public final static native int DIDescriptor_FlagVirtual_get();
  public final static native int DIDescriptor_FlagArtificial_get();
  public final static native int DIDescriptor_FlagExplicit_get();
  public final static native int DIDescriptor_FlagPrototyped_get();
  public final static native int DIDescriptor_FlagObjcClassComplete_get();
  public final static native int DIDescriptor_FlagObjectPointer_get();
  public final static native int DIDescriptor_FlagVector_get();
  public final static native int DIDescriptor_FlagStaticMember_get();
  public final static native long new_DIDescriptor__SWIG_0();
  public final static native long new_DIDescriptor__SWIG_1(long jarg1, MDNode jarg1_);
  public final static native long new_DIDescriptor__SWIG_2(long jarg1, DIFile jarg1_);
  public final static native long new_DIDescriptor__SWIG_3(long jarg1, DISubprogram jarg1_);
  public final static native long new_DIDescriptor__SWIG_4(long jarg1, DILexicalBlockFile jarg1_);
  public final static native long new_DIDescriptor__SWIG_5(long jarg1, DILexicalBlock jarg1_);
  public final static native long new_DIDescriptor__SWIG_6(long jarg1, DIVariable jarg1_);
  public final static native long new_DIDescriptor__SWIG_7(long jarg1, DIType jarg1_);
  public final static native boolean DIDescriptor_Verify(long jarg1, DIDescriptor jarg1_);
  public final static native long DIDescriptor___deref__(long jarg1, DIDescriptor jarg1_);
  public final static native long DIDescriptor_getTag(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isDerivedType(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isCompositeType(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isBasicType(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isVariable(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isSubprogram(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isGlobalVariable(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isScope(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isFile(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isCompileUnit(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isNameSpace(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isLexicalBlockFile(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isLexicalBlock(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isSubrange(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isEnumerator(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isType(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isGlobal(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isUnspecifiedParameter(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isTemplateTypeParameter(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isTemplateValueParameter(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isObjCProperty(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isImportedModule(long jarg1, DIDescriptor jarg1_);
  public final static native void DIDescriptor_print(long jarg1, DIDescriptor jarg1_, long jarg2);
  public final static native void DIDescriptor_dump(long jarg1, DIDescriptor jarg1_);
  public final static native void delete_DIDescriptor(long jarg1);
  public final static native long DIDescriptor_get(long jarg1, DIDescriptor jarg1_, long jarg2, LLVMContext jarg2_, long jarg3);
  public final static native long DIDescriptor_getWhenValsUnresolved(long jarg1, DIDescriptor jarg1_, long jarg2, LLVMContext jarg2_, long jarg3, boolean jarg4);
  public final static native long DIDescriptor_getIfExists(long jarg1, DIDescriptor jarg1_, long jarg2, LLVMContext jarg2_, long jarg3);
  public final static native long DIDescriptor_getTemporary(long jarg1, DIDescriptor jarg1_, long jarg2, LLVMContext jarg2_, long jarg3);
  public final static native void DIDescriptor_deleteTemporary(long jarg1, DIDescriptor jarg1_, long jarg2, MDNode jarg2_);
  public final static native void DIDescriptor_replaceOperandWith(long jarg1, DIDescriptor jarg1_, long jarg2, long jarg3);
  public final static native long DIDescriptor_getOperand(long jarg1, DIDescriptor jarg1_, long jarg2);
  public final static native long DIDescriptor_getNumOperands(long jarg1, DIDescriptor jarg1_);
  public final static native boolean DIDescriptor_isFunctionLocal(long jarg1, DIDescriptor jarg1_);
  public final static native long DIDescriptor_getFunction(long jarg1, DIDescriptor jarg1_);
  public final static native void DIDescriptor_Profile(long jarg1, DIDescriptor jarg1_, long jarg2);
  public final static native boolean DIDescriptor_classof(long jarg1, DIDescriptor jarg1_, long jarg2);
  public final static native long DIDescriptor_getMostGenericTBAA(long jarg1, DIDescriptor jarg1_, long jarg2, MDNode jarg2_, long jarg3, MDNode jarg3_);
  public final static native long DIDescriptor_getMostGenericFPMath(long jarg1, DIDescriptor jarg1_, long jarg2, MDNode jarg2_, long jarg3, MDNode jarg3_);
  public final static native long DIDescriptor_getMostGenericRange(long jarg1, DIDescriptor jarg1_, long jarg2, MDNode jarg2_, long jarg3, MDNode jarg3_);
  public final static native long new_DISubrange__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DISubrange__SWIG_1();
  public final static native long DISubrange_getLo(long jarg1, DISubrange jarg1_);
  public final static native long DISubrange_getCount(long jarg1, DISubrange jarg1_);
  public final static native boolean DISubrange_Verify(long jarg1, DISubrange jarg1_);
  public final static native void delete_DISubrange(long jarg1);
  public final static native long new_DIArray__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DIArray__SWIG_1();
  public final static native long DIArray_getNumElements(long jarg1, DIArray jarg1_);
  public final static native long DIArray_getElement(long jarg1, DIArray jarg1_, long jarg2);
  public final static native void delete_DIArray(long jarg1);
  public final static native long new_DIScope__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DIScope__SWIG_1();
  public final static native long DIScope_getFilename(long jarg1, DIScope jarg1_);
  public final static native long DIScope_getDirectory(long jarg1, DIScope jarg1_);
  public final static native void delete_DIScope(long jarg1);
  public final static native long new_DIFile__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DIFile__SWIG_1();
  public final static native long DIFile_getFileNode(long jarg1, DIFile jarg1_);
  public final static native boolean DIFile_Verify(long jarg1, DIFile jarg1_);
  public final static native void delete_DIFile(long jarg1);
  public final static native long new_DICompileUnit__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DICompileUnit__SWIG_1();
  public final static native long DICompileUnit_getLanguage(long jarg1, DICompileUnit jarg1_);
  public final static native long DICompileUnit_getProducer(long jarg1, DICompileUnit jarg1_);
  public final static native boolean DICompileUnit_isOptimized(long jarg1, DICompileUnit jarg1_);
  public final static native long DICompileUnit_getFlags(long jarg1, DICompileUnit jarg1_);
  public final static native long DICompileUnit_getRunTimeVersion(long jarg1, DICompileUnit jarg1_);
  public final static native long DICompileUnit_getEnumTypes(long jarg1, DICompileUnit jarg1_);
  public final static native long DICompileUnit_getRetainedTypes(long jarg1, DICompileUnit jarg1_);
  public final static native long DICompileUnit_getSubprograms(long jarg1, DICompileUnit jarg1_);
  public final static native long DICompileUnit_getGlobalVariables(long jarg1, DICompileUnit jarg1_);
  public final static native long DICompileUnit_getImportedModules(long jarg1, DICompileUnit jarg1_);
  public final static native long DICompileUnit_getSplitDebugFilename(long jarg1, DICompileUnit jarg1_);
  public final static native boolean DICompileUnit_Verify(long jarg1, DICompileUnit jarg1_);
  public final static native void delete_DICompileUnit(long jarg1);
  public final static native long new_DIEnumerator__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DIEnumerator__SWIG_1();
  public final static native long DIEnumerator_getName(long jarg1, DIEnumerator jarg1_);
  public final static native long DIEnumerator_getEnumValue(long jarg1, DIEnumerator jarg1_);
  public final static native boolean DIEnumerator_Verify(long jarg1, DIEnumerator jarg1_);
  public final static native void delete_DIEnumerator(long jarg1);
  public final static native boolean DIType_Verify(long jarg1, DIType jarg1_);
  public final static native long new_DIType__SWIG_1(long jarg1, MDNode jarg1_);
  public final static native long new_DIType__SWIG_2();
  public final static native long DIType_getContext(long jarg1, DIType jarg1_);
  public final static native long DIType_getName(long jarg1, DIType jarg1_);
  public final static native long DIType_getLineNumber(long jarg1, DIType jarg1_);
  public final static native long DIType_getSizeInBits(long jarg1, DIType jarg1_);
  public final static native long DIType_getAlignInBits(long jarg1, DIType jarg1_);
  public final static native long DIType_getOffsetInBits(long jarg1, DIType jarg1_);
  public final static native long DIType_getFlags(long jarg1, DIType jarg1_);
  public final static native boolean DIType_isPrivate(long jarg1, DIType jarg1_);
  public final static native boolean DIType_isProtected(long jarg1, DIType jarg1_);
  public final static native boolean DIType_isForwardDecl(long jarg1, DIType jarg1_);
  public final static native boolean DIType_isAppleBlockExtension(long jarg1, DIType jarg1_);
  public final static native boolean DIType_isBlockByrefStruct(long jarg1, DIType jarg1_);
  public final static native boolean DIType_isVirtual(long jarg1, DIType jarg1_);
  public final static native boolean DIType_isArtificial(long jarg1, DIType jarg1_);
  public final static native boolean DIType_isObjectPointer(long jarg1, DIType jarg1_);
  public final static native boolean DIType_isObjcClassComplete(long jarg1, DIType jarg1_);
  public final static native boolean DIType_isVector(long jarg1, DIType jarg1_);
  public final static native boolean DIType_isStaticMember(long jarg1, DIType jarg1_);
  public final static native boolean DIType_isValid(long jarg1, DIType jarg1_);
  public final static native boolean DIType_isUnsignedDIType(long jarg1, DIType jarg1_);
  public final static native void DIType_replaceAllUsesWith__SWIG_0(long jarg1, DIType jarg1_, long jarg2, DIDescriptor jarg2_);
  public final static native void DIType_replaceAllUsesWith__SWIG_1(long jarg1, DIType jarg1_, long jarg2, MDNode jarg2_);
  public final static native void delete_DIType(long jarg1);
  public final static native long new_DIBasicType__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DIBasicType__SWIG_1();
  public final static native long DIBasicType_getEncoding(long jarg1, DIBasicType jarg1_);
  public final static native boolean DIBasicType_Verify(long jarg1, DIBasicType jarg1_);
  public final static native void delete_DIBasicType(long jarg1);
  public final static native long new_DIDerivedType__SWIG_1(long jarg1, MDNode jarg1_);
  public final static native long new_DIDerivedType__SWIG_2();
  public final static native long DIDerivedType_getTypeDerivedFrom(long jarg1, DIDerivedType jarg1_);
  public final static native long DIDerivedType_getOriginalTypeSize(long jarg1, DIDerivedType jarg1_);
  public final static native long DIDerivedType_getObjCProperty(long jarg1, DIDerivedType jarg1_);
  public final static native long DIDerivedType_getClassType(long jarg1, DIDerivedType jarg1_);
  public final static native long DIDerivedType_getConstant(long jarg1, DIDerivedType jarg1_);
  public final static native boolean DIDerivedType_Verify(long jarg1, DIDerivedType jarg1_);
  public final static native void delete_DIDerivedType(long jarg1);
  public final static native long new_DICompositeType__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DICompositeType__SWIG_1();
  public final static native long DICompositeType_getTypeArray(long jarg1, DICompositeType jarg1_);
  public final static native void DICompositeType_setTypeArray__SWIG_0(long jarg1, DICompositeType jarg1_, long jarg2, DIArray jarg2_, long jarg3, DIArray jarg3_);
  public final static native void DICompositeType_setTypeArray__SWIG_1(long jarg1, DICompositeType jarg1_, long jarg2, DIArray jarg2_);
  public final static native long DICompositeType_getRunTimeLang(long jarg1, DICompositeType jarg1_);
  public final static native long DICompositeType_getContainingType(long jarg1, DICompositeType jarg1_);
  public final static native void DICompositeType_setContainingType(long jarg1, DICompositeType jarg1_, long jarg2, DICompositeType jarg2_);
  public final static native long DICompositeType_getTemplateParams(long jarg1, DICompositeType jarg1_);
  public final static native boolean DICompositeType_Verify(long jarg1, DICompositeType jarg1_);
  public final static native void delete_DICompositeType(long jarg1);
  public final static native long new_DITemplateTypeParameter__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DITemplateTypeParameter__SWIG_1();
  public final static native long DITemplateTypeParameter_getContext(long jarg1, DITemplateTypeParameter jarg1_);
  public final static native long DITemplateTypeParameter_getName(long jarg1, DITemplateTypeParameter jarg1_);
  public final static native long DITemplateTypeParameter_getType(long jarg1, DITemplateTypeParameter jarg1_);
  public final static native long DITemplateTypeParameter_getFilename(long jarg1, DITemplateTypeParameter jarg1_);
  public final static native long DITemplateTypeParameter_getDirectory(long jarg1, DITemplateTypeParameter jarg1_);
  public final static native long DITemplateTypeParameter_getLineNumber(long jarg1, DITemplateTypeParameter jarg1_);
  public final static native long DITemplateTypeParameter_getColumnNumber(long jarg1, DITemplateTypeParameter jarg1_);
  public final static native boolean DITemplateTypeParameter_Verify(long jarg1, DITemplateTypeParameter jarg1_);
  public final static native void delete_DITemplateTypeParameter(long jarg1);
  public final static native long new_DITemplateValueParameter__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DITemplateValueParameter__SWIG_1();
  public final static native long DITemplateValueParameter_getContext(long jarg1, DITemplateValueParameter jarg1_);
  public final static native long DITemplateValueParameter_getName(long jarg1, DITemplateValueParameter jarg1_);
  public final static native long DITemplateValueParameter_getType(long jarg1, DITemplateValueParameter jarg1_);
  public final static native long DITemplateValueParameter_getValue(long jarg1, DITemplateValueParameter jarg1_);
  public final static native long DITemplateValueParameter_getFilename(long jarg1, DITemplateValueParameter jarg1_);
  public final static native long DITemplateValueParameter_getDirectory(long jarg1, DITemplateValueParameter jarg1_);
  public final static native long DITemplateValueParameter_getLineNumber(long jarg1, DITemplateValueParameter jarg1_);
  public final static native long DITemplateValueParameter_getColumnNumber(long jarg1, DITemplateValueParameter jarg1_);
  public final static native boolean DITemplateValueParameter_Verify(long jarg1, DITemplateValueParameter jarg1_);
  public final static native void delete_DITemplateValueParameter(long jarg1);
  public final static native long new_DISubprogram__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DISubprogram__SWIG_1();
  public final static native long DISubprogram_getContext(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getName(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getDisplayName(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getLinkageName(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getLineNumber(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getType(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getReturnTypeName(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_isLocalToUnit(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_isDefinition(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getVirtuality(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getVirtualIndex(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getContainingType(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getFlags(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_isArtificial(long jarg1, DISubprogram jarg1_);
  public final static native boolean DISubprogram_isPrivate(long jarg1, DISubprogram jarg1_);
  public final static native boolean DISubprogram_isProtected(long jarg1, DISubprogram jarg1_);
  public final static native boolean DISubprogram_isExplicit(long jarg1, DISubprogram jarg1_);
  public final static native boolean DISubprogram_isPrototyped(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_isOptimized(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getScopeLineNumber(long jarg1, DISubprogram jarg1_);
  public final static native boolean DISubprogram_Verify(long jarg1, DISubprogram jarg1_);
  public final static native boolean DISubprogram_describes(long jarg1, DISubprogram jarg1_, long jarg2, Function jarg2_);
  public final static native long DISubprogram_getFunction(long jarg1, DISubprogram jarg1_);
  public final static native void DISubprogram_replaceFunction(long jarg1, DISubprogram jarg1_, long jarg2, Function jarg2_);
  public final static native long DISubprogram_getTemplateParams(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getFunctionDeclaration(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getVariablesNodes(long jarg1, DISubprogram jarg1_);
  public final static native long DISubprogram_getVariables(long jarg1, DISubprogram jarg1_);
  public final static native void delete_DISubprogram(long jarg1);
  public final static native long new_DIGlobalVariable__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DIGlobalVariable__SWIG_1();
  public final static native long DIGlobalVariable_getContext(long jarg1, DIGlobalVariable jarg1_);
  public final static native long DIGlobalVariable_getName(long jarg1, DIGlobalVariable jarg1_);
  public final static native long DIGlobalVariable_getDisplayName(long jarg1, DIGlobalVariable jarg1_);
  public final static native long DIGlobalVariable_getLinkageName(long jarg1, DIGlobalVariable jarg1_);
  public final static native long DIGlobalVariable_getFilename(long jarg1, DIGlobalVariable jarg1_);
  public final static native long DIGlobalVariable_getDirectory(long jarg1, DIGlobalVariable jarg1_);
  public final static native long DIGlobalVariable_getLineNumber(long jarg1, DIGlobalVariable jarg1_);
  public final static native long DIGlobalVariable_getType(long jarg1, DIGlobalVariable jarg1_);
  public final static native long DIGlobalVariable_isLocalToUnit(long jarg1, DIGlobalVariable jarg1_);
  public final static native long DIGlobalVariable_isDefinition(long jarg1, DIGlobalVariable jarg1_);
  public final static native long DIGlobalVariable_getGlobal(long jarg1, DIGlobalVariable jarg1_);
  public final static native long DIGlobalVariable_getConstant(long jarg1, DIGlobalVariable jarg1_);
  public final static native long DIGlobalVariable_getStaticDataMemberDeclaration(long jarg1, DIGlobalVariable jarg1_);
  public final static native boolean DIGlobalVariable_Verify(long jarg1, DIGlobalVariable jarg1_);
  public final static native void delete_DIGlobalVariable(long jarg1);
  public final static native long new_DIVariable__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DIVariable__SWIG_1();
  public final static native long DIVariable_getContext(long jarg1, DIVariable jarg1_);
  public final static native long DIVariable_getName(long jarg1, DIVariable jarg1_);
  public final static native long DIVariable_getFile(long jarg1, DIVariable jarg1_);
  public final static native long DIVariable_getLineNumber(long jarg1, DIVariable jarg1_);
  public final static native long DIVariable_getArgNumber(long jarg1, DIVariable jarg1_);
  public final static native long DIVariable_getType(long jarg1, DIVariable jarg1_);
  public final static native boolean DIVariable_isArtificial(long jarg1, DIVariable jarg1_);
  public final static native boolean DIVariable_isObjectPointer(long jarg1, DIVariable jarg1_);
  public final static native long DIVariable_getInlinedAt(long jarg1, DIVariable jarg1_);
  public final static native boolean DIVariable_Verify(long jarg1, DIVariable jarg1_);
  public final static native boolean DIVariable_hasComplexAddress(long jarg1, DIVariable jarg1_);
  public final static native long DIVariable_getNumAddrElements(long jarg1, DIVariable jarg1_);
  public final static native long DIVariable_getAddrElement(long jarg1, DIVariable jarg1_, long jarg2);
  public final static native boolean DIVariable_isBlockByrefVariable(long jarg1, DIVariable jarg1_);
  public final static native boolean DIVariable_isInlinedFnArgument(long jarg1, DIVariable jarg1_, long jarg2, Function jarg2_);
  public final static native void DIVariable_printExtendedName(long jarg1, DIVariable jarg1_, long jarg2);
  public final static native void delete_DIVariable(long jarg1);
  public final static native long new_DILexicalBlock__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DILexicalBlock__SWIG_1();
  public final static native long DILexicalBlock_getContext(long jarg1, DILexicalBlock jarg1_);
  public final static native long DILexicalBlock_getLineNumber(long jarg1, DILexicalBlock jarg1_);
  public final static native long DILexicalBlock_getColumnNumber(long jarg1, DILexicalBlock jarg1_);
  public final static native boolean DILexicalBlock_Verify(long jarg1, DILexicalBlock jarg1_);
  public final static native void delete_DILexicalBlock(long jarg1);
  public final static native long new_DILexicalBlockFile__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DILexicalBlockFile__SWIG_1();
  public final static native long DILexicalBlockFile_getContext(long jarg1, DILexicalBlockFile jarg1_);
  public final static native long DILexicalBlockFile_getLineNumber(long jarg1, DILexicalBlockFile jarg1_);
  public final static native long DILexicalBlockFile_getColumnNumber(long jarg1, DILexicalBlockFile jarg1_);
  public final static native long DILexicalBlockFile_getScope(long jarg1, DILexicalBlockFile jarg1_);
  public final static native boolean DILexicalBlockFile_Verify(long jarg1, DILexicalBlockFile jarg1_);
  public final static native void delete_DILexicalBlockFile(long jarg1);
  public final static native long new_DINameSpace__SWIG_0(long jarg1, MDNode jarg1_);
  public final static native long new_DINameSpace__SWIG_1();
  public final static native long DINameSpace_getContext(long jarg1, DINameSpace jarg1_);
  public final static native long DINameSpace_getName(long jarg1, DINameSpace jarg1_);
  public final static native long DINameSpace_getLineNumber(long jarg1, DINameSpace jarg1_);
  public final static native boolean DINameSpace_Verify(long jarg1, DINameSpace jarg1_);
  public final static native void delete_DINameSpace(long jarg1);
  public final static native long new_DILocation(long jarg1, MDNode jarg1_);
  public final static native long DILocation_getLineNumber(long jarg1, DILocation jarg1_);
  public final static native long DILocation_getColumnNumber(long jarg1, DILocation jarg1_);
  public final static native long DILocation_getScope(long jarg1, DILocation jarg1_);
  public final static native long DILocation_getOrigLocation(long jarg1, DILocation jarg1_);
  public final static native long DILocation_getFilename(long jarg1, DILocation jarg1_);
  public final static native long DILocation_getDirectory(long jarg1, DILocation jarg1_);
  public final static native boolean DILocation_Verify(long jarg1, DILocation jarg1_);
  public final static native void delete_DILocation(long jarg1);
  public final static native long new_DIObjCProperty(long jarg1, MDNode jarg1_);
  public final static native long DIObjCProperty_getObjCPropertyName(long jarg1, DIObjCProperty jarg1_);
  public final static native long DIObjCProperty_getFile(long jarg1, DIObjCProperty jarg1_);
  public final static native long DIObjCProperty_getLineNumber(long jarg1, DIObjCProperty jarg1_);
  public final static native long DIObjCProperty_getObjCPropertyGetterName(long jarg1, DIObjCProperty jarg1_);
  public final static native long DIObjCProperty_getObjCPropertySetterName(long jarg1, DIObjCProperty jarg1_);
  public final static native boolean DIObjCProperty_isReadOnlyObjCProperty(long jarg1, DIObjCProperty jarg1_);
  public final static native boolean DIObjCProperty_isReadWriteObjCProperty(long jarg1, DIObjCProperty jarg1_);
  public final static native boolean DIObjCProperty_isAssignObjCProperty(long jarg1, DIObjCProperty jarg1_);
  public final static native boolean DIObjCProperty_isRetainObjCProperty(long jarg1, DIObjCProperty jarg1_);
  public final static native boolean DIObjCProperty_isCopyObjCProperty(long jarg1, DIObjCProperty jarg1_);
  public final static native boolean DIObjCProperty_isNonAtomicObjCProperty(long jarg1, DIObjCProperty jarg1_);
  public final static native long DIObjCProperty_getType(long jarg1, DIObjCProperty jarg1_);
  public final static native boolean DIObjCProperty_Verify(long jarg1, DIObjCProperty jarg1_);
  public final static native void delete_DIObjCProperty(long jarg1);
  public final static native long new_DIImportedModule(long jarg1, MDNode jarg1_);
  public final static native long DIImportedModule_getContext(long jarg1, DIImportedModule jarg1_);
  public final static native long DIImportedModule_getNameSpace(long jarg1, DIImportedModule jarg1_);
  public final static native long DIImportedModule_getLineNumber(long jarg1, DIImportedModule jarg1_);
  public final static native boolean DIImportedModule_Verify(long jarg1, DIImportedModule jarg1_);
  public final static native void delete_DIImportedModule(long jarg1);
  public final static native long getDISubprogram(long jarg1, MDNode jarg1_);
  public final static native long getDICompositeType(long jarg1, DIType jarg1_);
  public final static native boolean isSubprogramContext(long jarg1, MDNode jarg1_);
  public final static native long getOrInsertFnSpecificMDNode(long jarg1, Module jarg1_, long jarg2, DISubprogram jarg2_);
  public final static native long getFnSpecificMDNode(long jarg1, Module jarg1_, long jarg2, DISubprogram jarg2_);
  public final static native long createInlinedVariable(long jarg1, MDNode jarg1_, long jarg2, MDNode jarg2_, long jarg3, LLVMContext jarg3_);
  public final static native long cleanseInlinedVariable(long jarg1, MDNode jarg1_, long jarg2, LLVMContext jarg2_);
  public final static native void DebugInfoFinder_processModule(long jarg1, DebugInfoFinder jarg1_, long jarg2, Module jarg2_);
  public final static native long DebugInfoFinder_compile_unit_begin(long jarg1, DebugInfoFinder jarg1_);
  public final static native long DebugInfoFinder_compile_unit_end(long jarg1, DebugInfoFinder jarg1_);
  public final static native long DebugInfoFinder_subprogram_begin(long jarg1, DebugInfoFinder jarg1_);
  public final static native long DebugInfoFinder_subprogram_end(long jarg1, DebugInfoFinder jarg1_);
  public final static native long DebugInfoFinder_global_variable_begin(long jarg1, DebugInfoFinder jarg1_);
  public final static native long DebugInfoFinder_global_variable_end(long jarg1, DebugInfoFinder jarg1_);
  public final static native long DebugInfoFinder_type_begin(long jarg1, DebugInfoFinder jarg1_);
  public final static native long DebugInfoFinder_type_end(long jarg1, DebugInfoFinder jarg1_);
  public final static native long DebugInfoFinder_compile_unit_count(long jarg1, DebugInfoFinder jarg1_);
  public final static native long DebugInfoFinder_global_variable_count(long jarg1, DebugInfoFinder jarg1_);
  public final static native long DebugInfoFinder_subprogram_count(long jarg1, DebugInfoFinder jarg1_);
  public final static native long DebugInfoFinder_type_count(long jarg1, DebugInfoFinder jarg1_);
  public final static native long new_DebugInfoFinder();
  public final static native void delete_DebugInfoFinder(long jarg1);
  public final static native long MDString_get__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2, StringRef jarg2_);
  public final static native long MDString_get__SWIG_1(long jarg1, LLVMContext jarg1_, String jarg2);
  public final static native long MDString_getString(long jarg1, MDString jarg1_);
  public final static native long MDString_getLength(long jarg1, MDString jarg1_);
  public final static native String MDString_begin(long jarg1, MDString jarg1_);
  public final static native String MDString_end(long jarg1, MDString jarg1_);
  public final static native boolean MDString_classof(long jarg1);
  public final static native void delete_MDString(long jarg1);
  public final static native long MDNode_get(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long MDNode_getWhenValsUnresolved(long jarg1, LLVMContext jarg1_, long jarg2, boolean jarg3);
  public final static native long MDNode_getIfExists(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long MDNode_getTemporary(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native void MDNode_deleteTemporary(long jarg1, MDNode jarg1_);
  public final static native void MDNode_replaceOperandWith(long jarg1, MDNode jarg1_, long jarg2, long jarg3);
  public final static native long MDNode_getOperand(long jarg1, MDNode jarg1_, long jarg2);
  public final static native long MDNode_getNumOperands(long jarg1, MDNode jarg1_);
  public final static native boolean MDNode_isFunctionLocal(long jarg1, MDNode jarg1_);
  public final static native long MDNode_getFunction(long jarg1, MDNode jarg1_);
  public final static native void MDNode_Profile(long jarg1, MDNode jarg1_, long jarg2);
  public final static native boolean MDNode_classof(long jarg1);
  public final static native long MDNode_getMostGenericTBAA(long jarg1, MDNode jarg1_, long jarg2, MDNode jarg2_);
  public final static native long MDNode_getMostGenericFPMath(long jarg1, MDNode jarg1_, long jarg2, MDNode jarg2_);
  public final static native long MDNode_getMostGenericRange(long jarg1, MDNode jarg1_, long jarg2, MDNode jarg2_);
  public final static native void NamedMDNode_eraseFromParent(long jarg1, NamedMDNode jarg1_);
  public final static native void NamedMDNode_dropAllReferences(long jarg1, NamedMDNode jarg1_);
  public final static native void delete_NamedMDNode(long jarg1);
  public final static native long NamedMDNode_getParent__SWIG_0(long jarg1, NamedMDNode jarg1_);
  public final static native long NamedMDNode_getOperand(long jarg1, NamedMDNode jarg1_, long jarg2);
  public final static native long NamedMDNode_getNumOperands(long jarg1, NamedMDNode jarg1_);
  public final static native void NamedMDNode_addOperand(long jarg1, NamedMDNode jarg1_, long jarg2, MDNode jarg2_);
  public final static native long NamedMDNode_getName(long jarg1, NamedMDNode jarg1_);
  public final static native void NamedMDNode_print__SWIG_0(long jarg1, NamedMDNode jarg1_, long jarg2, long jarg3);
  public final static native void NamedMDNode_print__SWIG_1(long jarg1, NamedMDNode jarg1_, long jarg2);
  public final static native void NamedMDNode_dump(long jarg1, NamedMDNode jarg1_);
  public final static native long new_DebugLoc();
  public final static native long DebugLoc_get__SWIG_0(long jarg1, long jarg2, long jarg3, MDNode jarg3_, long jarg4, MDNode jarg4_);
  public final static native long DebugLoc_get__SWIG_1(long jarg1, long jarg2, long jarg3, MDNode jarg3_);
  public final static native long DebugLoc_getFromDILocation(long jarg1, MDNode jarg1_);
  public final static native long DebugLoc_getFromDILexicalBlock(long jarg1, MDNode jarg1_);
  public final static native boolean DebugLoc_isUnknown(long jarg1, DebugLoc jarg1_);
  public final static native long DebugLoc_getLine(long jarg1, DebugLoc jarg1_);
  public final static native long DebugLoc_getCol(long jarg1, DebugLoc jarg1_);
  public final static native long DebugLoc_getScope(long jarg1, DebugLoc jarg1_, long jarg2, LLVMContext jarg2_);
  public final static native long DebugLoc_getInlinedAt(long jarg1, DebugLoc jarg1_, long jarg2, LLVMContext jarg2_);
  public final static native void DebugLoc_getScopeAndInlinedAt(long jarg1, DebugLoc jarg1_, long jarg2, long jarg3, long jarg4, LLVMContext jarg4_);
  public final static native long DebugLoc_getAsMDNode(long jarg1, DebugLoc jarg1_, long jarg2, LLVMContext jarg2_);
  public final static native void DebugLoc_dump(long jarg1, DebugLoc jarg1_, long jarg2, LLVMContext jarg2_);
  public final static native void delete_DebugLoc(long jarg1);
  public final static native void delete_Instruction(long jarg1);
  public final static native long Instruction_use_back__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native long Instruction_getParent__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native void Instruction_removeFromParent(long jarg1, Instruction jarg1_);
  public final static native void Instruction_eraseFromParent(long jarg1, Instruction jarg1_);
  public final static native void Instruction_insertBefore(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native void Instruction_insertAfter(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native void Instruction_moveBefore(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native long Instruction_getOpcode(long jarg1, Instruction jarg1_);
  public final static native String Instruction_getOpcodeName__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isTerminator__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isBinaryOp__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isShift__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isCast__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native String Instruction_getOpcodeName__SWIG_1(long jarg1);
  public final static native boolean Instruction_isTerminator__SWIG_1(long jarg1);
  public final static native boolean Instruction_isBinaryOp__SWIG_1(long jarg1);
  public final static native boolean Instruction_isShift__SWIG_1(long jarg1);
  public final static native boolean Instruction_isLogicalShift(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isArithmeticShift(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isCast__SWIG_1(long jarg1);
  public final static native boolean Instruction_hasMetadata(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_hasMetadataOtherThanDebugLoc(long jarg1, Instruction jarg1_);
  public final static native long Instruction_getMetadata__SWIG_0(long jarg1, Instruction jarg1_, long jarg2);
  public final static native long Instruction_getMetadata__SWIG_1(long jarg1, Instruction jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Instruction_getAllMetadata(long jarg1, Instruction jarg1_, long jarg2);
  public final static native void Instruction_getAllMetadataOtherThanDebugLoc(long jarg1, Instruction jarg1_, long jarg2);
  public final static native void Instruction_setMetadata__SWIG_0(long jarg1, Instruction jarg1_, long jarg2, long jarg3, MDNode jarg3_);
  public final static native void Instruction_setMetadata__SWIG_1(long jarg1, Instruction jarg1_, long jarg2, StringRef jarg2_, long jarg3, MDNode jarg3_);
  public final static native void Instruction_setDebugLoc(long jarg1, Instruction jarg1_, long jarg2, DebugLoc jarg2_);
  public final static native long Instruction_getDebugLoc(long jarg1, Instruction jarg1_);
  public final static native void Instruction_setHasUnsafeAlgebra(long jarg1, Instruction jarg1_, boolean jarg2);
  public final static native void Instruction_setHasNoNaNs(long jarg1, Instruction jarg1_, boolean jarg2);
  public final static native void Instruction_setHasNoInfs(long jarg1, Instruction jarg1_, boolean jarg2);
  public final static native void Instruction_setHasNoSignedZeros(long jarg1, Instruction jarg1_, boolean jarg2);
  public final static native void Instruction_setHasAllowReciprocal(long jarg1, Instruction jarg1_, boolean jarg2);
  public final static native void Instruction_setFastMathFlags(long jarg1, Instruction jarg1_, long jarg2);
  public final static native boolean Instruction_hasUnsafeAlgebra(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_hasNoNaNs(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_hasNoInfs(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_hasNoSignedZeros(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_hasAllowReciprocal(long jarg1, Instruction jarg1_);
  public final static native long Instruction_getFastMathFlags(long jarg1, Instruction jarg1_);
  public final static native void Instruction_copyFastMathFlags(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native boolean Instruction_isAssociative__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isAssociative__SWIG_1(long jarg1);
  public final static native boolean Instruction_isCommutative__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isCommutative__SWIG_1(long jarg1);
  public final static native boolean Instruction_isIdempotent__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isIdempotent__SWIG_1(long jarg1);
  public final static native boolean Instruction_isNilpotent__SWIG_0(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isNilpotent__SWIG_1(long jarg1);
  public final static native boolean Instruction_mayWriteToMemory(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_mayReadFromMemory(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_mayReadOrWriteMemory(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_mayThrow(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_mayReturn(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_mayHaveSideEffects(long jarg1, Instruction jarg1_);
  public final static native long Instruction_clone(long jarg1, Instruction jarg1_);
  public final static native boolean Instruction_isIdenticalTo(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native boolean Instruction_isIdenticalToWhenDefined(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native int Instruction_CompareIgnoringAlignment_get();
  public final static native int Instruction_CompareUsingScalarTypes_get();
  public final static native boolean Instruction_isSameOperationAs__SWIG_0(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_, long jarg3);
  public final static native boolean Instruction_isSameOperationAs__SWIG_1(long jarg1, Instruction jarg1_, long jarg2, Instruction jarg2_);
  public final static native boolean Instruction_isUsedOutsideOfBlock(long jarg1, Instruction jarg1_, long jarg2, BasicBlock jarg2_);
  public final static native boolean Instruction_classof(long jarg1);
  public final static native long BasicBlock_getContext(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_Create__SWIG_0(long jarg1, LLVMContext jarg1_, long jarg2, long jarg3, Function jarg3_, long jarg4, BasicBlock jarg4_);
  public final static native long BasicBlock_Create__SWIG_1(long jarg1, LLVMContext jarg1_, long jarg2, long jarg3, Function jarg3_);
  public final static native long BasicBlock_Create__SWIG_2(long jarg1, LLVMContext jarg1_, long jarg2);
  public final static native long BasicBlock_Create__SWIG_3(long jarg1, LLVMContext jarg1_);
  public final static native void delete_BasicBlock(long jarg1);
  public final static native long BasicBlock_getParent__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getTerminator__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getFirstNonPHI__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getFirstNonPHIOrDbg__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getFirstNonPHIOrDbgOrLifetime__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getFirstInsertionPt__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native void BasicBlock_removeFromParent(long jarg1, BasicBlock jarg1_);
  public final static native void BasicBlock_eraseFromParent(long jarg1, BasicBlock jarg1_);
  public final static native void BasicBlock_moveBefore(long jarg1, BasicBlock jarg1_, long jarg2, BasicBlock jarg2_);
  public final static native void BasicBlock_moveAfter(long jarg1, BasicBlock jarg1_, long jarg2, BasicBlock jarg2_);
  public final static native long BasicBlock_getSinglePredecessor__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getUniquePredecessor__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_begin__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_end__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_rbegin__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_rend__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_size(long jarg1, BasicBlock jarg1_);
  public final static native boolean BasicBlock_empty(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_front__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_back__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getInstList__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native String BasicBlock_getSublistAccess(long jarg1, Instruction jarg1_);
  public final static native long BasicBlock_getValueSymbolTable(long jarg1, BasicBlock jarg1_);
  public final static native boolean BasicBlock_classof(long jarg1);
  public final static native void BasicBlock_dropAllReferences(long jarg1, BasicBlock jarg1_);
  public final static native void BasicBlock_removePredecessor__SWIG_0(long jarg1, BasicBlock jarg1_, long jarg2, BasicBlock jarg2_, boolean jarg3);
  public final static native void BasicBlock_removePredecessor__SWIG_1(long jarg1, BasicBlock jarg1_, long jarg2, BasicBlock jarg2_);
  public final static native long BasicBlock_splitBasicBlock__SWIG_0(long jarg1, BasicBlock jarg1_, long jarg2, long jarg3);
  public final static native long BasicBlock_splitBasicBlock__SWIG_1(long jarg1, BasicBlock jarg1_, long jarg2);
  public final static native boolean BasicBlock_hasAddressTaken(long jarg1, BasicBlock jarg1_);
  public final static native void BasicBlock_replaceSuccessorsPhiUsesWith(long jarg1, BasicBlock jarg1_, long jarg2, BasicBlock jarg2_);
  public final static native boolean BasicBlock_isLandingPad(long jarg1, BasicBlock jarg1_);
  public final static native long BasicBlock_getLandingPadInst__SWIG_0(long jarg1, BasicBlock jarg1_);
  public final static native int GlobalValue_ExternalLinkage_get();
  public final static native int GlobalValue_DefaultVisibility_get();
  public final static native void delete_GlobalValue(long jarg1);
  public final static native long GlobalValue_getAlignment(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_setAlignment(long jarg1, GlobalValue jarg1_, long jarg2);
  public final static native boolean GlobalValue_hasUnnamedAddr(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_setUnnamedAddr(long jarg1, GlobalValue jarg1_, boolean jarg2);
  public final static native int GlobalValue_getVisibility(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasDefaultVisibility(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasHiddenVisibility(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasProtectedVisibility(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_setVisibility(long jarg1, GlobalValue jarg1_, int jarg2);
  public final static native boolean GlobalValue_hasSection(long jarg1, GlobalValue jarg1_);
  public final static native String GlobalValue_getSection(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_setSection(long jarg1, GlobalValue jarg1_, long jarg2, StringRef jarg2_);
  public final static native long GlobalValue_getType(long jarg1, GlobalValue jarg1_);
  public final static native int GlobalValue_getLinkOnceLinkage(boolean jarg1);
  public final static native int GlobalValue_getWeakLinkage(boolean jarg1);
  public final static native boolean GlobalValue_isExternalLinkage(int jarg1);
  public final static native boolean GlobalValue_isAvailableExternallyLinkage(int jarg1);
  public final static native boolean GlobalValue_isLinkOnceLinkage(int jarg1);
  public final static native boolean GlobalValue_isLinkOnceODRAutoHideLinkage(int jarg1);
  public final static native boolean GlobalValue_isWeakLinkage(int jarg1);
  public final static native boolean GlobalValue_isAppendingLinkage(int jarg1);
  public final static native boolean GlobalValue_isInternalLinkage(int jarg1);
  public final static native boolean GlobalValue_isPrivateLinkage(int jarg1);
  public final static native boolean GlobalValue_isLinkerPrivateLinkage(int jarg1);
  public final static native boolean GlobalValue_isLinkerPrivateWeakLinkage(int jarg1);
  public final static native boolean GlobalValue_isLocalLinkage(int jarg1);
  public final static native boolean GlobalValue_isDLLImportLinkage(int jarg1);
  public final static native boolean GlobalValue_isDLLExportLinkage(int jarg1);
  public final static native boolean GlobalValue_isExternalWeakLinkage(int jarg1);
  public final static native boolean GlobalValue_isCommonLinkage(int jarg1);
  public final static native boolean GlobalValue_isDiscardableIfUnused__SWIG_0(int jarg1);
  public final static native boolean GlobalValue_mayBeOverridden__SWIG_0(int jarg1);
  public final static native boolean GlobalValue_isWeakForLinker__SWIG_0(int jarg1);
  public final static native boolean GlobalValue_hasExternalLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasAvailableExternallyLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasLinkOnceLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasLinkOnceODRAutoHideLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasWeakLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasAppendingLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasInternalLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasPrivateLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasLinkerPrivateLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasLinkerPrivateWeakLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasLocalLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasDLLImportLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasDLLExportLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasExternalWeakLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_hasCommonLinkage(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_setLinkage(long jarg1, GlobalValue jarg1_, int jarg2);
  public final static native int GlobalValue_getLinkage(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_isDiscardableIfUnused__SWIG_1(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_mayBeOverridden__SWIG_1(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_isWeakForLinker__SWIG_1(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_copyAttributesFrom(long jarg1, GlobalValue jarg1_, long jarg2, GlobalValue jarg2_);
  public final static native boolean GlobalValue_isMaterializable(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_isDematerializable(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_Materialize__SWIG_0(long jarg1, GlobalValue jarg1_, long jarg2);
  public final static native boolean GlobalValue_Materialize__SWIG_1(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_Dematerialize(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_destroyConstant(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_isDeclaration(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_removeFromParent(long jarg1, GlobalValue jarg1_);
  public final static native void GlobalValue_eraseFromParent(long jarg1, GlobalValue jarg1_);
  public final static native long GlobalValue_getParent__SWIG_0(long jarg1, GlobalValue jarg1_);
  public final static native boolean GlobalValue_classof(long jarg1);
  public final static native long Function_Create__SWIG_0(long jarg1, int jarg2, long jarg3, long jarg4, Module jarg4_);
  public final static native long Function_Create__SWIG_1(long jarg1, int jarg2, long jarg3);
  public final static native long Function_Create__SWIG_2(long jarg1, int jarg2);
  public final static native void delete_Function(long jarg1);
  public final static native long Function_getReturnType(long jarg1, Function jarg1_);
  public final static native long Function_getFunctionType(long jarg1, Function jarg1_);
  public final static native long Function_getContext(long jarg1, Function jarg1_);
  public final static native boolean Function_isVarArg(long jarg1, Function jarg1_);
  public final static native long Function_getIntrinsicID(long jarg1, Function jarg1_);
  public final static native boolean Function_isIntrinsic(long jarg1, Function jarg1_);
  public final static native long Function_getCallingConv(long jarg1, Function jarg1_);
  public final static native void Function_setCallingConv(long jarg1, Function jarg1_, long jarg2);
  public final static native long Function_getAttributes(long jarg1, Function jarg1_);
  public final static native void Function_setAttributes(long jarg1, Function jarg1_, long jarg2);
  public final static native void Function_addFnAttr__SWIG_0(long jarg1, Function jarg1_, long jarg2);
  public final static native void Function_addFnAttr__SWIG_1(long jarg1, Function jarg1_, long jarg2, StringRef jarg2_);
  public final static native boolean Function_hasFnAttribute__SWIG_0(long jarg1, Function jarg1_, long jarg2);
  public final static native boolean Function_hasFnAttribute__SWIG_1(long jarg1, Function jarg1_, long jarg2, StringRef jarg2_);
  public final static native boolean Function_hasGC(long jarg1, Function jarg1_);
  public final static native String Function_getGC(long jarg1, Function jarg1_);
  public final static native void Function_setGC(long jarg1, Function jarg1_, String jarg2);
  public final static native void Function_clearGC(long jarg1, Function jarg1_);
  public final static native void Function_addAttribute(long jarg1, Function jarg1_, long jarg2, long jarg3);
  public final static native void Function_addAttributes(long jarg1, Function jarg1_, long jarg2, long jarg3);
  public final static native void Function_removeAttributes(long jarg1, Function jarg1_, long jarg2, long jarg3);
  public final static native long Function_getParamAlignment(long jarg1, Function jarg1_, long jarg2);
  public final static native boolean Function_doesNotAccessMemory(long jarg1, Function jarg1_);
  public final static native void Function_setDoesNotAccessMemory(long jarg1, Function jarg1_);
  public final static native boolean Function_onlyReadsMemory(long jarg1, Function jarg1_);
  public final static native void Function_setOnlyReadsMemory(long jarg1, Function jarg1_);
  public final static native boolean Function_doesNotReturn(long jarg1, Function jarg1_);
  public final static native void Function_setDoesNotReturn(long jarg1, Function jarg1_);
  public final static native boolean Function_doesNotThrow(long jarg1, Function jarg1_);
  public final static native void Function_setDoesNotThrow(long jarg1, Function jarg1_);
  public final static native boolean Function_cannotDuplicate(long jarg1, Function jarg1_);
  public final static native void Function_setCannotDuplicate(long jarg1, Function jarg1_);
  public final static native boolean Function_hasUWTable(long jarg1, Function jarg1_);
  public final static native void Function_setHasUWTable(long jarg1, Function jarg1_);
  public final static native boolean Function_needsUnwindTableEntry(long jarg1, Function jarg1_);
  public final static native boolean Function_hasStructRetAttr(long jarg1, Function jarg1_);
  public final static native boolean Function_doesNotAlias(long jarg1, Function jarg1_, long jarg2);
  public final static native void Function_setDoesNotAlias(long jarg1, Function jarg1_, long jarg2);
  public final static native boolean Function_doesNotCapture(long jarg1, Function jarg1_, long jarg2);
  public final static native void Function_setDoesNotCapture(long jarg1, Function jarg1_, long jarg2);
  public final static native void Function_copyAttributesFrom(long jarg1, Function jarg1_, long jarg2, GlobalValue jarg2_);
  public final static native void Function_deleteBody(long jarg1, Function jarg1_);
  public final static native void Function_removeFromParent(long jarg1, Function jarg1_);
  public final static native void Function_eraseFromParent(long jarg1, Function jarg1_);
  public final static native long Function_getArgumentList__SWIG_0(long jarg1, Function jarg1_);
  public final static native String Function_getSublistAccess__SWIG_0(long jarg1);
  public final static native long Function_getBasicBlockList__SWIG_0(long jarg1, Function jarg1_);
  public final static native String Function_getSublistAccess__SWIG_1(long jarg1, BasicBlock jarg1_);
  public final static native long Function_getEntryBlock__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_getValueSymbolTable__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_begin__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_end__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_size(long jarg1, Function jarg1_);
  public final static native boolean Function_empty(long jarg1, Function jarg1_);
  public final static native long Function_front__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_back__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_arg_begin__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_arg_end__SWIG_0(long jarg1, Function jarg1_);
  public final static native long Function_arg_size(long jarg1, Function jarg1_);
  public final static native boolean Function_arg_empty(long jarg1, Function jarg1_);
  public final static native void Function_viewCFG(long jarg1, Function jarg1_);
  public final static native void Function_viewCFGOnly(long jarg1, Function jarg1_);
  public final static native boolean Function_classof(long jarg1);
  public final static native void Function_dropAllReferences(long jarg1, Function jarg1_);
  public final static native boolean Function_hasAddressTaken__SWIG_0(long jarg1, Function jarg1_, long jarg2);
  public final static native boolean Function_hasAddressTaken__SWIG_1(long jarg1, Function jarg1_);
  public final static native boolean Function_isDefTriviallyDead(long jarg1, Function jarg1_);
  public final static native boolean Function_callsFunctionThatReturnsTwice(long jarg1, Function jarg1_);
  public final static native int Module_Error_get();
  public final static native int Module_Warning_get();
  public final static native int Module_Require_get();
  public final static native int Module_Override_get();
  public final static native int Module_Append_get();
  public final static native int Module_AppendUnique_get();
  public final static native void Module_ModuleFlagEntry_Behavior_set(long jarg1, Module.ModuleFlagEntry jarg1_, int jarg2);
  public final static native int Module_ModuleFlagEntry_Behavior_get(long jarg1, Module.ModuleFlagEntry jarg1_);
  public final static native void Module_ModuleFlagEntry_Key_set(long jarg1, Module.ModuleFlagEntry jarg1_, long jarg2, MDString jarg2_);
  public final static native long Module_ModuleFlagEntry_Key_get(long jarg1, Module.ModuleFlagEntry jarg1_);
  public final static native void Module_ModuleFlagEntry_Val_set(long jarg1, Module.ModuleFlagEntry jarg1_, long jarg2);
  public final static native long Module_ModuleFlagEntry_Val_get(long jarg1, Module.ModuleFlagEntry jarg1_);
  public final static native long new_Module_ModuleFlagEntry(int jarg1, long jarg2, MDString jarg2_, long jarg3);
  public final static native void delete_Module_ModuleFlagEntry(long jarg1);
  public final static native long new_Module(long jarg1, StringRef jarg1_, long jarg2, LLVMContext jarg2_);
  public final static native void delete_Module(long jarg1);
  public final static native String Module_getModuleIdentifier(long jarg1, Module jarg1_);
  public final static native String Module_getDataLayout(long jarg1, Module jarg1_);
  public final static native String Module_getTargetTriple(long jarg1, Module jarg1_);
  public final static native int Module_getEndianness(long jarg1, Module jarg1_);
  public final static native int Module_getPointerSize(long jarg1, Module jarg1_);
  public final static native long Module_getContext(long jarg1, Module jarg1_);
  public final static native String Module_getModuleInlineAsm(long jarg1, Module jarg1_);
  public final static native void Module_setModuleIdentifier(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Module_setDataLayout(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Module_setTargetTriple(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Module_setModuleInlineAsm(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Module_appendModuleInlineAsm(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getNamedValue(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getMDKindID(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Module_getMDKindNames(long jarg1, Module jarg1_, long jarg2);
  public final static native long Module_getTypeByName(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getOrInsertFunction__SWIG_0(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, long jarg3, long jarg4);
  public final static native long Module_getOrInsertFunction__SWIG_1(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long Module_getOrInsertFunction__SWIG_2(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, long jarg3, long jarg4);
  public final static native long Module_getOrInsertFunction__SWIG_3(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long Module_getOrInsertTargetIntrinsic(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, long jarg3, long jarg4);
  public final static native long Module_getFunction(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getGlobalVariable__SWIG_0(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, boolean jarg3);
  public final static native long Module_getGlobalVariable__SWIG_1(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getNamedGlobal(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getOrInsertGlobal(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_, long jarg3);
  public final static native long Module_getNamedAlias(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native long Module_getNamedMetadata(long jarg1, Module jarg1_, long jarg2);
  public final static native long Module_getOrInsertNamedMetadata(long jarg1, Module jarg1_, long jarg2, StringRef jarg2_);
  public final static native void Module_eraseNamedMetadata(long jarg1, Module jarg1_, long jarg2, NamedMDNode jarg2_);
  public final static native void Module_getModuleFlagsMetadata__SWIG_0(long jarg1, Module jarg1_, long jarg2);
  public final static native long Module_getModuleFlagsMetadata__SWIG_1(long jarg1, Module jarg1_);
  public final static native long Module_getOrInsertModuleFlagsMetadata(long jarg1, Module jarg1_);
  public final static native void Module_addModuleFlag__SWIG_0(long jarg1, Module jarg1_, int jarg2, long jarg3, StringRef jarg3_, long jarg4);
  public final static native void Module_addModuleFlag__SWIG_1(long jarg1, Module jarg1_, int jarg2, long jarg3, StringRef jarg3_, long jarg4);
  public final static native void Module_addModuleFlag__SWIG_2(long jarg1, Module jarg1_, long jarg2, MDNode jarg2_);
  public final static native void Module_setMaterializer(long jarg1, Module jarg1_, long jarg2);
  public final static native long Module_getMaterializer(long jarg1, Module jarg1_);
  public final static native boolean Module_isMaterializable(long jarg1, Module jarg1_, long jarg2, GlobalValue jarg2_);
  public final static native boolean Module_isDematerializable(long jarg1, Module jarg1_, long jarg2, GlobalValue jarg2_);
  public final static native boolean Module_Materialize__SWIG_0(long jarg1, Module jarg1_, long jarg2, GlobalValue jarg2_, long jarg3);
  public final static native boolean Module_Materialize__SWIG_1(long jarg1, Module jarg1_, long jarg2, GlobalValue jarg2_);
  public final static native void Module_Dematerialize(long jarg1, Module jarg1_, long jarg2, GlobalValue jarg2_);
  public final static native boolean Module_MaterializeAll__SWIG_0(long jarg1, Module jarg1_, long jarg2);
  public final static native boolean Module_MaterializeAll__SWIG_1(long jarg1, Module jarg1_);
  public final static native boolean Module_MaterializeAllPermanently__SWIG_0(long jarg1, Module jarg1_, long jarg2);
  public final static native boolean Module_MaterializeAllPermanently__SWIG_1(long jarg1, Module jarg1_);
  public final static native long Module_getGlobalList__SWIG_0(long jarg1, Module jarg1_);
  public final static native String Module_getSublistAccess__SWIG_0(long jarg1);
  public final static native long Module_getFunctionList__SWIG_0(long jarg1, Module jarg1_);
  public final static native String Module_getSublistAccess__SWIG_1(long jarg1, Function jarg1_);
  public final static native long Module_getAliasList__SWIG_0(long jarg1, Module jarg1_);
  public final static native String Module_getSublistAccess__SWIG_2(long jarg1);
  public final static native long Module_getNamedMDList__SWIG_0(long jarg1, Module jarg1_);
  public final static native String Module_getSublistAccess__SWIG_3(long jarg1, NamedMDNode jarg1_);
  public final static native long Module_getValueSymbolTable__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_global_begin__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_global_end__SWIG_0(long jarg1, Module jarg1_);
  public final static native boolean Module_global_empty(long jarg1, Module jarg1_);
  public final static native long Module_begin__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_end__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_size(long jarg1, Module jarg1_);
  public final static native boolean Module_empty(long jarg1, Module jarg1_);
  public final static native long Module_alias_begin__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_alias_end__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_alias_size(long jarg1, Module jarg1_);
  public final static native boolean Module_alias_empty(long jarg1, Module jarg1_);
  public final static native long Module_named_metadata_begin__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_named_metadata_end__SWIG_0(long jarg1, Module jarg1_);
  public final static native long Module_named_metadata_size(long jarg1, Module jarg1_);
  public final static native boolean Module_named_metadata_empty(long jarg1, Module jarg1_);
  public final static native void Module_print(long jarg1, Module jarg1_, long jarg2, long jarg3);
  public final static native void Module_dump(long jarg1, Module jarg1_);
  public final static native void Module_dropAllReferences(long jarg1, Module jarg1_);
  public final static native long unwrap__SWIG_1(long jarg1);
  public final static native long getLazyIRModule(long jarg1, long jarg2, long jarg3, LLVMContext jarg3_);
  public final static native long getLazyIRFileModule(String jarg1, long jarg2, long jarg3, LLVMContext jarg3_);
  public final static native long ParseIR(long jarg1, long jarg2, long jarg3, LLVMContext jarg3_);
  public final static native long ParseIRFile(String jarg1, long jarg2, long jarg3, LLVMContext jarg3_);
  public final static native long parse(String jarg1);
  public final static native int getModuleFunctionsSize(long jarg1, Module jarg1_);
  public final static native long getModuleFunctionsItem(long jarg1, Module jarg1_, int jarg2);
  public final static native int getBasicBlockInstructionsSize(long jarg1, BasicBlock jarg1_);
  public final static native long getBasicBlockInstructionsItem(long jarg1, BasicBlock jarg1_, int jarg2);
  public final static native long DISubrange_SWIGUpcast(long jarg1);
  public final static native long DIArray_SWIGUpcast(long jarg1);
  public final static native long DIScope_SWIGUpcast(long jarg1);
  public final static native long DIFile_SWIGUpcast(long jarg1);
  public final static native long DICompileUnit_SWIGUpcast(long jarg1);
  public final static native long DIEnumerator_SWIGUpcast(long jarg1);
  public final static native long DIType_SWIGUpcast(long jarg1);
  public final static native long DIBasicType_SWIGUpcast(long jarg1);
  public final static native long DIDerivedType_SWIGUpcast(long jarg1);
  public final static native long DICompositeType_SWIGUpcast(long jarg1);
  public final static native long DITemplateTypeParameter_SWIGUpcast(long jarg1);
  public final static native long DITemplateValueParameter_SWIGUpcast(long jarg1);
  public final static native long DISubprogram_SWIGUpcast(long jarg1);
  public final static native long DIGlobalVariable_SWIGUpcast(long jarg1);
  public final static native long DIVariable_SWIGUpcast(long jarg1);
  public final static native long DILexicalBlock_SWIGUpcast(long jarg1);
  public final static native long DILexicalBlockFile_SWIGUpcast(long jarg1);
  public final static native long DINameSpace_SWIGUpcast(long jarg1);
  public final static native long DILocation_SWIGUpcast(long jarg1);
  public final static native long DIObjCProperty_SWIGUpcast(long jarg1);
  public final static native long DIImportedModule_SWIGUpcast(long jarg1);
  public final static native long Function_SWIGUpcast(long jarg1);
}
