/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public final class LLVMAtomicRMWBinOp {
  public final static LLVMAtomicRMWBinOp LLVMAtomicRMWBinOpXchg = new LLVMAtomicRMWBinOp("LLVMAtomicRMWBinOpXchg");
  public final static LLVMAtomicRMWBinOp LLVMAtomicRMWBinOpAdd = new LLVMAtomicRMWBinOp("LLVMAtomicRMWBinOpAdd");
  public final static LLVMAtomicRMWBinOp LLVMAtomicRMWBinOpSub = new LLVMAtomicRMWBinOp("LLVMAtomicRMWBinOpSub");
  public final static LLVMAtomicRMWBinOp LLVMAtomicRMWBinOpAnd = new LLVMAtomicRMWBinOp("LLVMAtomicRMWBinOpAnd");
  public final static LLVMAtomicRMWBinOp LLVMAtomicRMWBinOpNand = new LLVMAtomicRMWBinOp("LLVMAtomicRMWBinOpNand");
  public final static LLVMAtomicRMWBinOp LLVMAtomicRMWBinOpOr = new LLVMAtomicRMWBinOp("LLVMAtomicRMWBinOpOr");
  public final static LLVMAtomicRMWBinOp LLVMAtomicRMWBinOpXor = new LLVMAtomicRMWBinOp("LLVMAtomicRMWBinOpXor");
  public final static LLVMAtomicRMWBinOp LLVMAtomicRMWBinOpMax = new LLVMAtomicRMWBinOp("LLVMAtomicRMWBinOpMax");
  public final static LLVMAtomicRMWBinOp LLVMAtomicRMWBinOpMin = new LLVMAtomicRMWBinOp("LLVMAtomicRMWBinOpMin");
  public final static LLVMAtomicRMWBinOp LLVMAtomicRMWBinOpUMax = new LLVMAtomicRMWBinOp("LLVMAtomicRMWBinOpUMax");
  public final static LLVMAtomicRMWBinOp LLVMAtomicRMWBinOpUMin = new LLVMAtomicRMWBinOp("LLVMAtomicRMWBinOpUMin");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static LLVMAtomicRMWBinOp swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + LLVMAtomicRMWBinOp.class + " with value " + swigValue);
  }

  private LLVMAtomicRMWBinOp(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private LLVMAtomicRMWBinOp(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private LLVMAtomicRMWBinOp(String swigName, LLVMAtomicRMWBinOp swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static LLVMAtomicRMWBinOp[] swigValues = { LLVMAtomicRMWBinOpXchg, LLVMAtomicRMWBinOpAdd, LLVMAtomicRMWBinOpSub, LLVMAtomicRMWBinOpAnd, LLVMAtomicRMWBinOpNand, LLVMAtomicRMWBinOpOr, LLVMAtomicRMWBinOpXor, LLVMAtomicRMWBinOpMax, LLVMAtomicRMWBinOpMin, LLVMAtomicRMWBinOpUMax, LLVMAtomicRMWBinOpUMin };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

