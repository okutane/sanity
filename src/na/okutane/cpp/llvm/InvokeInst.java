/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package na.okutane.cpp.llvm;

public class InvokeInst {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected InvokeInst(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(InvokeInst obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        bitreaderJNI.delete_InvokeInst(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static InvokeInst Create(Value Func, BasicBlock IfNormal, BasicBlock IfException, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t Args, SWIGTYPE_p_llvm__Twine NameStr, Instruction InsertBefore) {
    long cPtr = bitreaderJNI.InvokeInst_Create__SWIG_0(Value.getCPtr(Func), Func, BasicBlock.getCPtr(IfNormal), IfNormal, BasicBlock.getCPtr(IfException), IfException, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(Args), SWIGTYPE_p_llvm__Twine.getCPtr(NameStr), Instruction.getCPtr(InsertBefore), InsertBefore);
    return (cPtr == 0) ? null : new InvokeInst(cPtr, false);
  }

  public static InvokeInst Create(Value Func, BasicBlock IfNormal, BasicBlock IfException, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t Args, SWIGTYPE_p_llvm__Twine NameStr) {
    long cPtr = bitreaderJNI.InvokeInst_Create__SWIG_1(Value.getCPtr(Func), Func, BasicBlock.getCPtr(IfNormal), IfNormal, BasicBlock.getCPtr(IfException), IfException, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(Args), SWIGTYPE_p_llvm__Twine.getCPtr(NameStr));
    return (cPtr == 0) ? null : new InvokeInst(cPtr, false);
  }

  public static InvokeInst Create(Value Func, BasicBlock IfNormal, BasicBlock IfException, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t Args) {
    long cPtr = bitreaderJNI.InvokeInst_Create__SWIG_2(Value.getCPtr(Func), Func, BasicBlock.getCPtr(IfNormal), IfNormal, BasicBlock.getCPtr(IfException), IfException, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(Args));
    return (cPtr == 0) ? null : new InvokeInst(cPtr, false);
  }

  public static InvokeInst Create(Value Func, BasicBlock IfNormal, BasicBlock IfException, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t Args, SWIGTYPE_p_llvm__Twine NameStr, BasicBlock InsertAtEnd) {
    long cPtr = bitreaderJNI.InvokeInst_Create__SWIG_3(Value.getCPtr(Func), Func, BasicBlock.getCPtr(IfNormal), IfNormal, BasicBlock.getCPtr(IfException), IfException, SWIGTYPE_p_ArrayRefT_llvm__Value_p_t.getCPtr(Args), SWIGTYPE_p_llvm__Twine.getCPtr(NameStr), BasicBlock.getCPtr(InsertAtEnd), InsertAtEnd);
    return (cPtr == 0) ? null : new InvokeInst(cPtr, false);
  }

  public long getNumArgOperands() {
    return bitreaderJNI.InvokeInst_getNumArgOperands(swigCPtr, this);
  }

  public Value getArgOperand(long i) {
    long cPtr = bitreaderJNI.InvokeInst_getArgOperand(swigCPtr, this, i);
    return (cPtr == 0) ? null : new Value(cPtr, false);
  }

  public void setArgOperand(long i, Value v) {
    bitreaderJNI.InvokeInst_setArgOperand(swigCPtr, this, i, Value.getCPtr(v), v);
  }

  public SWIGTYPE_p_CallingConv__ID getCallingConv() {
    return new SWIGTYPE_p_CallingConv__ID(bitreaderJNI.InvokeInst_getCallingConv(swigCPtr, this), true);
  }

  public void setCallingConv(SWIGTYPE_p_CallingConv__ID CC) {
    bitreaderJNI.InvokeInst_setCallingConv(swigCPtr, this, SWIGTYPE_p_CallingConv__ID.getCPtr(CC));
  }

  public SWIGTYPE_p_AttributeSet getAttributes() {
    return new SWIGTYPE_p_AttributeSet(bitreaderJNI.InvokeInst_getAttributes(swigCPtr, this), false);
  }

  public void setAttributes(SWIGTYPE_p_AttributeSet Attrs) {
    bitreaderJNI.InvokeInst_setAttributes(swigCPtr, this, SWIGTYPE_p_AttributeSet.getCPtr(Attrs));
  }

  public void addAttribute(long i, SWIGTYPE_p_Attribute__AttrKind attr) {
    bitreaderJNI.InvokeInst_addAttribute(swigCPtr, this, i, SWIGTYPE_p_Attribute__AttrKind.getCPtr(attr));
  }

  public void removeAttribute(long i, SWIGTYPE_p_Attribute attr) {
    bitreaderJNI.InvokeInst_removeAttribute(swigCPtr, this, i, SWIGTYPE_p_Attribute.getCPtr(attr));
  }

  public boolean hasFnAttr(SWIGTYPE_p_Attribute__AttrKind A) {
    return bitreaderJNI.InvokeInst_hasFnAttr(swigCPtr, this, SWIGTYPE_p_Attribute__AttrKind.getCPtr(A));
  }

  public boolean paramHasAttr(long i, SWIGTYPE_p_Attribute__AttrKind A) {
    return bitreaderJNI.InvokeInst_paramHasAttr(swigCPtr, this, i, SWIGTYPE_p_Attribute__AttrKind.getCPtr(A));
  }

  public long getParamAlignment(long i) {
    return bitreaderJNI.InvokeInst_getParamAlignment(swigCPtr, this, i);
  }

  public boolean isNoInline() {
    return bitreaderJNI.InvokeInst_isNoInline(swigCPtr, this);
  }

  public void setIsNoInline() {
    bitreaderJNI.InvokeInst_setIsNoInline(swigCPtr, this);
  }

  public boolean doesNotAccessMemory() {
    return bitreaderJNI.InvokeInst_doesNotAccessMemory(swigCPtr, this);
  }

  public void setDoesNotAccessMemory() {
    bitreaderJNI.InvokeInst_setDoesNotAccessMemory(swigCPtr, this);
  }

  public boolean onlyReadsMemory() {
    return bitreaderJNI.InvokeInst_onlyReadsMemory(swigCPtr, this);
  }

  public void setOnlyReadsMemory() {
    bitreaderJNI.InvokeInst_setOnlyReadsMemory(swigCPtr, this);
  }

  public boolean doesNotReturn() {
    return bitreaderJNI.InvokeInst_doesNotReturn(swigCPtr, this);
  }

  public void setDoesNotReturn() {
    bitreaderJNI.InvokeInst_setDoesNotReturn(swigCPtr, this);
  }

  public boolean doesNotThrow() {
    return bitreaderJNI.InvokeInst_doesNotThrow(swigCPtr, this);
  }

  public void setDoesNotThrow() {
    bitreaderJNI.InvokeInst_setDoesNotThrow(swigCPtr, this);
  }

  public boolean hasStructRetAttr() {
    return bitreaderJNI.InvokeInst_hasStructRetAttr(swigCPtr, this);
  }

  public boolean hasByValArgument() {
    return bitreaderJNI.InvokeInst_hasByValArgument(swigCPtr, this);
  }

  public Function getCalledFunction() {
    long cPtr = bitreaderJNI.InvokeInst_getCalledFunction(swigCPtr, this);
    return (cPtr == 0) ? null : new Function(cPtr, false);
  }

  public Value getCalledValue() {
    long cPtr = bitreaderJNI.InvokeInst_getCalledValue__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new Value(cPtr, false);
  }

  public void setCalledFunction(Value Fn) {
    bitreaderJNI.InvokeInst_setCalledFunction(swigCPtr, this, Value.getCPtr(Fn), Fn);
  }

  public BasicBlock getNormalDest() {
    long cPtr = bitreaderJNI.InvokeInst_getNormalDest(swigCPtr, this);
    return (cPtr == 0) ? null : new BasicBlock(cPtr, false);
  }

  public BasicBlock getUnwindDest() {
    long cPtr = bitreaderJNI.InvokeInst_getUnwindDest(swigCPtr, this);
    return (cPtr == 0) ? null : new BasicBlock(cPtr, false);
  }

  public void setNormalDest(BasicBlock B) {
    bitreaderJNI.InvokeInst_setNormalDest(swigCPtr, this, BasicBlock.getCPtr(B), B);
  }

  public void setUnwindDest(BasicBlock B) {
    bitreaderJNI.InvokeInst_setUnwindDest(swigCPtr, this, BasicBlock.getCPtr(B), B);
  }

  public LandingPadInst getLandingPadInst() {
    long cPtr = bitreaderJNI.InvokeInst_getLandingPadInst(swigCPtr, this);
    return (cPtr == 0) ? null : new LandingPadInst(cPtr, false);
  }

  public BasicBlock getSuccessor(long i) {
    long cPtr = bitreaderJNI.InvokeInst_getSuccessor(swigCPtr, this, i);
    return (cPtr == 0) ? null : new BasicBlock(cPtr, false);
  }

  public void setSuccessor(long idx, BasicBlock NewSucc) {
    bitreaderJNI.InvokeInst_setSuccessor(swigCPtr, this, idx, BasicBlock.getCPtr(NewSucc), NewSucc);
  }

  public long getNumSuccessors() {
    return bitreaderJNI.InvokeInst_getNumSuccessors(swigCPtr, this);
  }

  public static boolean classof(Instruction I) {
    return bitreaderJNI.InvokeInst_classof__SWIG_0(Instruction.getCPtr(I), I);
  }

  public static boolean classof(Value V) {
    return bitreaderJNI.InvokeInst_classof__SWIG_1(Value.getCPtr(V), V);
  }

}
