CFG: testChar
#0000:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0001:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0002:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0003:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0004:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0006:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0007:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0008:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0009:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0010:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0011:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0012:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0013:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0014:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0015:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0016:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0017:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0018:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0019:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0020:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0021:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0022:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0023:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0024:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0025:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0026:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0027:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0028:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0029:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0030:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0031:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0032:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0033:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0034:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0035:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0036:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0037:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0038:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0039:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0040:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0041:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0042:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0043:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0044:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0045:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0046:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0047:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0048:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0049:	 noop: opcode 'LLVMTrunc' not supported <exit>
 - no source -

CFG: testCharCmp
#0000:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0001:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0002:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0003:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0004:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0006:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0007:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0008:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0009:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0010:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0011:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0012:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0013:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0014:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0015:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0016:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0017:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0018:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0019:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0020:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0021:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0022:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0023:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0024:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0025:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0026:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0027:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0028:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0029:	 noop: opcode 'LLVMTrunc' not supported <exit>
 - no source -

CFG: testCharLogical
#0000:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0001:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0002:	 if: tmp0 then #0003:	 else #0004:	
 - no source -
#0003:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0004:	 noop
 - no source -
#0006:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0007:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0008:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0009:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0010:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0011:	 if: tmp1 then #0012:	 else #0013:	
 - no source -
#0012:	 noop
 - no source -
#0014:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0015:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0016:	 noop: opcode 'LLVMTrunc' not supported <exit>
 - no source -
#0013:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0017:	 noop: opcode 'LLVMSExt' not supported next: #0012:	
 - no source -

CFG: testUChar
#0000:	 assign: tmp0 = *UC0 + *UC1
 - no source -
#0001:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0002:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0003:	 assign: tmp1 = *UC0 - *UC1
 - no source -
#0004:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0005:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0006:	 assign: tmp2 = *UC0 * *UC1
 - no source -
#0007:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0008:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0009:	 assign: tmp3 = *UC0 / *UC1
 - no source -
#0010:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0011:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0012:	 assign: tmp4 = *UC0 % *UC1
 - no source -
#0013:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0014:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0015:	 assign: tmp5 = *UC0 & *UC1
 - no source -
#0016:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0017:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0018:	 assign: tmp6 = *UC0 | *UC1
 - no source -
#0019:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0020:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0021:	 assign: tmp7 = *UC0 ^ *UC1
 - no source -
#0022:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0023:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0024:	 assign: tmp8 = *UC0 << *UC1
 - no source -
#0025:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0026:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0027:	 assign: tmp9 = *UC0 >> *UC1
 - no source -
#0028:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0029:	 noop: opcode 'LLVMTrunc' not supported <exit>
 - no source -

CFG: testUCharCmp
#0000:	 assign: tmp0 = *UC0 < *UC1
 - no source -
#0001:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0002:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0003:	 assign: tmp1 = *UC0 > *UC1
 - no source -
#0004:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0005:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0006:	 assign: tmp2 = *UC0 <= *UC1
 - no source -
#0007:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0008:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0009:	 assign: tmp3 = *UC0 >= *UC1
 - no source -
#0010:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0011:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0012:	 assign: tmp4 = *UC0 == *UC1
 - no source -
#0013:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0014:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0015:	 assign: tmp5 = *UC0 != *UC1
 - no source -
#0016:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0017:	 noop: opcode 'LLVMTrunc' not supported <exit>
 - no source -

CFG: testUCharLogical
#0000:	 assign: tmp0 = *UC0 != 0
 - no source -
#0001:	 if: tmp0 then #0002:	 else #0003:	
 - no source -
#0002:	 assign: tmp1 = *UC1 != 0
 - no source -
#0003:	 noop
 - no source -
#0004:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0005:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0006:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0007:	 assign: tmp2 = *UC0 != 0
 - no source -
#0008:	 if: tmp2 then #0009:	 else #0010:	
 - no source -
#0009:	 noop
 - no source -
#0011:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0012:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0013:	 noop: opcode 'LLVMTrunc' not supported <exit>
 - no source -
#0010:	 assign: tmp3 = *UC1 != 0 next: #0009:	
 - no source -

CFG: testShort
#0000:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0001:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0002:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0003:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0004:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0006:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0007:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0008:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0009:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0010:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0011:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0012:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0013:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0014:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0015:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0016:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0017:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0018:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0019:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0020:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0021:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0022:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0023:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0024:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0025:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0026:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0027:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0028:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0029:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0030:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0031:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0032:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0033:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0034:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0035:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0036:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0037:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0038:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0039:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0040:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0041:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0042:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0043:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0044:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0045:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0046:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0047:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0048:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0049:	 noop: opcode 'LLVMTrunc' not supported <exit>
 - no source -

CFG: testShortCmp
#0000:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0001:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0002:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0003:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0004:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0006:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0007:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0008:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0009:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0010:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0011:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0012:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0013:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0014:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0015:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0016:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0017:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0018:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0019:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0020:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0021:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0022:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0023:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0024:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0025:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0026:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0027:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0028:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0029:	 noop: opcode 'LLVMTrunc' not supported <exit>
 - no source -

CFG: testShortLogical
#0000:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0001:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0002:	 if: tmp0 then #0003:	 else #0004:	
 - no source -
#0003:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0004:	 noop
 - no source -
#0006:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0007:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0008:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0009:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0010:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0011:	 if: tmp1 then #0012:	 else #0013:	
 - no source -
#0012:	 noop
 - no source -
#0014:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0015:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0016:	 noop: opcode 'LLVMTrunc' not supported <exit>
 - no source -
#0013:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0017:	 noop: opcode 'LLVMSExt' not supported next: #0012:	
 - no source -

CFG: testUShort
#0000:	 assign: tmp0 = *US0 + *US1
 - no source -
#0001:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0002:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0003:	 assign: tmp1 = *US0 - *US1
 - no source -
#0004:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0005:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0006:	 assign: tmp2 = *US0 * *US1
 - no source -
#0007:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0008:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0009:	 assign: tmp3 = *US0 / *US1
 - no source -
#0010:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0011:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0012:	 assign: tmp4 = *US0 % *US1
 - no source -
#0013:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0014:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0015:	 assign: tmp5 = *US0 & *US1
 - no source -
#0016:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0017:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0018:	 assign: tmp6 = *US0 | *US1
 - no source -
#0019:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0020:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0021:	 assign: tmp7 = *US0 ^ *US1
 - no source -
#0022:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0023:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0024:	 assign: tmp8 = *US0 << *US1
 - no source -
#0025:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0026:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0027:	 assign: tmp9 = *US0 >> *US1
 - no source -
#0028:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0029:	 noop: opcode 'LLVMTrunc' not supported <exit>
 - no source -

CFG: testUShortCmp
#0000:	 assign: tmp0 = *US0 < *US1
 - no source -
#0001:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0002:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0003:	 assign: tmp1 = *US0 > *US1
 - no source -
#0004:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0005:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0006:	 assign: tmp2 = *US0 <= *US1
 - no source -
#0007:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0008:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0009:	 assign: tmp3 = *US0 >= *US1
 - no source -
#0010:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0011:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0012:	 assign: tmp4 = *US0 == *US1
 - no source -
#0013:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0014:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0015:	 assign: tmp5 = *US0 != *US1
 - no source -
#0016:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0017:	 noop: opcode 'LLVMTrunc' not supported <exit>
 - no source -

CFG: testUShortLogical
#0000:	 assign: tmp0 = *US0 != 0
 - no source -
#0001:	 if: tmp0 then #0002:	 else #0003:	
 - no source -
#0002:	 assign: tmp1 = *US1 != 0
 - no source -
#0003:	 noop
 - no source -
#0004:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0005:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0006:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0007:	 assign: tmp2 = *US0 != 0
 - no source -
#0008:	 if: tmp2 then #0009:	 else #0010:	
 - no source -
#0009:	 noop
 - no source -
#0011:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0012:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0013:	 noop: opcode 'LLVMTrunc' not supported <exit>
 - no source -
#0010:	 assign: tmp3 = *US1 != 0 next: #0009:	
 - no source -

CFG: testInt
#0000:	 assign: tmp0 = *I0 + *I1
 - no source -
#0001:	 assign: *IR = tmp0
 - no source -
#0002:	 assign: tmp1 = *I0 - *I1
 - no source -
#0003:	 assign: *IR = tmp1
 - no source -
#0004:	 assign: tmp2 = *I0 * *I1
 - no source -
#0005:	 assign: *IR = tmp2
 - no source -
#0006:	 assign: tmp3 = *I0 / *I1
 - no source -
#0007:	 assign: *IR = tmp3
 - no source -
#0008:	 assign: tmp4 = *I0 % *I1
 - no source -
#0009:	 assign: *IR = tmp4
 - no source -
#0010:	 assign: tmp5 = *I0 & *I1
 - no source -
#0011:	 assign: *IR = tmp5
 - no source -
#0012:	 assign: tmp6 = *I0 | *I1
 - no source -
#0013:	 assign: *IR = tmp6
 - no source -
#0014:	 assign: tmp7 = *I0 ^ *I1
 - no source -
#0015:	 assign: *IR = tmp7
 - no source -
#0016:	 assign: tmp8 = *I0 << *I1
 - no source -
#0017:	 assign: *IR = tmp8
 - no source -
#0018:	 assign: tmp9 = *I0 >> *I1
 - no source -
#0019:	 assign: *IR = tmp9 <exit>
 - no source -

CFG: testIntCmp
#0000:	 assign: tmp0 = *I0 < *I1
 - no source -
#0001:	 assign: *IR = tmp0
 - no source -
#0002:	 assign: tmp1 = *I0 > *I1
 - no source -
#0003:	 assign: *IR = tmp1
 - no source -
#0004:	 assign: tmp2 = *I0 <= *I1
 - no source -
#0005:	 assign: *IR = tmp2
 - no source -
#0006:	 assign: tmp3 = *I0 >= *I1
 - no source -
#0007:	 assign: *IR = tmp3
 - no source -
#0008:	 assign: tmp4 = *I0 == *I1
 - no source -
#0009:	 assign: *IR = tmp4
 - no source -
#0010:	 assign: tmp5 = *I0 != *I1
 - no source -
#0011:	 assign: *IR = tmp5 <exit>
 - no source -

CFG: testIntLogical
#0000:	 assign: tmp0 = *I0 != 0
 - no source -
#0001:	 if: tmp0 then #0002:	 else #0003:	
 - no source -
#0002:	 assign: tmp1 = *I1 != 0
 - no source -
#0003:	 noop
 - no source -
#0004:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0005:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0006:	 assign: tmp2 = *I0 != 0
 - no source -
#0007:	 if: tmp2 then #0008:	 else #0009:	
 - no source -
#0008:	 noop
 - no source -
#0010:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0011:	 noop: opcode 'LLVMPHI' not supported <exit>
 - no source -
#0009:	 assign: tmp3 = *I1 != 0 next: #0008:	
 - no source -

CFG: testUInt
#0000:	 assign: tmp0 = *UI0 + *UI1
 - no source -
#0001:	 assign: *UIR = tmp0
 - no source -
#0002:	 assign: tmp1 = *UI0 - *UI1
 - no source -
#0003:	 assign: *UIR = tmp1
 - no source -
#0004:	 assign: tmp2 = *UI0 * *UI1
 - no source -
#0005:	 assign: *UIR = tmp2
 - no source -
#0006:	 noop: opcode 'LLVMUDiv' not supported
 - no source -
#0007:	 noop: opcode 'LLVMUDiv' not supported
 - no source -
#0008:	 noop: opcode 'LLVMURem' not supported
 - no source -
#0009:	 noop: opcode 'LLVMURem' not supported
 - no source -
#0010:	 assign: tmp3 = *UI0 & *UI1
 - no source -
#0011:	 assign: *UIR = tmp3
 - no source -
#0012:	 assign: tmp4 = *UI0 | *UI1
 - no source -
#0013:	 assign: *UIR = tmp4
 - no source -
#0014:	 assign: tmp5 = *UI0 ^ *UI1
 - no source -
#0015:	 assign: *UIR = tmp5
 - no source -
#0016:	 assign: tmp6 = *UI0 << *UI1
 - no source -
#0017:	 assign: *UIR = tmp6
 - no source -
#0018:	 noop: opcode 'LLVMLShr' not supported
 - no source -
#0019:	 noop: opcode 'LLVMLShr' not supported <exit>
 - no source -

CFG: testUIntCmp
#0000:	 assign: tmp0 = *UI0 < *UI1
 - no source -
#0001:	 assign: *UIR = tmp0
 - no source -
#0002:	 assign: tmp1 = *UI0 > *UI1
 - no source -
#0003:	 assign: *UIR = tmp1
 - no source -
#0004:	 assign: tmp2 = *UI0 <= *UI1
 - no source -
#0005:	 assign: *UIR = tmp2
 - no source -
#0006:	 assign: tmp3 = *UI0 >= *UI1
 - no source -
#0007:	 assign: *UIR = tmp3
 - no source -
#0008:	 assign: tmp4 = *UI0 == *UI1
 - no source -
#0009:	 assign: *UIR = tmp4
 - no source -
#0010:	 assign: tmp5 = *UI0 != *UI1
 - no source -
#0011:	 assign: *UIR = tmp5 <exit>
 - no source -

CFG: testUIntLogical
#0000:	 assign: tmp0 = *UI0 != 0
 - no source -
#0001:	 if: tmp0 then #0002:	 else #0003:	
 - no source -
#0002:	 assign: tmp1 = *UI1 != 0
 - no source -
#0003:	 noop
 - no source -
#0004:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0005:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0006:	 assign: tmp2 = *UI0 != 0
 - no source -
#0007:	 if: tmp2 then #0008:	 else #0009:	
 - no source -
#0008:	 noop
 - no source -
#0010:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0011:	 noop: opcode 'LLVMPHI' not supported <exit>
 - no source -
#0009:	 assign: tmp3 = *UI1 != 0 next: #0008:	
 - no source -

CFG: testLong
#0000:	 assign: tmp0 = *L0 + *L1
 - no source -
#0001:	 assign: *LR = tmp0
 - no source -
#0002:	 assign: tmp1 = *L0 - *L1
 - no source -
#0003:	 assign: *LR = tmp1
 - no source -
#0004:	 assign: tmp2 = *L0 * *L1
 - no source -
#0005:	 assign: *LR = tmp2
 - no source -
#0006:	 assign: tmp3 = *L0 / *L1
 - no source -
#0007:	 assign: *LR = tmp3
 - no source -
#0008:	 assign: tmp4 = *L0 % *L1
 - no source -
#0009:	 assign: *LR = tmp4
 - no source -
#0010:	 assign: tmp5 = *L0 & *L1
 - no source -
#0011:	 assign: *LR = tmp5
 - no source -
#0012:	 assign: tmp6 = *L0 | *L1
 - no source -
#0013:	 assign: *LR = tmp6
 - no source -
#0014:	 assign: tmp7 = *L0 ^ *L1
 - no source -
#0015:	 assign: *LR = tmp7
 - no source -
#0016:	 assign: tmp8 = *L0 << *L1
 - no source -
#0017:	 assign: *LR = tmp8
 - no source -
#0018:	 assign: tmp9 = *L0 >> *L1
 - no source -
#0019:	 assign: *LR = tmp9 <exit>
 - no source -

CFG: testLongCmp
#0000:	 assign: tmp0 = *L0 < *L1
 - no source -
#0001:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0002:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0003:	 assign: tmp1 = *L0 > *L1
 - no source -
#0004:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0006:	 assign: tmp2 = *L0 <= *L1
 - no source -
#0007:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0008:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0009:	 assign: tmp3 = *L0 >= *L1
 - no source -
#0010:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0011:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0012:	 assign: tmp4 = *L0 == *L1
 - no source -
#0013:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0014:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0015:	 assign: tmp5 = *L0 != *L1
 - no source -
#0016:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0017:	 noop: opcode 'LLVMSExt' not supported <exit>
 - no source -

CFG: testLongLogical
#0000:	 assign: tmp0 = *L0 != 0
 - no source -
#0001:	 if: tmp0 then #0002:	 else #0003:	
 - no source -
#0002:	 assign: tmp1 = *L1 != 0
 - no source -
#0003:	 noop
 - no source -
#0004:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0006:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0007:	 assign: tmp2 = *L0 != 0
 - no source -
#0008:	 if: tmp2 then #0009:	 else #0010:	
 - no source -
#0009:	 noop
 - no source -
#0011:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0012:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0013:	 noop: opcode 'LLVMSExt' not supported <exit>
 - no source -
#0010:	 assign: tmp3 = *L1 != 0 next: #0009:	
 - no source -

CFG: testULong
#0000:	 assign: tmp0 = *UL0 + *UL1
 - no source -
#0001:	 assign: *ULR = tmp0
 - no source -
#0002:	 assign: tmp1 = *UL0 - *UL1
 - no source -
#0003:	 assign: *ULR = tmp1
 - no source -
#0004:	 assign: tmp2 = *UL0 * *UL1
 - no source -
#0005:	 assign: *ULR = tmp2
 - no source -
#0006:	 noop: opcode 'LLVMUDiv' not supported
 - no source -
#0007:	 noop: opcode 'LLVMUDiv' not supported
 - no source -
#0008:	 noop: opcode 'LLVMURem' not supported
 - no source -
#0009:	 noop: opcode 'LLVMURem' not supported
 - no source -
#0010:	 assign: tmp3 = *UL0 & *UL1
 - no source -
#0011:	 assign: *ULR = tmp3
 - no source -
#0012:	 assign: tmp4 = *UL0 | *UL1
 - no source -
#0013:	 assign: *ULR = tmp4
 - no source -
#0014:	 assign: tmp5 = *UL0 ^ *UL1
 - no source -
#0015:	 assign: *ULR = tmp5
 - no source -
#0016:	 assign: tmp6 = *UL0 << *UL1
 - no source -
#0017:	 assign: *ULR = tmp6
 - no source -
#0018:	 noop: opcode 'LLVMLShr' not supported
 - no source -
#0019:	 noop: opcode 'LLVMLShr' not supported <exit>
 - no source -

CFG: testULongCmp
#0000:	 assign: tmp0 = *UL0 < *UL1
 - no source -
#0001:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0002:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0003:	 assign: tmp1 = *UL0 > *UL1
 - no source -
#0004:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0006:	 assign: tmp2 = *UL0 <= *UL1
 - no source -
#0007:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0008:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0009:	 assign: tmp3 = *UL0 >= *UL1
 - no source -
#0010:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0011:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0012:	 assign: tmp4 = *UL0 == *UL1
 - no source -
#0013:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0014:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0015:	 assign: tmp5 = *UL0 != *UL1
 - no source -
#0016:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0017:	 noop: opcode 'LLVMSExt' not supported <exit>
 - no source -

CFG: testULongLogical
#0000:	 assign: tmp0 = *UL0 != 0
 - no source -
#0001:	 if: tmp0 then #0002:	 else #0003:	
 - no source -
#0002:	 assign: tmp1 = *UL1 != 0
 - no source -
#0003:	 noop
 - no source -
#0004:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0006:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0007:	 assign: tmp2 = *UL0 != 0
 - no source -
#0008:	 if: tmp2 then #0009:	 else #0010:	
 - no source -
#0009:	 noop
 - no source -
#0011:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0012:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0013:	 noop: opcode 'LLVMSExt' not supported <exit>
 - no source -
#0010:	 assign: tmp3 = *UL1 != 0 next: #0009:	
 - no source -

CFG: testFloat
#0000:	 assign: tmp0 = *F0 + *F1
 - no source -
#0001:	 assign: *FR = tmp0
 - no source -
#0002:	 assign: tmp1 = *F0 - *F1
 - no source -
#0003:	 assign: *FR = tmp1
 - no source -
#0004:	 assign: tmp2 = *F0 * *F1
 - no source -
#0005:	 assign: *FR = tmp2
 - no source -
#0006:	 assign: tmp3 = *F0 / *F1
 - no source -
#0007:	 assign: *FR = tmp3 <exit>
 - no source -

CFG: testFloatCmp
#0000:	 assign: tmp0 = *F0 < *F1
 - no source -
#0001:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0002:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0003:	 assign: tmp1 = *F0 > *F1
 - no source -
#0004:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0006:	 assign: tmp2 = *F0 <= *F1
 - no source -
#0007:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0008:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0009:	 assign: tmp3 = *F0 >= *F1
 - no source -
#0010:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0011:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0012:	 assign: tmp4 = *F0 == *F1
 - no source -
#0013:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0014:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0015:	 assign: tmp5 = *F0 != *F1
 - no source -
#0016:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0017:	 noop: opcode 'LLVMSIToFP' not supported <exit>
 - no source -

CFG: testFloatLogical
#0000:	 assign: tmp0 = *F0 != 0.0
 - no source -
#0001:	 if: tmp0 then #0002:	 else #0003:	
 - no source -
#0002:	 assign: tmp1 = *F1 != 0.0
 - no source -
#0003:	 noop
 - no source -
#0004:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0006:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0007:	 assign: tmp2 = *F0 != 0.0
 - no source -
#0008:	 if: tmp2 then #0009:	 else #0010:	
 - no source -
#0009:	 noop
 - no source -
#0011:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0012:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0013:	 noop: opcode 'LLVMSIToFP' not supported <exit>
 - no source -
#0010:	 assign: tmp3 = *F1 != 0.0 next: #0009:	
 - no source -

CFG: testDouble
#0000:	 assign: tmp0 = *D0 + *D1
 - no source -
#0001:	 assign: *DR = tmp0
 - no source -
#0002:	 assign: tmp1 = *D0 - *D1
 - no source -
#0003:	 assign: *DR = tmp1
 - no source -
#0004:	 assign: tmp2 = *D0 * *D1
 - no source -
#0005:	 assign: *DR = tmp2
 - no source -
#0006:	 assign: tmp3 = *D0 / *D1
 - no source -
#0007:	 assign: *DR = tmp3 <exit>
 - no source -

CFG: testDoubleCmp
#0000:	 assign: tmp0 = *D0 < *D1
 - no source -
#0001:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0002:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0003:	 assign: tmp1 = *D0 > *D1
 - no source -
#0004:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0006:	 assign: tmp2 = *D0 <= *D1
 - no source -
#0007:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0008:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0009:	 assign: tmp3 = *D0 >= *D1
 - no source -
#0010:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0011:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0012:	 assign: tmp4 = *D0 == *D1
 - no source -
#0013:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0014:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0015:	 assign: tmp5 = *D0 != *D1
 - no source -
#0016:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0017:	 noop: opcode 'LLVMSIToFP' not supported <exit>
 - no source -

CFG: testDoubleLogical
#0000:	 assign: tmp0 = *D0 != 0.0
 - no source -
#0001:	 if: tmp0 then #0002:	 else #0003:	
 - no source -
#0002:	 assign: tmp1 = *D1 != 0.0
 - no source -
#0003:	 noop
 - no source -
#0004:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0006:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0007:	 assign: tmp2 = *D0 != 0.0
 - no source -
#0008:	 if: tmp2 then #0009:	 else #0010:	
 - no source -
#0009:	 noop
 - no source -
#0011:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0012:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0013:	 noop: opcode 'LLVMSIToFP' not supported <exit>
 - no source -
#0010:	 assign: tmp3 = *D1 != 0.0 next: #0009:	
 - no source -

CFG: testLongDouble
#0000:	 assign: tmp0 = *LD0 + *LD1
 - no source -
#0001:	 assign: *LDR = tmp0
 - no source -
#0002:	 assign: tmp1 = *LD0 - *LD1
 - no source -
#0003:	 assign: *LDR = tmp1
 - no source -
#0004:	 assign: tmp2 = *LD0 * *LD1
 - no source -
#0005:	 assign: *LDR = tmp2
 - no source -
#0006:	 assign: tmp3 = *LD0 / *LD1
 - no source -
#0007:	 assign: *LDR = tmp3 <exit>
 - no source -

CFG: testLongDoubleCmp
#0000:	 assign: tmp0 = *LD0 < *LD1
 - no source -
#0001:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0002:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0003:	 assign: tmp1 = *LD0 > *LD1
 - no source -
#0004:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0006:	 assign: tmp2 = *LD0 <= *LD1
 - no source -
#0007:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0008:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0009:	 assign: tmp3 = *LD0 >= *LD1
 - no source -
#0010:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0011:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0012:	 assign: tmp4 = *LD0 == *LD1
 - no source -
#0013:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0014:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0015:	 assign: tmp5 = *LD0 != *LD1
 - no source -
#0016:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0017:	 noop: opcode 'LLVMSIToFP' not supported <exit>
 - no source -

CFG: testLongDoubleLogical
#0000:	 assign: tmp0 = *LD0 != 0.0
 - no source -
#0001:	 if: tmp0 then #0002:	 else #0003:	
 - no source -
#0002:	 assign: tmp1 = *LD1 != 0.0
 - no source -
#0003:	 noop
 - no source -
#0004:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0005:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0006:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0007:	 assign: tmp2 = *LD0 != 0.0
 - no source -
#0008:	 if: tmp2 then #0009:	 else #0010:	
 - no source -
#0009:	 noop
 - no source -
#0011:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0012:	 noop: opcode 'LLVMSIToFP' not supported
 - no source -
#0013:	 noop: opcode 'LLVMSIToFP' not supported <exit>
 - no source -
#0010:	 assign: tmp3 = *LD1 != 0.0 next: #0009:	
 - no source -

CFG: <module init>
#0000:	 assign: *C0 = 0
 - no source -
#0001:	 assign: *C1 = 0
 - no source -
#0002:	 assign: *CR = 0
 - no source -
#0003:	 assign: *UC0 = 0
 - no source -
#0004:	 assign: *UC1 = 0
 - no source -
#0005:	 assign: *UCR = 0
 - no source -
#0006:	 assign: *S0 = 0
 - no source -
#0007:	 assign: *S1 = 0
 - no source -
#0008:	 assign: *SR = 0
 - no source -
#0009:	 assign: *US0 = 0
 - no source -
#0010:	 assign: *US1 = 0
 - no source -
#0011:	 assign: *USR = 0
 - no source -
#0012:	 assign: *I0 = 0
 - no source -
#0013:	 assign: *I1 = 0
 - no source -
#0014:	 assign: *IR = 0
 - no source -
#0015:	 assign: *UI0 = 0
 - no source -
#0016:	 assign: *UI1 = 0
 - no source -
#0017:	 assign: *UIR = 0
 - no source -
#0018:	 assign: *L0 = 0
 - no source -
#0019:	 assign: *L1 = 0
 - no source -
#0020:	 assign: *LR = 0
 - no source -
#0021:	 assign: *UL0 = 0
 - no source -
#0022:	 assign: *UL1 = 0
 - no source -
#0023:	 assign: *ULR = 0
 - no source -
#0024:	 assign: *F0 = 0.0
 - no source -
#0025:	 assign: *F1 = 0.0
 - no source -
#0026:	 assign: *FR = 0.0
 - no source -
#0027:	 assign: *D0 = 0.0
 - no source -
#0028:	 assign: *D1 = 0.0
 - no source -
#0029:	 assign: *DR = 0.0
 - no source -
#0030:	 assign: *LD0 = 0.0
 - no source -
#0031:	 assign: *LD1 = 0.0
 - no source -
#0032:	 assign: *LDR = 0.0 <exit>
 - no source -

