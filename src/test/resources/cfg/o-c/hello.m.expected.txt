CFG: _OSSwapInt16
#0000:	 assign: *tmp0 = _data
 - no source -
#0001:	 assign: tmp1 = *tmp0 << 8
 - no source -
#0002:	 assign: tmp2 = *tmp0 >> 8
 - no source -
#0003:	 assign: tmp3 = tmp1 | tmp2
 - no source -
#0004:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0005:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _OSSwapInt32
#0000:	 assign: *tmp0 = _data
 - no source -
#0001:	 call: tmp1 = llvm.bswap.i32(*tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _OSSwapInt64
#0000:	 assign: *tmp0 = _data
 - no source -
#0001:	 call: tmp1 = llvm.bswap.i64(*tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: __darwin_fd_isset
#0000:	 assign: *tmp0 = _n
 - no source -
#0001:	 assign: *tmp1 = _p
 - no source -
#0002:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0003:	 noop: opcode 'LLVMUDiv' not supported
 - no source -
#0004:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0005:	 noop: opcode 'LLVMURem' not supported
 - no source -
#0006:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0007:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0008:	 noop: opcode 'LLVMUDiv' not supported
 - no source -
#0009:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFRangeMake
#0000:	 assign: *tmp0 = loc
 - no source -
#0001:	 assign: *tmp1 = len
 - no source -
#0002:	 assign: *(tmp2.field0) = *tmp0
 - no source -
#0003:	 assign: *(tmp2.field1) = *tmp1
 - no source -
#0004:	 assign: tmp3 = tmp4
 - no source -
#0005:	 assign: tmp5 = tmp2
 - no source -
#0006:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp3, tmp5, 16, 8, 0)
 - no source -
#0007:	 assign: tmp6 = tmp4
 - no source -
#0008:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: OSReadSwapInt16
#0000:	 assign: *tmp0 = base
 - no source -
#0001:	 assign: *tmp1 = byteOffset
 - no source -
#0002:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0003:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0004:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0005:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0006:	 call: tmp2 = _OSSwapInt16(*tmp3)
 - no source -
#0007:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: OSReadSwapInt32
#0000:	 assign: *tmp0 = base
 - no source -
#0001:	 assign: *tmp1 = byteOffset
 - no source -
#0002:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0003:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0004:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0005:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0006:	 call: tmp2 = _OSSwapInt32(*tmp3)
 - no source -
#0007:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: OSReadSwapInt64
#0000:	 assign: *tmp0 = base
 - no source -
#0001:	 assign: *tmp1 = byteOffset
 - no source -
#0002:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0003:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0004:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0005:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0006:	 call: tmp2 = _OSSwapInt64(*tmp3)
 - no source -
#0007:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: OSWriteSwapInt16
#0000:	 assign: *tmp0 = base
 - no source -
#0001:	 assign: *tmp1 = byteOffset
 - no source -
#0002:	 assign: *tmp2 = data
 - no source -
#0003:	 call: tmp3 = _OSSwapInt16(*tmp2)
 - no source -
#0004:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0005:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0006:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0007:	 noop: opcode 'LLVMIntToPtr' not supported <exit>
 - no source -

CFG: OSWriteSwapInt32
#0000:	 assign: *tmp0 = base
 - no source -
#0001:	 assign: *tmp1 = byteOffset
 - no source -
#0002:	 assign: *tmp2 = data
 - no source -
#0003:	 call: tmp3 = _OSSwapInt32(*tmp2)
 - no source -
#0004:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0005:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0006:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0007:	 noop: opcode 'LLVMIntToPtr' not supported <exit>
 - no source -

CFG: OSWriteSwapInt64
#0000:	 assign: *tmp0 = base
 - no source -
#0001:	 assign: *tmp1 = byteOffset
 - no source -
#0002:	 assign: *tmp2 = data
 - no source -
#0003:	 call: tmp3 = _OSSwapInt64(*tmp2)
 - no source -
#0004:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0005:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0006:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0007:	 noop: opcode 'LLVMIntToPtr' not supported <exit>
 - no source -

CFG: OSHostByteOrder
#0000:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _OSReadInt16
#0000:	 assign: *tmp0 = base
 - no source -
#0001:	 assign: *tmp1 = byteOffset
 - no source -
#0002:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0003:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0004:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0005:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _OSReadInt32
#0000:	 assign: *tmp0 = base
 - no source -
#0001:	 assign: *tmp1 = byteOffset
 - no source -
#0002:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0003:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0004:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0005:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _OSReadInt64
#0000:	 assign: *tmp0 = base
 - no source -
#0001:	 assign: *tmp1 = byteOffset
 - no source -
#0002:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0003:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0004:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0005:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _OSWriteInt16
#0000:	 assign: *tmp0 = base
 - no source -
#0001:	 assign: *tmp1 = byteOffset
 - no source -
#0002:	 assign: *tmp2 = data
 - no source -
#0003:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0004:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0005:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0006:	 noop: opcode 'LLVMIntToPtr' not supported <exit>
 - no source -

CFG: _OSWriteInt32
#0000:	 assign: *tmp0 = base
 - no source -
#0001:	 assign: *tmp1 = byteOffset
 - no source -
#0002:	 assign: *tmp2 = data
 - no source -
#0003:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0004:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0005:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0006:	 noop: opcode 'LLVMIntToPtr' not supported <exit>
 - no source -

CFG: _OSWriteInt64
#0000:	 assign: *tmp0 = base
 - no source -
#0001:	 assign: *tmp1 = byteOffset
 - no source -
#0002:	 assign: *tmp2 = data
 - no source -
#0003:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0004:	 noop: opcode 'LLVMPtrToInt' not supported
 - no source -
#0005:	 noop: opcode 'LLVMIntToPtr' not supported
 - no source -
#0006:	 noop: opcode 'LLVMIntToPtr' not supported <exit>
 - no source -

CFG: CFByteOrderGetCurrent
#0000:	 call: tmp0 = OSHostByteOrder()
 - no source -
#0001:	 assign: *tmp1 = tmp0
 - no source -
#0002:	 switch: *tmp1 default #0003:	 1 -> #0004:	 2 -> #0005:	
 - no source -
#0003:	 assign: *tmp2 = 0
 - no source -
#0006:	 noop
 - no source -
#0007:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -
#0004:	 assign: *tmp2 = 1 next: #0006:	
 - no source -
#0005:	 assign: *tmp2 = 2 next: #0006:	
 - no source -

CFG: CFSwapInt16
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 call: tmp1 = _OSSwapInt16(*tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0003:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt32
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 call: tmp1 = _OSSwapInt32(*tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt64
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 call: tmp1 = _OSSwapInt64(*tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt16BigToHost
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 call: tmp1 = _OSSwapInt16(*tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0003:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt32BigToHost
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 call: tmp1 = _OSSwapInt32(*tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt64BigToHost
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 call: tmp1 = _OSSwapInt64(*tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt16HostToBig
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 call: tmp1 = _OSSwapInt16(*tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0003:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt32HostToBig
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 call: tmp1 = _OSSwapInt32(*tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt64HostToBig
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 call: tmp1 = _OSSwapInt64(*tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt16LittleToHost
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt32LittleToHost
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt64LittleToHost
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt16HostToLittle
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt32HostToLittle
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CFSwapInt64HostToLittle
#0000:	 assign: *tmp0 = arg
 - no source -
#0001:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: NSSwapInt
#0000:	 assign: *tmp0 = inv
 - no source -
#0001:	 call: tmp1 = CFSwapInt32(*tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: NSSwapLongLong
#0000:	 assign: *tmp0 = inv
 - no source -
#0001:	 call: tmp1 = CFSwapInt64(*tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: NSConvertHostFloatToSwapped
#0000:	 assign: *tmp0 = x
 - no source -
#0001:	 assign: tmp1 = tmp0
 - no source -
#0002:	 assign: tmp2 = tmp1
 - no source -
#0003:	 assign: tmp3 = tmp4
 - no source -
#0004:	 assign: tmp5 = tmp2
 - no source -
#0005:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp3, tmp5, 4, 4, 0)
 - no source -
#0006:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: NSConvertSwappedFloatToHost
#0000:	 assign: *(tmp0.field0) = x.coerce
 - no source -
#0001:	 assign: tmp1 = tmp0
 - no source -
#0002:	 assign: tmp2 = tmp1
 - no source -
#0003:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: NSConvertHostDoubleToSwapped
#0000:	 assign: *tmp0 = x
 - no source -
#0001:	 assign: tmp1 = tmp0
 - no source -
#0002:	 assign: tmp2 = tmp1
 - no source -
#0003:	 assign: tmp3 = tmp4
 - no source -
#0004:	 assign: tmp5 = tmp2
 - no source -
#0005:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp3, tmp5, 8, 8, 0)
 - no source -
#0006:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: NSConvertSwappedDoubleToHost
#0000:	 assign: *(tmp0.field0) = x.coerce
 - no source -
#0001:	 assign: tmp1 = tmp0
 - no source -
#0002:	 assign: tmp2 = tmp1
 - no source -
#0003:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: NSSwapFloat
#0000:	 assign: *(tmp0.field0) = x.coerce
 - no source -
#0001:	 call: tmp1 = NSSwapInt(*(tmp0.field0))
 - no source -
#0002:	 assign: *(tmp0.field0) = tmp1
 - no source -
#0003:	 assign: tmp2 = tmp3
 - no source -
#0004:	 assign: tmp4 = tmp0
 - no source -
#0005:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp2, tmp4, 4, 4, 0)
 - no source -
#0006:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: NSSwapDouble
#0000:	 assign: *(tmp0.field0) = x.coerce
 - no source -
#0001:	 call: tmp1 = NSSwapLongLong(*(tmp0.field0))
 - no source -
#0002:	 assign: *(tmp0.field0) = tmp1
 - no source -
#0003:	 assign: tmp2 = tmp3
 - no source -
#0004:	 assign: tmp4 = tmp0
 - no source -
#0005:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp2, tmp4, 8, 8, 0)
 - no source -
#0006:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CGPointMake
#0000:	 assign: *tmp0 = x
 - no source -
#0001:	 assign: *tmp1 = y
 - no source -
#0002:	 assign: *(tmp2.x) = *tmp0
 - no source -
#0003:	 assign: *(tmp2.y) = *tmp1
 - no source -
#0004:	 assign: tmp3 = tmp4
 - no source -
#0005:	 assign: tmp5 = tmp2
 - no source -
#0006:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp3, tmp5, 16, 8, 0)
 - no source -
#0007:	 assign: tmp6 = tmp4
 - no source -
#0008:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CGSizeMake
#0000:	 assign: *tmp0 = width
 - no source -
#0001:	 assign: *tmp1 = height
 - no source -
#0002:	 assign: *(tmp2.width) = *tmp0
 - no source -
#0003:	 assign: *(tmp2.height) = *tmp1
 - no source -
#0004:	 assign: tmp3 = tmp4
 - no source -
#0005:	 assign: tmp5 = tmp2
 - no source -
#0006:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp3, tmp5, 16, 8, 0)
 - no source -
#0007:	 assign: tmp6 = tmp4
 - no source -
#0008:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CGVectorMake
#0000:	 assign: *tmp0 = dx
 - no source -
#0001:	 assign: *tmp1 = dy
 - no source -
#0002:	 assign: *(tmp2.dx) = *tmp0
 - no source -
#0003:	 assign: *(tmp2.dy) = *tmp1
 - no source -
#0004:	 assign: tmp3 = tmp4
 - no source -
#0005:	 assign: tmp5 = tmp2
 - no source -
#0006:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp3, tmp5, 16, 8, 0)
 - no source -
#0007:	 assign: tmp6 = tmp4
 - no source -
#0008:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: CGRectMake
#0000:	 assign: *tmp0 = x
 - no source -
#0001:	 assign: *tmp1 = y
 - no source -
#0002:	 assign: *tmp2 = width
 - no source -
#0003:	 assign: *tmp3 = height
 - no source -
#0004:	 noop: can't index ((tmp0.origin).x) by 0
 - no source -
#0005:	 noop: can't index ((tmp0.origin).x) by 1
 - no source -
#0006:	 noop: can't index ((tmp0.size).width) by 0
 - no source -
#0007:	 noop: can't index ((tmp0.size).width) by 1
 - no source -
#0008:	 assign: tmp4 = agg.result
 - no source -
#0009:	 assign: tmp5 = tmp6
 - no source -
#0010:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp4, tmp5, 32, 8, 0) <exit>
 - no source -

CFG: __CGPointEqualToPoint
#0000:	 assign: tmp0 = tmp1
 - no source -
#0001:	 assign: *(tmp0.field0) = point1.coerce0
 - no source -
#0002:	 assign: *(tmp0.field1) = point1.coerce1
 - no source -
#0003:	 assign: tmp2 = tmp3
 - no source -
#0004:	 assign: *(tmp2.field0) = point2.coerce0
 - no source -
#0005:	 assign: *(tmp2.field1) = point2.coerce1
 - no source -
#0006:	 assign: tmp4 = *(tmp1.x) == *(tmp3.x)
 - no source -
#0007:	 if: tmp4 then #0008:	 else #0009:	
 - no source -
#0008:	 assign: tmp5 = *(tmp1.y) == *(tmp3.y)
 - no source -
#0009:	 noop
 - no source -
#0010:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0011:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: __CGSizeEqualToSize
#0000:	 assign: tmp0 = tmp1
 - no source -
#0001:	 assign: *(tmp0.field0) = size1.coerce0
 - no source -
#0002:	 assign: *(tmp0.field1) = size1.coerce1
 - no source -
#0003:	 assign: tmp2 = tmp3
 - no source -
#0004:	 assign: *(tmp2.field0) = size2.coerce0
 - no source -
#0005:	 assign: *(tmp2.field1) = size2.coerce1
 - no source -
#0006:	 assign: tmp4 = *(tmp1.width) == *(tmp3.width)
 - no source -
#0007:	 if: tmp4 then #0008:	 else #0009:	
 - no source -
#0008:	 assign: tmp5 = *(tmp1.height) == *(tmp3.height)
 - no source -
#0009:	 noop
 - no source -
#0010:	 noop: opcode 'LLVMPHI' not supported
 - no source -
#0011:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: UCIsSurrogateHighCharacter
#0000:	 assign: *tmp0 = character
 - no source -
#0001:	 assign: tmp1 = *tmp0 & 64512
 - no source -
#0002:	 assign: tmp2 = tmp1 == 55296
 - no source -
#0003:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0004:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: UCIsSurrogateLowCharacter
#0000:	 assign: *tmp0 = character
 - no source -
#0001:	 assign: tmp1 = *tmp0 & 64512
 - no source -
#0002:	 assign: tmp2 = tmp1 == 56320
 - no source -
#0003:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0004:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: UCGetUnicodeScalarValueForSurrogatePair
#0000:	 assign: *tmp0 = surrogateHigh
 - no source -
#0001:	 assign: *tmp1 = surrogateLow
 - no source -
#0002:	 assign: tmp2 = *tmp0 - 55296
 - no source -
#0003:	 assign: tmp3 = tmp2 << 10
 - no source -
#0004:	 assign: tmp4 = *tmp1 - 56320
 - no source -
#0005:	 assign: tmp5 = tmp3 + tmp4
 - no source -
#0006:	 assign: tmp6 = tmp5 + 65536
 - no source -
#0007:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: SInt64ToWide
#0000:	 assign: *tmp0 = s
 - no source -
#0001:	 noop: opcode 'LLVMLShr' not supported
 - no source -
#0002:	 noop: opcode 'LLVMLShr' not supported
 - no source -
#0003:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0004:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0005:	 assign: tmp1 = *tmp0 & 4294967295
 - no source -
#0006:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0007:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0008:	 assign: tmp2 = tmp3
 - no source -
#0009:	 assign: tmp4 = tmp5
 - no source -
#0010:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp2, tmp4, 8, 2, 0)
 - no source -
#0011:	 assign: tmp6 = tmp3
 - no source -
#0012:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: WideToSInt64
#0000:	 assign: tmp0 = tmp1
 - no source -
#0001:	 assign: *tmp0 = w.coerce
 - no source -
#0002:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0003:	 noop: opcode 'LLVMSExt' not supported
 - no source -
#0004:	 assign: tmp2 = *tmp3 << 32
 - no source -
#0005:	 assign: tmp4 = tmp2 | *(tmp1.lo)
 - no source -
#0006:	 assign: *tmp3 = tmp4
 - no source -
#0007:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: UInt64ToUnsignedWide
#0000:	 assign: *tmp0 = u
 - no source -
#0001:	 noop: opcode 'LLVMLShr' not supported
 - no source -
#0002:	 noop: opcode 'LLVMLShr' not supported
 - no source -
#0003:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0004:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0005:	 assign: tmp1 = *tmp0 & 4294967295
 - no source -
#0006:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0007:	 noop: opcode 'LLVMTrunc' not supported
 - no source -
#0008:	 assign: tmp2 = tmp3
 - no source -
#0009:	 assign: tmp4 = tmp5
 - no source -
#0010:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp2, tmp4, 8, 2, 0)
 - no source -
#0011:	 assign: tmp6 = tmp3
 - no source -
#0012:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: UnsignedWideToUInt64
#0000:	 assign: tmp0 = tmp1
 - no source -
#0001:	 assign: *tmp0 = uw.coerce
 - no source -
#0002:	 assign: *tmp2 = *(tmp1.hi)
 - no source -
#0003:	 assign: tmp3 = *tmp2 << 32
 - no source -
#0004:	 assign: tmp4 = tmp3 | *(tmp1.lo)
 - no source -
#0005:	 assign: *tmp2 = tmp4
 - no source -
#0006:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_packs_pi16
#0000:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0001:	 assign: *tmp0 = __m1.coerce
 - no source -
#0002:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0003:	 assign: *tmp1 = __m2.coerce
 - no source -
#0004:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0005:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0006:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0007:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0008:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0009:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0010:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0011:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0012:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0013:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0014:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0015:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_packs_pi32
#0000:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0001:	 assign: *tmp0 = __m1.coerce
 - no source -
#0002:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0003:	 assign: *tmp1 = __m2.coerce
 - no source -
#0004:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0005:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0006:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0007:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0008:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0009:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0010:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0011:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0012:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0013:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0014:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0015:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_unpackhi_pi16
#0000:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0001:	 assign: *tmp0 = __m1.coerce
 - no source -
#0002:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0003:	 assign: *tmp1 = __m2.coerce
 - no source -
#0004:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0005:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0006:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0007:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0008:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0009:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0010:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0011:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0012:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0013:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0014:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0015:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_unpacklo_pi8
#0000:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0001:	 assign: *tmp0 = __m1.coerce
 - no source -
#0002:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0003:	 assign: *tmp1 = __m2.coerce
 - no source -
#0004:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0005:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0006:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0007:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0008:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0009:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0010:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0011:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0012:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0013:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0014:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0015:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_unpacklo_pi16
#0000:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0001:	 assign: *tmp0 = __m1.coerce
 - no source -
#0002:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0003:	 assign: *tmp1 = __m2.coerce
 - no source -
#0004:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0005:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0006:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0007:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0008:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0009:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0010:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0011:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0012:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0013:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0014:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0015:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_cmpgt_pi8
#0000:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0001:	 assign: *tmp0 = __m1.coerce
 - no source -
#0002:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0003:	 assign: *tmp1 = __m2.coerce
 - no source -
#0004:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0005:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0006:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0007:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0008:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0009:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0010:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0011:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0012:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0013:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0014:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0015:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_cmpgt_pi16
#0000:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0001:	 assign: *tmp0 = __m1.coerce
 - no source -
#0002:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0003:	 assign: *tmp1 = __m2.coerce
 - no source -
#0004:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0005:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0006:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0007:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0008:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0009:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0010:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0011:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0012:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0013:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0014:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0015:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_setzero_si64
#0000:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0001:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0002:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0003:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_set_pi32
#0000:	 assign: *tmp0 = __i1
 - no source -
#0001:	 assign: *tmp1 = __i0
 - no source -
#0002:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0003:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0004:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0005:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0006:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0007:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0008:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_set_pi16
#0000:	 assign: *tmp0 = __s3
 - no source -
#0001:	 assign: *tmp1 = __s2
 - no source -
#0002:	 assign: *tmp2 = __s1
 - no source -
#0003:	 assign: *tmp3 = __s0
 - no source -
#0004:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0005:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0006:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0007:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0008:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0009:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0010:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0011:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0012:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_set_pi8
#0000:	 assign: *tmp0 = __b7
 - no source -
#0001:	 assign: *tmp1 = __b6
 - no source -
#0002:	 assign: *tmp2 = __b5
 - no source -
#0003:	 assign: *tmp3 = __b4
 - no source -
#0004:	 assign: *tmp4 = __b3
 - no source -
#0005:	 assign: *tmp5 = __b2
 - no source -
#0006:	 assign: *tmp6 = __b1
 - no source -
#0007:	 assign: *tmp7 = __b0
 - no source -
#0008:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0009:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0010:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0011:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0012:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0013:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0014:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0015:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0016:	 noop: Can't parse LLVMX86_MMXTypeKind
 - no source -
#0017:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0018:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0019:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0020:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_load_ps
#0000:	 assign: *tmp0 = __p
 - no source -
#0001:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_set1_ps
#0000:	 assign: *tmp0 = __w
 - no source -
#0001:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0002:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0003:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0004:	 noop: opcode 'LLVMInsertElement' not supported
 - no source -
#0005:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0006:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_setzero_ps
#0000:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0001:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: _mm_cvtpi16_ps
#0000:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0001:	 assign: *tmp0 = __a.coerce
 - no source -
#0002:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0003:	 call: tmp1 = _mm_setzero_si64()
 - no source -
#0004:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0005:	 assign: *tmp2 = tmp1
 - no source -
#0006:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0007:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0008:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0009:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0010:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0011:	 call: tmp3 = _mm_cmpgt_pi16(*tmp4, *tmp5)
 - no source -
#0012:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0013:	 assign: *tmp6 = tmp3
 - no source -
#0014:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0015:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0016:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0017:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0018:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0019:	 call: tmp7 = _mm_unpackhi_pi16(*tmp8, *tmp9)
 - no source -
#0020:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0021:	 assign: *tmp10 = tmp7
 - no source -
#0022:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0023:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0024:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0025:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0026:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0027:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0028:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0029:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0030:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0031:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0032:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0033:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0034:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0035:	 call: tmp11 = _mm_unpacklo_pi16(*tmp12, *tmp13)
 - no source -
#0036:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0037:	 assign: *tmp14 = tmp11
 - no source -
#0038:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0039:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0040:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0041:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0042:	 noop: Can't parse LLVMVectorTypeKind
 - no source -
#0043:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: __CGAffineTransformMake
#0000:	 assign: *tmp0 = a
 - no source -
#0001:	 assign: *tmp1 = b
 - no source -
#0002:	 assign: *tmp2 = c
 - no source -
#0003:	 assign: *tmp3 = d
 - no source -
#0004:	 assign: *tmp4 = tx
 - no source -
#0005:	 assign: *tmp5 = ty
 - no source -
#0006:	 assign: *(tmp6.a) = *tmp0
 - no source -
#0007:	 assign: *(tmp6.b) = *tmp1
 - no source -
#0008:	 assign: *(tmp6.c) = *tmp2
 - no source -
#0009:	 assign: *(tmp6.d) = *tmp3
 - no source -
#0010:	 assign: *(tmp6.tx) = *tmp4
 - no source -
#0011:	 assign: *(tmp6.ty) = *tmp5
 - no source -
#0012:	 assign: tmp7 = agg.result
 - no source -
#0013:	 assign: tmp8 = tmp6
 - no source -
#0014:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp7, tmp8, 48, 8, 0) <exit>
 - no source -

CFG: __CGPointApplyAffineTransform
#0000:	 assign: tmp0 = tmp1
 - no source -
#0001:	 assign: *(tmp0.field0) = point.coerce0
 - no source -
#0002:	 assign: *(tmp0.field1) = point.coerce1
 - no source -
#0003:	 assign: tmp2 = *(t.a) * *(tmp1.x)
 - no source -
#0004:	 assign: tmp3 = *(t.c) * *(tmp1.y)
 - no source -
#0005:	 assign: tmp4 = tmp2 + tmp3
 - no source -
#0006:	 assign: tmp5 = tmp4 + *(t.tx)
 - no source -
#0007:	 assign: *(tmp6.x) = tmp5
 - no source -
#0008:	 assign: tmp7 = *(t.b) * *(tmp1.x)
 - no source -
#0009:	 assign: tmp8 = *(t.d) * *(tmp1.y)
 - no source -
#0010:	 assign: tmp9 = tmp7 + tmp8
 - no source -
#0011:	 assign: tmp10 = tmp9 + *(t.ty)
 - no source -
#0012:	 assign: *(tmp6.y) = tmp10
 - no source -
#0013:	 assign: tmp11 = tmp12
 - no source -
#0014:	 assign: tmp13 = tmp6
 - no source -
#0015:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp11, tmp13, 16, 8, 0)
 - no source -
#0016:	 assign: tmp14 = tmp12
 - no source -
#0017:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: __CGSizeApplyAffineTransform
#0000:	 assign: tmp0 = tmp1
 - no source -
#0001:	 assign: *(tmp0.field0) = size.coerce0
 - no source -
#0002:	 assign: *(tmp0.field1) = size.coerce1
 - no source -
#0003:	 assign: tmp2 = *(t.a) * *(tmp1.width)
 - no source -
#0004:	 assign: tmp3 = *(t.c) * *(tmp1.height)
 - no source -
#0005:	 assign: tmp4 = tmp2 + tmp3
 - no source -
#0006:	 assign: *(tmp5.width) = tmp4
 - no source -
#0007:	 assign: tmp6 = *(t.b) * *(tmp1.width)
 - no source -
#0008:	 assign: tmp7 = *(t.d) * *(tmp1.height)
 - no source -
#0009:	 assign: tmp8 = tmp6 + tmp7
 - no source -
#0010:	 assign: *(tmp5.height) = tmp8
 - no source -
#0011:	 assign: tmp9 = tmp10
 - no source -
#0012:	 assign: tmp11 = tmp5
 - no source -
#0013:	 call: llvm.memcpy.p0i8.p0i8.i64(tmp9, tmp11, 16, 8, 0)
 - no source -
#0014:	 assign: tmp12 = tmp10
 - no source -
#0015:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: __NDR_convert__mig_reply_error_t
#0000:	 assign: *tmp0 = x <exit>
 - no source -

CFG: OSAtomicIncrement32
#0000:	 assign: *tmp0 = __theValue
 - no source -
#0001:	 call: tmp1 = OSAtomicAdd32(1, *tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: OSAtomicIncrement32Barrier
#0000:	 assign: *tmp0 = __theValue
 - no source -
#0001:	 call: tmp1 = OSAtomicAdd32Barrier(1, *tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: OSAtomicDecrement32
#0000:	 assign: *tmp0 = __theValue
 - no source -
#0001:	 call: tmp1 = OSAtomicAdd32(-1, *tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: OSAtomicDecrement32Barrier
#0000:	 assign: *tmp0 = __theValue
 - no source -
#0001:	 call: tmp1 = OSAtomicAdd32Barrier(-1, *tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: OSAtomicIncrement64
#0000:	 assign: *tmp0 = __theValue
 - no source -
#0001:	 call: tmp1 = OSAtomicAdd64(1, *tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: OSAtomicIncrement64Barrier
#0000:	 assign: *tmp0 = __theValue
 - no source -
#0001:	 call: tmp1 = OSAtomicAdd64Barrier(1, *tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: OSAtomicDecrement64
#0000:	 assign: *tmp0 = __theValue
 - no source -
#0001:	 call: tmp1 = OSAtomicAdd64(-1, *tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: OSAtomicDecrement64Barrier
#0000:	 assign: *tmp0 = __theValue
 - no source -
#0001:	 call: tmp1 = OSAtomicAdd64Barrier(-1, *tmp0)
 - no source -
#0002:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: main
#0000:	 assign: *tmp0 = 0
 - no source -
#0001:	 assign: *tmp1 = argc
 - no source -
#0002:	 assign: *tmp2 = argv
 - no source -
#0003:	 assign: tmp3 = *L_OBJC_CLASSLIST_REFERENCES_$_
 - no source -
#0004:	 call: tmp4 = objc_msgSend(tmp3, *L_OBJC_SELECTOR_REFERENCES_2)
 - no source -
#0005:	 assign: tmp5 = tmp4
 - no source -
#0006:	 assign: tmp6 = tmp5
 - no source -
#0007:	 call: tmp7 = objc_msgSend(tmp6, *L_OBJC_SELECTOR_REFERENCES_4)
 - no source -
#0008:	 assign: tmp8 = tmp7
 - no source -
#0009:	 assign: *tmp9 = tmp8
 - no source -
#0010:	 call: NSLog(_unnamed_cfstring_)
 - no source -
#0011:	 assign: tmp10 = *tmp9
 - no source -
#0012:	 call: tmp11 = objc_msgSend(tmp10, *L_OBJC_SELECTOR_REFERENCES_6)
 - no source -
#0013:	 noop: opcode 'LLVMRet' not supported <exit>
 - no source -

CFG: <module init>
#0000:	 assign: *L_OBJC_METH_VAR_NAME_ = "autorelease"
 - no source -
#0001:	 assign: *L_OBJC_SELECTOR_REFERENCES_ = L_OBJC_METH_VAR_NAME_
 - no source -
#0002:	 assign: *L_OBJC_CLASSLIST_REFERENCES_$_ = OBJC_CLASS_$_NSAutoreleasePool
 - no source -
#0003:	 assign: *L_OBJC_METH_VAR_NAME_1 = "alloc"
 - no source -
#0004:	 assign: *L_OBJC_SELECTOR_REFERENCES_2 = L_OBJC_METH_VAR_NAME_1
 - no source -
#0005:	 assign: *L_OBJC_METH_VAR_NAME_3 = "init"
 - no source -
#0006:	 assign: *L_OBJC_SELECTOR_REFERENCES_4 = L_OBJC_METH_VAR_NAME_3
 - no source -
#0007:	 assign: *.str = "Hello, World!"
 - no source -
#0008:	 assign: *(*_unnamed_cfstring_.field0) = __CFConstantStringClassReference
 - no source -
#0009:	 assign: *L_OBJC_METH_VAR_NAME_5 = "drain"
 - no source -
#0010:	 assign: *L_OBJC_SELECTOR_REFERENCES_6 = L_OBJC_METH_VAR_NAME_5
 - no source -
#0011:	 assign: **llvm.used = L_OBJC_METH_VAR_NAME_
 - no source -
#0012:	 assign: *(*llvm.used+1) = L_OBJC_SELECTOR_REFERENCES_
 - no source -
#0013:	 assign: *(*llvm.used+2) = L_OBJC_CLASSLIST_REFERENCES_$_
 - no source -
#0014:	 assign: *(*llvm.used+3) = L_OBJC_METH_VAR_NAME_1
 - no source -
#0015:	 assign: *(*llvm.used+4) = L_OBJC_SELECTOR_REFERENCES_2
 - no source -
#0016:	 assign: *(*llvm.used+5) = L_OBJC_METH_VAR_NAME_3
 - no source -
#0017:	 assign: *(*llvm.used+6) = L_OBJC_SELECTOR_REFERENCES_4
 - no source -
#0018:	 assign: *(*llvm.used+7) = L_OBJC_METH_VAR_NAME_5
 - no source -
#0019:	 assign: *(*llvm.used+8) = L_OBJC_SELECTOR_REFERENCES_6 <exit>
 - no source -

