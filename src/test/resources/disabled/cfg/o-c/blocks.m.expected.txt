CFG: defineBlock
#0000:	 assign: *SIMPLE = __block_literal_global <exit>
blocks.m:6 SIMPLE = ^{

CFG: __defineBlock_block_invoke
#0000:	 assign: *tmp0 = .block_descriptor
 - no source -
#0001:	 assign: tmp1 = .block_descriptor
blocks.m:6 SIMPLE = ^{
#0002:	 assign: *tmp2 = tmp1
 - no source -
#0003:	 call: function() <exit>
blocks.m:7 function();

CFG: callBlock
#0000:	 assign: tmp0 = *SIMPLE
blocks.m:12 SIMPLE();
#0001:	 assign: tmp1 = tmp0
blocks.m:12 SIMPLE();
#0002:	 assign: tmp2 = *(tmp0.field3)
blocks.m:12 SIMPLE();
#0003:	 call: tmp2(tmp1) <exit>
blocks.m:12 SIMPLE();

CFG: testBlockVars
#0000:	 assign: *(tmp0.field0) = null
blocks.m:16 __block int count = 0;
#0001:	 assign: *(tmp0.field1) = tmp0
blocks.m:16 __block int count = 0;
#0002:	 assign: *(tmp0.field2) = 536870912
blocks.m:16 __block int count = 0;
#0003:	 assign: *(tmp0.field3) = 32
blocks.m:16 __block int count = 0;
#0004:	 assign: *(tmp0.field4) = 0
blocks.m:16 __block int count = 0;
#0005:	 assign: *(tmp1.field0) = _NSConcreteStackBlock
blocks.m:17 SIMPLE = ^{
#0006:	 assign: *(tmp1.field1) = -1040187392
blocks.m:17 SIMPLE = ^{
#0007:	 assign: *(tmp1.field2) = 0
blocks.m:17 SIMPLE = ^{
#0008:	 assign: *(tmp1.field3) = @__testBlockVars_block_invoke
blocks.m:17 SIMPLE = ^{
#0009:	 assign: *(tmp1.field4) = __block_descriptor_tmp.1
blocks.m:17 SIMPLE = ^{
#0010:	 assign: tmp2 = tmp0
blocks.m:17 SIMPLE = ^{
#0011:	 assign: *(tmp1.field5) = tmp2
blocks.m:17 SIMPLE = ^{
#0012:	 assign: tmp3 = tmp1
blocks.m:17 SIMPLE = ^{
#0013:	 assign: *SIMPLE = tmp3
blocks.m:17 SIMPLE = ^{
#0014:	 assign: tmp4 = tmp0
blocks.m:20 }
#0015:	 call: _Block_object_dispose(tmp4, 8) <exit>
blocks.m:20 }

CFG: __testBlockVars_block_invoke
#0000:	 assign: *tmp0 = .block_descriptor
 - no source -
#0001:	 assign: tmp1 = .block_descriptor
blocks.m:17 SIMPLE = ^{
#0002:	 assign: *tmp2 = tmp1
 - no source -
#0003:	 assign: tmp3 = *(tmp1.field5)
blocks.m:18 count++;
#0004:	 assign: tmp4 = *((*(tmp3.field1).field0)+4) + 1
blocks.m:18 count++;
#0005:	 assign: *((*(tmp3.field1).field0)+4) = tmp4 <exit>
blocks.m:18 count++;

CFG: __copy_helper_block_
#0000:	 assign: *tmp0 = 
 - no source -
#0001:	 assign: *tmp1 = 
 - no source -
#0002:	 assign: tmp2 = *tmp1
blocks.m:0 null
#0003:	 assign: tmp3 = *tmp0
blocks.m:0 null
#0004:	 assign: tmp4 = (tmp3.field5)
blocks.m:0 null
#0005:	 call: _Block_object_assign(tmp4, *(tmp2.field5), 8) <exit>
blocks.m:0 null

CFG: __destroy_helper_block_
#0000:	 assign: *tmp0 = 
 - no source -
#0001:	 assign: tmp1 = *tmp0
blocks.m:0 null
#0002:	 call: _Block_object_dispose(*(tmp1.field5), 8) <exit>
blocks.m:0 null

CFG: <module init>
#0000:	 assign: *.str = "v8@?0"
 - no source -
#0001:	 assign: *(*__block_descriptor_tmp.field0) = 0
 - no source -
#0002:	 assign: *(*__block_literal_global.field0) = _NSConcreteGlobalBlock
 - no source -
#0003:	 assign: *SIMPLE = null
 - no source -
#0004:	 assign: *(*__block_descriptor_tmp.1.field0) = 0
 - no source -
#0005:	 assign: *(*__block_descriptor_tmp.1.field1) = 40
 - no source -
#0006:	 assign: *(*__block_descriptor_tmp.1.field2) = @__copy_helper_block_
 - no source -
#0007:	 assign: *(*__block_descriptor_tmp.1.field3) = @__destroy_helper_block_
 - no source -
#0008:	 assign: *(*__block_descriptor_tmp.1.field4) = .str
 - no source -
#0009:	 assign: *(*__block_descriptor_tmp.1.field5) = 16 <exit>
 - no source -

