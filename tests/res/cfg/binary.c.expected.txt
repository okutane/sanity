CFG: testInt
noop: opcode 'load' not supported
binary.c:4 IR = I0 + I1;
noop: opcode 'load' not supported
binary.c:4 IR = I0 + I1;
noop: opcode 'add' not supported
binary.c:4 IR = I0 + I1;
noop: opcode 'store' not supported
binary.c:4 IR = I0 + I1;
noop: opcode 'load' not supported
binary.c:5 IR = I0 - I1;
noop: opcode 'load' not supported
binary.c:5 IR = I0 - I1;
noop: opcode 'sub' not supported
binary.c:5 IR = I0 - I1;
noop: opcode 'store' not supported
binary.c:5 IR = I0 - I1;
noop: opcode 'load' not supported
binary.c:6 IR = I0 * I1;
noop: opcode 'load' not supported
binary.c:6 IR = I0 * I1;
noop: opcode 'mul' not supported
binary.c:6 IR = I0 * I1;
noop: opcode 'store' not supported
binary.c:6 IR = I0 * I1;
noop: opcode 'load' not supported
binary.c:7 IR = I0 / I1;
noop: opcode 'load' not supported
binary.c:7 IR = I0 / I1;
noop: opcode 'sdiv' not supported
binary.c:7 IR = I0 / I1;
noop: opcode 'store' not supported
binary.c:7 IR = I0 / I1;
noop: opcode 'load' not supported
binary.c:8 IR = I0 % I1;
noop: opcode 'load' not supported
binary.c:8 IR = I0 % I1;
noop: opcode 'srem' not supported
binary.c:8 IR = I0 % I1;
noop: opcode 'store' not supported
binary.c:8 IR = I0 % I1;
noop: opcode 'load' not supported
binary.c:9 IR = I0 & I1;
noop: opcode 'load' not supported
binary.c:9 IR = I0 & I1;
noop: opcode 'and' not supported
binary.c:9 IR = I0 & I1;
noop: opcode 'store' not supported
binary.c:9 IR = I0 & I1;
noop: opcode 'load' not supported
binary.c:10 IR = I0 | I1;
noop: opcode 'load' not supported
binary.c:10 IR = I0 | I1;
noop: opcode 'or' not supported
binary.c:10 IR = I0 | I1;
noop: opcode 'store' not supported
binary.c:10 IR = I0 | I1;
noop: opcode 'load' not supported
binary.c:11 IR = I0 ^ I1;
noop: opcode 'load' not supported
binary.c:11 IR = I0 ^ I1;
noop: opcode 'xor' not supported
binary.c:11 IR = I0 ^ I1;
noop: opcode 'store' not supported
binary.c:11 IR = I0 ^ I1;
noop: opcode 'load' not supported
binary.c:12 IR = I0 << I1;
noop: opcode 'load' not supported
binary.c:12 IR = I0 << I1;
noop: opcode 'shl' not supported
binary.c:12 IR = I0 << I1;
noop: opcode 'store' not supported
binary.c:12 IR = I0 << I1;
noop: opcode 'load' not supported
binary.c:13 IR = I0 >> I1;
noop: opcode 'load' not supported
binary.c:13 IR = I0 >> I1;
noop: opcode 'ashr' not supported
binary.c:13 IR = I0 >> I1;
noop: opcode 'store' not supported
binary.c:13 IR = I0 >> I1;
noop: opcode 'ret' not supported
binary.c:14 }

