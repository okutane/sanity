CFG: testImplicitIf
#0000:	 assign: tmp0 = *I != 0
conditions.c:7 if (I) {
#0001:	 if: tmp0 then #0002:	 else #0003:
conditions.c:7 if (I) {
#0002:	 call: foo()
conditions.c:8 foo();
#0003:	 noop
 - no source -
#0004:	 return <exit>
conditions.c:10 }

CFG: testImplicitIfElse
#0000:	 assign: tmp0 = *I != 0
conditions.c:13 if (I) {
#0001:	 if: tmp0 then #0002:	 else #0003:
conditions.c:13 if (I) {
#0002:	 call: foo()
conditions.c:14 foo();
#0004:	 noop
 - no source -
#0005:	 return <exit>
conditions.c:18 }
#0003:	 call: bar() next: #0004:
conditions.c:16 bar();

CFG: testExplicitIf
#0000:	 assign: tmp0 = *I != 0
conditions.c:21 if (I != 0) {
#0001:	 if: tmp0 then #0002:	 else #0003:
conditions.c:21 if (I != 0) {
#0002:	 call: foo()
conditions.c:22 foo();
#0003:	 noop
 - no source -
#0004:	 return <exit>
conditions.c:24 }

CFG: <module init>
#0000:	 assign: *I = 0
 - no source -
#0001:	 assign: *I_P = null <exit>
 - no source -

