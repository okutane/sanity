CFG: testGlobal
#0000:	 assign: tmp0 = *I != 0
conditions.c:4 if (I);
Possible states:
State 0
  Symbols:
  Memory:
  Expressions:

#0001:	 if: tmp0 then #0002:	 else #0002:
conditions.c:4 if (I);
Possible states:
State 0
  Symbols:
    I -> U0
    tmp0 -> U1
  Memory:
    U0 -> U2
  Expressions:
    U2 != 0 -> U1

#0002:	 noop
 - no source -
Possible states:
State 0
  Symbols:
    I -> U0
    tmp0 -> U1
  Memory:
    U0 -> U2
  Expressions:
    U2 != 0 -> U1

#0003:	 call: tmp1 = dump()
conditions.c:5 dump();
Possible states:
State 0
  Symbols:
    I -> U0
    tmp0 -> U1
  Memory:
    U0 -> U2
  Expressions:
    U2 != 0 -> U1

#0004:	 return <exit>
conditions.c:6 }
Possible states:
State 0
  Symbols:
    I -> U0
    tmp0 -> U1
  Memory:
    U0 -> U2
  Expressions:
    U2 != 0 -> U1


CFG: testPtrParam
#0000:	 assign: *tmp0 = <param 0>
 - no source -
Possible states:
State 0
  Symbols:
  Memory:
  Expressions:

#0001:	 assign: tmp1 = *tmp0 != null
conditions.c:9 if (p);
Possible states:
State 0
  Symbols:
    <param 0> -> U0
    tmp0 -> U1
  Memory:
    U1 -> U0
  Expressions:

#0002:	 if: tmp1 then #0003:	 else #0003:
conditions.c:9 if (p);
Possible states:
State 0
  Symbols:
    <param 0> -> U0
    tmp0 -> U1
    tmp1 -> U2
  Memory:
    U1 -> U0
  Expressions:
    U0 != null -> U2

#0003:	 noop
 - no source -
Possible states:
State 0
  Symbols:
    <param 0> -> U0
    tmp0 -> U1
    tmp1 -> U2
  Memory:
    U1 -> U0
  Expressions:
    U0 != null -> U2

#0004:	 call: tmp2 = dump()
conditions.c:10 dump();
Possible states:
State 0
  Symbols:
    <param 0> -> U0
    tmp0 -> U1
    tmp1 -> U2
  Memory:
    U1 -> U0
  Expressions:
    U0 != null -> U2

#0005:	 return <exit>
conditions.c:11 }
Possible states:
State 0
  Symbols:
    <param 0> -> U0
    tmp0 -> U1
    tmp1 -> U2
  Memory:
    U1 -> U0
  Expressions:
    U0 != null -> U2


CFG: <module init>
#0000:	 assign: *I = 0 <exit>
 - no source -
Possible states:
State 0
  Symbols:
  Memory:
  Expressions:


